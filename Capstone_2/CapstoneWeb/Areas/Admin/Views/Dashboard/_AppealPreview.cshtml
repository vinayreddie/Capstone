@model Capstone.Models.ApplicationModel
@{
    Layout = null;
}

<script src="~/Content/plugins/Print/jquery.printElement.js"></script>
<div id="divPrint">
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.TransactionId)
    @Html.HiddenFor(model => model.PCPNDTModel.FacilityModel.DistrictId,new {@id="hfDistrictId" })

    @if (Model.APMCEModel != null)
    {
        <fieldset class="scheduler-border">
            <legend class="scheduler-border">Hospital (APMCE ACT,2002)</legend>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Registration</legend>

                <div class="row">
                    @Html.HiddenFor(model => model.Id)
                    <div class="col-md-offset-1 col-md-10">
                        Whether Registration is sought for Main Facility or branches also, if so details (separate application shall be submitted for each branch)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2" style="font-size: larger;">
                        @Html.LabelFor(model => model.APMCEModel.RegistrationModel.FacilityType, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3" style="font-size: large;">
                        @Html.DisplayFor(model => model.APMCEModel.RegistrationModel.FacilityType)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.RegistrationModel.Name, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.RegistrationModel.Name)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.RegistrationModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.RegistrationModel.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.RegistrationModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.RegistrationModel.MandalName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.RegistrationModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.RegistrationModel.VillageName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.RegistrationModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.RegistrationModel.HouseNumber)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.RegistrationModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.RegistrationModel.StreetName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.RegistrationModel.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.RegistrationModel.PINCode)
                    </div>
                </div>

            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Address</legend>

                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.CorrespondingAddress.Name, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.CorrespondingAddress.Name)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.CorrespondingAddress.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.CorrespondingAddress.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.CorrespondingAddress.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.CorrespondingAddress.MandalName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.CorrespondingAddress.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.CorrespondingAddress.VillageName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.CorrespondingAddress.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.CorrespondingAddress.HouseNumber)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.CorrespondingAddress.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.CorrespondingAddress.StreetName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.CorrespondingAddress.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.CorrespondingAddress.PINCode)
                    </div>
                </div>

            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Trust</legend>
                <form id="formTrust">
                    <div class="row">
                        <div class="col-md-1">
                            @Html.LabelFor(model => model.APMCEModel.TrustModel.Name, new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.DisplayFor(model => model.APMCEModel.TrustModel.Name)
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.APMCEModel.TrustModel.DistrictId, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.APMCEModel.TrustModel.DistrictName)
                        </div>
                        <div class="col-md-1">
                            @Html.LabelFor(model => model.APMCEModel.TrustModel.MandalId, new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.DisplayFor(model => model.APMCEModel.TrustModel.MandalName)
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">
                            @Html.LabelFor(model => model.APMCEModel.TrustModel.VillageId, new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.DisplayFor(model => model.APMCEModel.TrustModel.VillageName)
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.APMCEModel.TrustModel.HouseNumber, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.APMCEModel.TrustModel.HouseNumber)
                        </div>
                        <div class="col-md-1">
                            @Html.LabelFor(model => model.APMCEModel.TrustModel.StreetName, new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.DisplayFor(model => model.APMCEModel.TrustModel.StreetName)
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">
                            @Html.LabelFor(model => model.APMCEModel.TrustModel.PINCode, new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.DisplayFor(model => model.APMCEModel.TrustModel.PINCode)
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.APMCEModel.TrustModel.EstablishedDate, new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Model.APMCEModel.TrustModel.EstablishedDate.ToString("dd-MM-yyyy")
                        </div>
                    </div>
                </form>

            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Accommodation</legend>
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.APMCEModel.Accommadation.EstablishmentTypeName, "Establishment Owned by", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.HiddenFor(model => model.APMCEModel.Accommadation.Id)
                        @Html.DisplayFor(model => model.APMCEModel.Accommadation.EstablishmentTypeName, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.Accommadation.FromDate, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Model.APMCEModel.Accommadation.FromDate.ToString("dd-MM-yyyy")
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.APMCEModel.Accommadation.ToDate, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Model.APMCEModel.Accommadation.ToDate.ToString("dd-MM-yyyy")
                    </div>
                </div>
                <div class="row" id="divAccommodationUpload">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.APMCEModel.Accommadation.UploadedFilePath, new { @class = "control-label", @id = "lblAccommodationLabel" })
                    </div>
                    <div class="col-md-3">
                        @if (Model.APMCEModel.Accommadation.UploadedFilePath != null)
                        {
                            var addressindex = Model.APMCEModel.Accommadation.UploadedFilePath.LastIndexOf("/");
                            var addressfileName = Model.APMCEModel.Accommadation.UploadedFilePath.Substring(addressindex + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                         new { Area = "", path = Model.APMCEModel.Accommadation.UploadedFilePath, downloadName = addressfileName }, null);
                        }

                    </div>
                </div>

            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Establishment</legend>
                <form id="formEstablishment">
                    <div class="row">
                        <div class="col-md-offset-1 col-md-2">
                            @Html.LabelFor(model => model.APMCEModel.EstablishmentModel.EstablishmentDate, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Model.APMCEModel.EstablishmentModel.EstablishmentDate.ToString("dd-MM-yyyy")
                        </div>
                    </div>
                    <fieldset class="scheduler-border">
                        <legend class="scheduler-border">Total Area of Establishment</legend>
                        <div class="row">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.APMCEModel.EstablishmentModel.OpenArea, new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">

                                @Html.DisplayFor(model => model.APMCEModel.EstablishmentModel.OpenArea, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col-md-3">

                                @if (Model.APMCEModel.EstablishmentModel.OpenAreaFilePath != null)
                                {
                                    var addressindex = Model.APMCEModel.EstablishmentModel.OpenAreaFilePath.LastIndexOf("/");
                                    var addressfileName = Model.APMCEModel.EstablishmentModel.OpenAreaFilePath.Substring(addressindex + 1);
                                    @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                         new { Area = "", path = Model.APMCEModel.EstablishmentModel.OpenAreaFilePath, downloadName = addressfileName }, null);
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.APMCEModel.EstablishmentModel.ConstructionArea, new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">
                                @Html.DisplayFor(model => model.APMCEModel.EstablishmentModel.ConstructionArea, new { htmlAttributes = new { @class = "form-control" } })

                            </div>
                            <div class="col-md-7">

                                @if (Model.APMCEModel.EstablishmentModel.ConstructionAreaFilePath != null)
                                {
                                    var addressindex = Model.APMCEModel.EstablishmentModel.ConstructionAreaFilePath.LastIndexOf("/");
                                    var addressfileName = Model.APMCEModel.EstablishmentModel.ConstructionAreaFilePath.Substring(addressindex + 1);
                                    @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                         new { Area = "", path = Model.APMCEModel.EstablishmentModel.ConstructionAreaFilePath, downloadName = addressfileName }, null);
                                }
                            </div>
                        </div>
                    </fieldset>

                </form>

            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Services Offered</legend>
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.APMCEModel.OfferedServices.BedStrength, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.HiddenFor(model => model.APMCEModel.OfferedServices.Id)
                        @Html.DisplayFor(model => model.APMCEModel.OfferedServices.BedStrength, new { htmlAttributes = new { @class = "form-control numeric" } })

                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.APMCEModel.OfferedServices.OfferedServices, new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">

                        @Html.DisplayFor(model => model.APMCEModel.OfferedServices.OfferedServices, new { htmlAttributes = new { @class = "form-control numeric" } })
                    </div>
                </div>
            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Staff Details</legend>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Items List</legend>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="box">
                                <div class="box-body table-responsive no-padding">
                                    <table id="tblStaffdetails" class="table table-hover">
                                        <tr>
                                            <th>S.No.</th>
                                            <th>Designation</th>
                                            <th>Name</th>
                                            <th>RegistrationNo</th>
                                            <th>Uploaded File</th>
                                            <th>Email</th>
                                            <th>Mobile</th>
                                            <th>Speciality</th>
                                            <th></th>
                                        </tr>
                                        @if (Model.APMCEModel.StaffDetailsList != null)
                                        {
                                            for (int i = 0; i < Model.APMCEModel.StaffDetailsList.Count; i++)
                                            {
                                                <tr>
                                                    <td> @Convert.ToInt32(@i + 1)</td>
                                                    <td>@Model.APMCEModel.StaffDetailsList[i].StaffDesignation</td>
                                                    <td>@Model.APMCEModel.StaffDetailsList[i].Name</td>
                                                    <td>@Model.APMCEModel.StaffDetailsList[i].RegistrationNumber</td>
                                                    <td>
                                                        @if (Model.APMCEModel.StaffDetailsList[i].UploadedFilePath != null)
                                                        {
                                                            var addressindex = Model.APMCEModel.StaffDetailsList[i].UploadedFilePath.LastIndexOf("/");
                                                            var addressfileName = Model.APMCEModel.StaffDetailsList[i].UploadedFilePath.Substring(addressindex + 1);
                                                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.APMCEModel.StaffDetailsList[i].UploadedFilePath, downloadName = addressfileName }, null);
                                                        }
                                                    </td>
                                                    <td>@Model.APMCEModel.StaffDetailsList[i].Email</td>
                                                    <td>@Model.APMCEModel.StaffDetailsList[i].PhoneNumber</td>
                                                    <td>@Model.APMCEModel.StaffDetailsList[i].Speciality</td>
                                                    @*<td><input type='button' value='Delete' onclick='DeleteStaffDetails(@i);' /></td>*@
                                                </tr>
                                            }
                                        }
                                    </table>
                                </div>
                                <!-- /.box-body -->
                            </div>
                            <!-- /.box -->
                        </div>
                    </div>
                </fieldset>
            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Equipment Furniture</legend>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Items List</legend>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="box">
                                <div class="box-body table-responsive no-padding">
                                    <table id="tblInfraStructure" class="table table-hover">
                                        <tr>
                                            <th>S.No.</th>
                                            <th>Name</th>
                                            <th>Quantity</th>
                                            <th>Model</th>
                                            <th>Remarks</th>
                                            @*<th>Uploaded File</th>*@


                                            <th></th>
                                        </tr>
                                        @if (Model.APMCEModel.InfraStructureList != null)
                                        {
                                            for (int i = 0; i < Model.APMCEModel.InfraStructureList.Count; i++)
                                            {
                                                <tr>
                                                    <td> @Convert.ToInt32(@i + 1)</td>
                                                    <td>@Model.APMCEModel.InfraStructureList[i].Name</td>
                                                    <td>@Model.APMCEModel.InfraStructureList[i].Quantity</td>
                                                    <td>@Model.APMCEModel.InfraStructureList[i].ItemModel</td>
                                                    <td>@Model.APMCEModel.InfraStructureList[i].Remarks</td>
                                                    <td>
                                                        @if (Model.APMCEModel.InfraStructureList[i].UploadedFilePath != null)
                                                        {
                                                            var addressindex = Model.APMCEModel.InfraStructureList[i].UploadedFilePath.LastIndexOf("/");
                                                            var addressfileName = Model.APMCEModel.InfraStructureList[i].UploadedFilePath.Substring(addressindex + 1);
                                                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.APMCEModel.InfraStructureList[i].UploadedFilePath, downloadName = addressfileName }, null);
                                                        }
                                                    </td>



                                                </tr>
                                            }
                                        }
                                    </table>
                                </div>
                                <!-- /.box-body -->
                            </div>
                            <!-- /.box -->
                        </div>
                    </div>
                </fieldset>

            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Facilities Available</legend>
                <div class="row">
                    <div class="col-md-offset-1 col-md-4">
                        @Html.LabelFor(model => model.APMCEModel.FacilitiesAvailableModel.HasLaborRoom, new { @class = "control-label" })
                    </div>
                    <div class="col-md-1">
                        @if (Model.APMCEModel.FacilitiesAvailableModel.HasLaborRoom)
                        {<text>Yes</text>}
                        else
                        {<text>No</text>}
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-offset-1 col-md-4">
                        @Html.LabelFor(model => model.APMCEModel.FacilitiesAvailableModel.HasOperationTheater, new { @class = "control-label" })
                    </div>
                    <div class="col-md-1">
                        @if (Model.APMCEModel.FacilitiesAvailableModel.HasOperationTheater)
                        {<text>Yes</text>}
                        else
                        {<text>No</text>}
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-offset-1 col-md-4">
                        @Html.LabelFor(model => model.APMCEModel.FacilitiesAvailableModel.HasDiagnosticFacility, new { @class = "control-label" })
                    </div>
                    <div class="col-md-1">
                        @if (Model.APMCEModel.FacilitiesAvailableModel.HasDiagnosticFacility)
                        {<text>Yes</text>}
                        else
                        {<text>No</text>}
                    </div>
                </div>
                <br /><br />
                <div class="row" id="divDeclarationStampDetails">

                    @if (Model.APMCEModel.FacilitiesAvailableModel.DeclarationStampFilePath != null && Model.APMCEModel.FacilitiesAvailableModel.DeclarationStampFilePath != "" && Model.APMCEModel.FacilitiesAvailableModel.DeclarationStampFilePath != string.Empty)
                    {
                        <div class="col-md-5">
                            @Html.LabelFor(model => model.APMCEModel.FacilitiesAvailableModel.DeclarationStampFilePath, new { @class = "control-label" })
                        </div>
                        <div class="col-md-6">
                            @if (!string.IsNullOrEmpty(Model.APMCEModel.FacilitiesAvailableModel.DeclarationStampFilePath))
                            {
                                var index = Model.APMCEModel.FacilitiesAvailableModel.DeclarationStampFilePath.LastIndexOf("/");
                                var fileName = Model.APMCEModel.FacilitiesAvailableModel.DeclarationStampFilePath.Substring(index + 1);
                                @Html.ActionLink(fileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.APMCEModel.FacilitiesAvailableModel.DeclarationStampFilePath, downloadName = fileName },
                                                    null
                                                    );
                            }

                        </div>
                    }

                </div>
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.APMCEModel.FacilitiesAvailableModel.OtherInformationDescription, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.APMCEModel.FacilitiesAvailableModel.OtherInformationDescription, new { htmlAttributes = new { @class = "form-control" } })

                    </div>
                    <div class="col-md-6">
                        @if (!string.IsNullOrEmpty(Model.APMCEModel.FacilitiesAvailableModel.OtherInformationDocumentPath))
                        {
                            var index = Model.APMCEModel.FacilitiesAvailableModel.OtherInformationDocumentPath.LastIndexOf("/");
                            var fileName = Model.APMCEModel.FacilitiesAvailableModel.OtherInformationDocumentPath.Substring(index + 1);
                            @Html.ActionLink(fileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.APMCEModel.FacilitiesAvailableModel.OtherInformationDocumentPath, downloadName = fileName },
                                                    null
                                                    );
                        }

                    </div>
                </div>

            </fieldset>
        </fieldset>
    }

    @if (Model.PCPNDTModel != null)
            {
        <fieldset class="scheduler-border">
            <legend class="scheduler-border">Diagnostic Centre (PCPNDT ACT,1994)</legend>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Applicant</legend>
                <div class="row">
                    <div class="col-md-8"></div>
                    <div class="col-md-4">
                        <div>
                            @if (!string.IsNullOrEmpty(Model.PCPNDTModel.ApplicantModel.ApplicantPhoto))
                            {
                                var Image = "/Uploads/" + Model.PCPNDTModel.ApplicantModel.ApplicantPhoto;
                                <img id="targetImg" src="@Url.Content("~/Uploads/"+Model.PCPNDTModel.ApplicantModel.ApplicantPhoto)" style="height:100px;width:100px;margin-left:12px" />
                            }

                        </div>
                    </div>


                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.HiddenFor(model => model.Id)
                        @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.Name, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.ApplicantModel.Name)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.ApplicantRole, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.ApplicantModel.ApplicantRole)
                    </div>
                    <div class="col-md-1 applicantroleother" hidden>
                        @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.ApplicantRoleOther, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 applicantroleother" hidden>
                        @Html.DisplayFor(model => model.PCPNDTModel.ApplicantModel.ApplicantRoleOther)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.ApplicantModel.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.ApplicantModel.MandalName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.ApplicantModel.VillageName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.Aadhar, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.ApplicantModel.Aadhar)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.PAN, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.ApplicantModel.PAN)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.ApplicantModel.HouseNumber)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.ApplicantModel.StreetName)
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.PCPNDTModel.ApplicantModel.PINCode)
                    </div>
                </div>
                @*<div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.PCPNDTModel.ApplicantModel.ApplicantPhoto, new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @if (!string.IsNullOrEmpty(Model.PCPNDTModel.ApplicantModel.ApplicantPhoto))
                            {
                                var Image = "/Uploads/" + Model.PCPNDTModel.ApplicantModel.ApplicantPhoto;
                                <img id="targetImg" src=@Image style="height:100px;width:100px;margin-left:12px" />
                            }

                        </div>



                    </div>*@
            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Facility</legend>
                <div class="row">
                    <div class="col-md-offset-1 col-md-3">
                        @Html.CheckBox("facilitytypepreview", new { @value = "1", @disabled = "disabled" }) Generic Counselling Center
                    </div>
                    <div class="col-md-3">
                        @Html.CheckBox("facilitytypepreview", new { @value = "2", @disabled = "disabled" }) Ultra Sound Clinic
                    </div>
                    <div class="col-md-4">
                        @Html.CheckBox("facilitytypepreview", new { @value = "3", @disabled = "disabled" }) Imaging Center
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-offset-1 col-md-3">
                        @Html.CheckBox("facilitytypepreview", new { @value = "4", @disabled = "disabled" }) Genetic Clinic
                    </div>
                    <div class="col-md-3">
                        @Html.CheckBox("facilitytypepreview", new { @value = "5", @disabled = "disabled" }) Generic Laboratory
                    </div>
                    <div class="col-md-4">
                        @Html.CheckBox("facilitytypepreview", new { @value = "6", @disabled = "disabled" }) Assisted Reproductive Technology (ART)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.Name, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.Name)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.MandalName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.VillageName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.HouseNumber)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.StreetName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.Phone, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.Phone)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.Email, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.Email)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.Fax, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.Fax)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.Telegraph, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.Telegraph)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.Telex, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.Telex)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.PINCode)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.AddressProofPath, new { @class = "control-label" })
                    </div>
                    <div class="col-md-1">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.AddressProofType)
                    </div>
                    <div class="col-md-3">
                        @if (Model.PCPNDTModel.FacilityModel.AddressProofPath != null)
                        {
                            var addressindex = Model.PCPNDTModel.FacilityModel.AddressProofPath.LastIndexOf("/");
                            var addressfileName = Model.PCPNDTModel.FacilityModel.AddressProofPath.Substring(addressindex + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                         new { Area = "", path = Model.PCPNDTModel.FacilityModel.AddressProofPath, downloadName = addressfileName }, null);
                        }

                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.BuildingLayoutPath, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @if (Model.PCPNDTModel.FacilityModel.BuildingLayoutPath != null)
                        {
                            var addressindex = Model.PCPNDTModel.FacilityModel.BuildingLayoutPath.LastIndexOf("/");
                            var addressfileName = Model.PCPNDTModel.FacilityModel.BuildingLayoutPath.Substring(addressindex + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                         new { Area = "", path = Model.PCPNDTModel.FacilityModel.BuildingLayoutPath, downloadName = addressfileName }, null);
                        }

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.FacilityModel.OwnerShipPath, new { @class = "control-label" })
                    </div>
                    <div class="col-md-1">
                        @Html.DisplayFor(model => model.PCPNDTModel.FacilityModel.OwnershipType)
                    </div>
                    <div class="col-md-3">
                        @if (Model.PCPNDTModel.FacilityModel.OwnerShipPath != null)
                        {
                            var addressindex = Model.PCPNDTModel.FacilityModel.OwnerShipPath.LastIndexOf("/");
                            var addressfileName = Model.PCPNDTModel.FacilityModel.OwnerShipPath.Substring(addressindex + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                         new { Area = "", path = Model.PCPNDTModel.FacilityModel.OwnerShipPath, downloadName = addressfileName }, null);
                        }

                    </div>
                </div>
            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Tests</legend>
                @{
                    if (Model.PCPNDTModel.FacilityModel.Faclities.Contains("4")
                            || Model.PCPNDTModel.FacilityModel.Faclities.Contains("5"))
                    {
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Invasive</legend>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-3">
                                    @Html.HiddenFor(model => model.PCPNDTModel.TestsModel.Id)
                                    @Html.CheckBox("testinvasivepreview", new { @value = "1", @disabled = "disabled" }) Amniocentesis
                                </div>
                                <div class="col-md-3">
                                    @Html.CheckBox("testinvasivepreview", new { @value = "2", @disabled = "disabled" }) Biochemical
                                </div>
                                <div class="col-md-4">
                                    @Html.CheckBox("testinvasivepreview", new { @value = "3", @disabled = "disabled" }) Chorionic Villi Aspiration
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-3">
                                    @Html.CheckBox("testinvasivepreview", new { @value = "4", @disabled = "disabled" }) Molecular Studies
                                </div>
                                <div class="col-md-3">
                                    @Html.CheckBox("testinvasivepreview", new { @value = "5", @disabled = "disabled" }) Chromosomal
                                </div>
                            </div>
                        </fieldset>
                    }
                    if (Model.PCPNDTModel.FacilityModel.Faclities.Contains("2") || Model.PCPNDTModel.FacilityModel.Faclities.Contains("3")
                                    || Model.PCPNDTModel.FacilityModel.Faclities.Contains("4") || Model.PCPNDTModel.FacilityModel.Faclities.Contains("5"))
                    {
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Non-Invasive</legend>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-3">
                                    @Html.CheckBox("testnoninvasivepreview", new { @value = "6", @disabled = "disabled" }) Ultra Sonography
                                </div>
                            </div>
                        </fieldset>
                    }
                    if (Model.PCPNDTModel.FacilityModel.Faclities.Contains("1") || Model.PCPNDTModel.FacilityModel.Faclities.Contains("6"))
                    {
                        <fieldset class="scheduler-border" id="fsTestsRemarks">
                            <legend class="scheduler-border">Remarks</legend>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-1">
                                    @Html.LabelFor(model => model.PCPNDTModel.TestsModel.Remarks, new { @class = "control-label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.DisplayFor(model => model.PCPNDTModel.TestsModel.Remarks)
                                </div>
                            </div>
                        </fieldset>
                    }
                }

            </fieldset>


            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Equipment</legend>
                <div class="row">
                    <div class="col-xs-12">
                        <div class="box">
                            <div class="box-body table-responsive no-padding">
                                <table id="tblEquiments" class="table table-hover">
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Name</th>
                                        <th>Serial No.</th>
                                        <th>Model</th>
                                        <th>Make</th>
                                        <th>Type</th>
                                        <th></th>
                                    </tr>
                                    @for (int i = 0; i < Model.PCPNDTModel.EquipmentList.Count; i++)
                                    {
                                        <tr>
                                            <td>@Convert.ToInt32(i + 1)</td>
                                            <td>@Model.PCPNDTModel.EquipmentList[i].Name</td>
                                            <td>@Model.PCPNDTModel.EquipmentList[i].SerialNumber</td>
                                            <td>@Model.PCPNDTModel.EquipmentList[i].MachineModel</td>
                                            <td>@Model.PCPNDTModel.EquipmentList[i].Make</td>
                                            <td>@Model.PCPNDTModel.EquipmentList[i].Type</td>
                                            <td>
                                                @if (Model.PCPNDTModel.EquipmentList[i].Type == "New")
                                                {
                                                    <div>3</div>
                                                }
                                                else
                                                {
                                                    <div>4</div>
                                                }

                                            </td>
                                            @*<td>
                                                                                            @if (!string.IsNullOrEmpty(Model.PCPNDTModel.EquipmentList[i].UploadedFilePath))
                                                                                            {
                                                                                                var layoutindex = Model.PCPNDTModel.EquipmentList[i].UploadedFilePath.LastIndexOf("/");
                                                                                                var layoutfileName = Model.PCPNDTModel.EquipmentList[i].UploadedFilePath.Substring(layoutindex + 1);
                                                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                new { Area = "", path = Model.PCPNDTModel.EquipmentList[i].UploadedFilePath, downloadName = layoutfileName }, null);
                                                                                            }
                                                                                        </td>*@
                                        </tr>
                                    }
                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                </div>

            </fieldset>


            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Facilities</legend>
                @{
                    if (Model.PCPNDTModel.FacilityModel.Faclities.Contains("4") || Model.PCPNDTModel.FacilityModel.Faclities.Contains("5"))
                    {
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Tests</legend>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-3">
                                    @Html.CheckBox("facilitytestpreview", new { @value = "1", @disabled = "disabled" }) Amniocentesis
                                </div>
                                <div class="col-md-3">
                                    @Html.CheckBox("facilitytestpreview", new { @value = "2", @disabled = "disabled" }) Ultra Sound
                                </div>
                                <div class="col-md-4">
                                    @Html.CheckBox("facilitytestpreview", new { @value = "3", @disabled = "disabled" }) Chorionic Villi Aspiration
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-3">
                                    @Html.CheckBox("facilitytestpreview", new { @value = "4", @disabled = "disabled" }) Foetal Biopsy
                                </div>
                                <div class="col-md-3">
                                    @Html.CheckBox("facilitytestpreview", new { @value = "5", @disabled = "disabled" }) Foetoscopy
                                </div>
                                <div class="col-md-4">
                                    @Html.CheckBox("facilitytestpreview", new { @value = "6", @disabled = "disabled" }) Cordocentesis
                                </div>
                            </div>
                        </fieldset>
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Studies</legend>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-3">
                                    @Html.CheckBox("facilitystudiespreview", new { @value = "7", @disabled = "disabled" }) Chromosomal Studies
                                </div>
                                <div class="col-md-3">
                                    @Html.CheckBox("facilitystudiespreview", new { @value = "8", @disabled = "disabled" }) Biochemical Studies
                                </div>
                                <div class="col-md-4">
                                    @Html.CheckBox("facilitystudiespreview", new { @value = "9", @disabled = "disabled" }) Molecular Studies
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-3">
                                    @Html.CheckBox("facilitystudiespreview", new { @value = "10", @disabled = "disabled" }) Preimplantatioin Genetic Diagnosis
                                </div>
                            </div>
                        </fieldset>
                    }
                    if (Model.PCPNDTModel.FacilityModel.Faclities.Contains("1") || Model.PCPNDTModel.FacilityModel.Faclities.Contains("2")
                                    || Model.PCPNDTModel.FacilityModel.Faclities.Contains("3") || Model.PCPNDTModel.FacilityModel.Faclities.Contains("6"))
                    {
                        <fieldset class="scheduler-border" id="fsFacilityRemarks">
                            <legend class="scheduler-border">Remarks</legend>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-1">
                                    @Html.LabelFor(model => model.PCPNDTModel.FacilitiesModel.Remarks, new { @class = "control-label" })
                                </div>
                                <div class="col-md-6">
                                    @Html.DisplayFor(model => model.PCPNDTModel.FacilitiesModel.Remarks)
                                </div>
                            </div>
                        </fieldset>
                    }
                }

            </fieldset>


            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Employees</legend>
                <div class="row">
                    <div class="col-xs-12">
                        <div class="box">
                            <div class="box-body table-responsive no-padding">
                                <table id="tblEmployees" class="table table-hover">
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Name</th>
                                        <th>Designation</th>
                                        <th>Experience</th>
                                        <th>Registration Number</th>
                                        <th>Uploaded File</th>
                                        <th></th>
                                    </tr>
                                    @for (int i = 0; i < Model.PCPNDTModel.EmployeeList.Count; i++)
                                    {
                                        <tr>
                                            <td> @Convert.ToInt32(@i + 1)</td>
                                            <td>
                                                @{
                                                    var name = Model.PCPNDTModel.EmployeeList[i].Name;
                                                    if (Model.PCPNDTModel.EmployeeList[i].SubDesignation != "None")
                                                    {
                                                        name = Model.PCPNDTModel.EmployeeList[i].Name + ". " + Model.PCPNDTModel.EmployeeList[i].SubDesignation;
                                                    }
                                                }
                                                @name
                                            </td>
                                            <td>@Model.PCPNDTModel.EmployeeList[i].DesignationName</td>
                                            <td>@Model.PCPNDTModel.EmployeeList[i].ExpYears Years, @Model.PCPNDTModel.EmployeeList[i].ExpMonths Months, @Model.PCPNDTModel.EmployeeList[i].ExpDays Days</td>
                                            <td>@Model.PCPNDTModel.EmployeeList[i].RegistrationNumber</td>

                                            <td>
                                                @{
                                                    var documentsCount = Model.PCPNDTModel.EmployeeList[i].UploadDocuments.Count;
                                                }
                                                @documentsCount Uploads
                                            </td>
                                        </tr>
                                                    }
                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                </div>
            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Ownership & Institution</legend>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.InstitutionModel.OwnershipTypeId, new { @class = "control-label" })
                    </div>
                    @if (Model.PCPNDTModel.InstitutionModel.OwnershipTypeId == 5)
                    {
                        <div class="col-md-3">
                            @Html.DisplayFor(model => model.PCPNDTModel.InstitutionModel.OwnershipOthers)
                        </div>
                    }
                    else
                    {
                        <div class="col-md-3">
                            @Html.DisplayFor(model => model.PCPNDTModel.InstitutionModel.OwnershipTypeName)
                        </div>
                    }
                    @*<div class="col-md-3">
                            @Html.DisplayFor(model => model.PCPNDTModel.InstitutionModel.OwnershipTypeName)
                        </div>*@
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.PCPNDTModel.InstitutionModel.InstitutionTypeId, new { @class = "control-label" })
                    </div>
                    @if (Model.PCPNDTModel.InstitutionModel.InstitutionTypeId == 5)
                    {
                        <div class="col-md-3">
                            @Html.DisplayFor(model => model.PCPNDTModel.InstitutionModel.InstitutionOthers)
                        </div>
                    }
                    else
                    {
                        <div class="col-md-3">
                            @Html.DisplayFor(model => model.PCPNDTModel.InstitutionModel.InstitutionTypeName)
                        </div>
                    }

                    <div class="col-md-2 text-right">
                        @Html.LabelFor(model => model.PCPNDTModel.InstitutionModel.TotalWorkArea, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.PCPNDTModel.InstitutionModel.TotalWorkArea)
                    </div>
                </div>
                <div class="row" id="divOwnershipUploads">
                    <div class="col-md-12">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">File Uploads</legend>
                            <div class="row" id="divAffidavitFile1">
                                <div class="col-md-offset-1 col-md-3">
                                    Affidavit
                                </div>
                                <div class="col-md-4">
                                    @if (!string.IsNullOrEmpty(Model.PCPNDTModel.InstitutionModel.AffidavitDocPath))
                                    {
                                        var index = Model.PCPNDTModel.InstitutionModel.AffidavitDocPath.LastIndexOf("/");
                                        var fileName = Model.PCPNDTModel.InstitutionModel.AffidavitDocPath.Substring(index + 1);
                                        @Html.ActionLink(fileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.PCPNDTModel.InstitutionModel.AffidavitDocPath, downloadName = fileName },
                            null
                            );
                                    }
                                </div>
                            </div>
                            <div class="row" id="divAssociationFile1">
                                <div class="col-md-offset-1 col-md-3">
                                    <span id="spanArticlesofAssociation1">Articles1 of Association</span>
                                </div>
                                <div class="col-md-4">
                                    @if (!string.IsNullOrEmpty(Model.PCPNDTModel.InstitutionModel.ArticleDocPath))
                                    {
                                        var index = Model.PCPNDTModel.InstitutionModel.ArticleDocPath.LastIndexOf("/");
                                        var fileName = Model.PCPNDTModel.InstitutionModel.ArticleDocPath.Substring(index + 1);
                                        @Html.ActionLink(fileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.PCPNDTModel.InstitutionModel.ArticleDocPath, downloadName = fileName },
                            null
                            );
                                    }
                                </div>
                            </div>
                            <div class="row" id="divStudyCertificateFiles">
                                <div class="col-md-offset-1 col-md-3">
                                    Study Certificate
                                </div>
                            </div>
                            <div class="row" id="divStudyCertificatesList1">
                                <div class="col-md-offset-1 col-md-10">
                                    <table id="tblStudyCertificatesonPreview" class="table table-hover">
                                        <tr>
                                            <th>S.No.</th>
                                            <th>Document</th>
                                            <th></th>
                                        </tr>
                                        <tr>
                                            <td>1</td>
                                            <td>axy</td>
                                        </tr>
                                        @if (Model.PCPNDTModel.InstitutionModel.StudyCertificateDocPaths != null)
                                        {
                                            for (int i = 0; i < Model.PCPNDTModel.InstitutionModel.StudyCertificateDocPaths.Count; i++)
                                            {
                                                <tr>
                                                    <td>@Convert.ToInt32(i + 1)</td>
                                                    <td>
                                                        @if (Model.PCPNDTModel.InstitutionModel.StudyCertificateDocPaths[i].DocumentPath != null)
                                                        {
                                                            var layoutindex = Model.PCPNDTModel.InstitutionModel.StudyCertificateDocPaths[i].DocumentPath.LastIndexOf("/");
                                                            var layoutfileName = Model.PCPNDTModel.InstitutionModel.StudyCertificateDocPaths[i].DocumentPath.Substring(layoutindex + 1);
                                                            @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
new { Area = "", path = Model.PCPNDTModel.InstitutionModel.StudyCertificateDocPaths[i].DocumentPath, downloadName = layoutfileName }, null);
                                                        }
                                                        test file
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </table>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </fieldset>

            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Declaration</legend>
                <div class="row">
                    <div class="col-md-offset-1 col-md-10">
                        <p style="text-indent: 50px; text-align:justify;line-height: 30px;">
                            I, Sh./Smt./Kum./Dr. <b>@Model.PCPNDTModel.DeclarationModel.Name</b> Son/Daughter/Wife of
                            <b>@Model.PCPNDTModel.DeclarationModel.SonOf</b> aged <b>@Model.PCPNDTModel.DeclarationModel.Age years</b>
                            resident of <b>@Model.PCPNDTModel.DeclarationModel.ResidentOf</b> working as (indicate designation)
                            <b>@Model.PCPNDTModel.DeclarationModel.Designation</b> in (indicate name of the organization to be registered)
                            <b>@Model.PCPNDTModel.DeclarationModel.Organization</b> hereby declare that I have read and understood the
                            prenatal Diagnostic techniques (Regulation and Prevention of Miuse) Act, 1994 (57 of 1994) and
                            Pre Natal Diagnostic Techniques (Regulation and Prevention of Miuse) Rules, 1996.
                        </p>
                        <p style="text-indent: 50px; text-align:justify;line-height: 30px;">
                            I also undertake to explain the said Act and Rules to all employees of the Genetic Counselling Center / Genetic
                            Laboratory / Generic Clinic / Ultrasound Clinic / Imaging Center in respect of which registration
                            is sought and to ensure that act and Rules are fully compiled with.
                        </p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        Date
                    </div>
                    <div class="col-md-2">
                        <b>@Model.PCPNDTModel.DeclarationModel.Date.ToString("dd-MM-yyyy")</b>
                    </div>
                    <div class="col-md-6 text-right">
                        Signature
                    </div>
                    <div class="col-md-3 pull-right">
                        <img id="imgSignature" src="@Url.Content("~/Uploads/"+ Model.PCPNDTModel.DeclarationModel.SignatureDocPath)" style="height:50px;width:50px;margin-left:12px" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        Place
                    </div>
                    <div class="col-md-2">
                        <b>@Model.PCPNDTModel.DeclarationModel.Place</b>
                    </div>
                    <div class="col-md-offset-5 col-md-4" style="text-align:center">
                        <b>@Model.PCPNDTModel.DeclarationModel.Signature</b>
                        <br />
                        Name, Designation and Signature of the<br />
                        person who conduct the scanning
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Other Uploads</legend>
                            <div class="box">
                                <div class="box-body table-responsive no-padding">
                                    <table id="tblOtherUploadsPCPNDT" class="table table-hover">
                                        <tr>
                                            <th>S.No.</th>
                                            <th>Type</th>
                                            <th>Uploaded File</th>
                                            <th></th>
                                        </tr>
                                        @if (Model.PCPNDTModel.DeclarationModel.OtherUploadsList != null)
                                        {
                                            for (int i = 0; i < Model.PCPNDTModel.DeclarationModel.OtherUploadsList.Count; i++)
                                            {
                                                <tr>
                                                    <td> @Convert.ToInt32(@i + 1)</td>
                                                    <td>@Model.PCPNDTModel.DeclarationModel.OtherUploadsList[i].UploadType</td>
                                                    <td>
                                                        @if (Model.PCPNDTModel.DeclarationModel.OtherUploadsList[i].DocumentPath != null)
                                                        {
                                                            var addressindex = Model.PCPNDTModel.DeclarationModel.OtherUploadsList[i].DocumentPath.LastIndexOf("/");
                                                            var addressfileName = Model.PCPNDTModel.DeclarationModel.OtherUploadsList[i].DocumentPath.Substring(addressindex + 1);
                                                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.PCPNDTModel.DeclarationModel.OtherUploadsList[i].DocumentPath, downloadName = addressfileName }, null);
                                                        }
                                                    </td>

                                                </tr>
                                            }
                                        }
                                    </table>
                                </div>
                                <!-- /.box-body -->
                            </div>
                            <!-- /.box -->
                        </fieldset>
                    </div>
                </div>
            </fieldset>



        </fieldset>
                                                    }

    @if (Model.BloodBankModel != null)
    {

        <fieldset class="scheduler-border">
            <legend class="scheduler-border">Blood Bank - FORM 27 C</legend>
            <div class="row">
                @Html.HiddenFor(model => model.Id)
                <div class="col-md-offset-1 col-md-10">
                    Application for grant of license for the operation of a Blood Bank to processing of whole blood and/or<sup>*</sup> preparation of Blood Components
                </div>
            </div>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Applicant</legend>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankApplicantModel.Name, "Owner Name", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankApplicantModel.Name)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankApplicantModel.OwnershipType, "Ownership Type", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankApplicantModel.OwnershipType)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankApplicantModel.Aadhar, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankApplicantModel.Aadhar)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankApplicantModel.PAN, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankApplicantModel.PAN)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankApplicantModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankApplicantModel.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankApplicantModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankApplicantModel.MandalName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankApplicantModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankApplicantModel.VillageName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankApplicantModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankApplicantModel.HouseNumber)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankApplicantModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankApplicantModel.StreetName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankApplicantModel.UploadDocument, "Document (MOA/Ownership)", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @if (Model.BloodBankModel.BloodBankApplicantModel.UploadDocument != null && Model.BloodBankModel.BloodBankApplicantModel.UploadDocument != "" && Model.BloodBankModel.BloodBankApplicantModel.UploadDocument != string.Empty)
                        {
                            var addressindex = Model.BloodBankModel.BloodBankApplicantModel.UploadDocument.LastIndexOf("/");
                            var addressfileName = Model.BloodBankModel.BloodBankApplicantModel.UploadDocument.Substring(addressindex + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                         new { Area = "", path = Model.BloodBankModel.BloodBankApplicantModel.UploadDocument, downloadName = addressfileName }, null);
                        }
                    </div>
                </div>
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Establishment</legend>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankEstablishmentModel.Name, "BloodBank Name", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankEstablishmentModel.Name)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankEstablishmentModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankEstablishmentModel.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankEstablishmentModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankEstablishmentModel.MandalName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankEstablishmentModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankEstablishmentModel.VillageName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankEstablishmentModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankEstablishmentModel.HouseNumber)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankEstablishmentModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankEstablishmentModel.StreetName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankEstablishmentModel.AddressProofPath, "Address Proof", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @if (!string.IsNullOrEmpty(Model.BloodBankModel.BloodBankEstablishmentModel.AddressProofPath))
                        {
                            var index = Model.BloodBankModel.BloodBankEstablishmentModel.AddressProofPath.LastIndexOf("/");
                            var addressfileName = Model.BloodBankModel.BloodBankEstablishmentModel.AddressProofPath.Substring(index + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.BloodBankModel.BloodBankEstablishmentModel.AddressProofPath, downloadName = addressfileName },
                                                    null
                                                    );
                        }
                    </div>
                </div>
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">List of Items</legend>
                <div class="row">
                    <div class="col-xs-12">
                        <div class="box">
                            <div class="box-body table-responsive no-padding">
                                <table id="tblItems" class="table table-hover">
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Name</th>
                                    </tr>
                                    @if (Model.BloodBankModel.BloodBankList != null)
                                    {
                                        for (int i = 0; i < Model.BloodBankModel.BloodBankList.Count; i++)
                                        {
                                            <tr>
                                                <td>@Convert.ToInt32(i + 1)</td>
                                                <td>@Model.BloodBankModel.BloodBankList[i].Name</td>
                                            </tr>
                                        }
                                    }

                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                </div>
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Employee Details</legend>
                <div class="row" hidden>
                    <div class="col-xs-12">
                        <div class="box">
                            <div class="box-body table-responsive no-padding">
                                <table id="tblEmployeeCertificate" class="table table-hover">
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Type</th>
                                        <th>Certificates</th>
                                        <th></th>
                                    </tr>
                                    @if (Model.BloodBankModel.EmployeeModel.UploadDocuments != null)
                                    {
                                        for (int i = 0; i < Model.BloodBankModel.EmployeeModel.UploadDocuments.Count; i++)
                                        {
                                            <tr>
                                                <td> @Convert.ToInt32(@i + 1)</td>
                                                <td> @Model.BloodBankModel.EmployeeModel.UploadDocuments[i].UploadType</td>
                                                <td>
                                                    @if (Model.BloodBankModel.EmployeeModel.UploadDocuments[i].DocumentPath != null)
                                                    {
                                                        var addressindex = Model.BloodBankModel.EmployeeModel.UploadDocuments[i].DocumentPath.LastIndexOf("/");
                                                        var fileName = Model.BloodBankModel.EmployeeModel.UploadDocuments[i].DocumentPath.Substring(addressindex + 1);
                                                        @Html.ActionLink(fileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.BloodBankModel.EmployeeModel.UploadDocuments[i].DocumentPath, downloadName = fileName }, null);
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12">
                        <div class="box">
                            <div class="box-body table-responsive no-padding">
                                <table id="tblBloodbankEmployee" class="table table-hover">
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Name</th>
                                        <th>Qulification</th>
                                        <th>Experience</th>
                                        <th></th>
                                    </tr>
                                    @if (Model.BloodBankModel.EmployeeList != null)
                                    {
                                        for (int i = 0; i < Model.BloodBankModel.EmployeeList.Count; i++)
                                        {
                                            <tr>
                                                <td> @Convert.ToInt32(@i + 1)</td>
                                                <td> @Model.BloodBankModel.EmployeeList[i].Name</td>
                                                <td> @Model.BloodBankModel.EmployeeList[i].QualificationName</td>
                                                <td> @Model.BloodBankModel.EmployeeList[i].ExpYears Years, @Model.BloodBankModel.EmployeeList[i].ExpMonths Months, @Model.BloodBankModel.EmployeeList[i].ExpDays Days</td>
                                            </tr>
                                        }
                                    }
                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                </div>
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Equipment</legend>
                <div class="row">
                    <div class="col-xs-12">
                        <div class="box">
                            <div class="box-body table-responsive no-padding">
                                <table id="tblBloodEquipment" class="table table-hover">
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Name</th>
                                        <th>Type</th>
                                        <th>Model No.</th>
                                        <th>Serial No.</th>
                                        <th></th>
                                    </tr>
                                    @if (Model.BloodBankModel.EquipmentList != null)
                                    {
                                        for (int i = 0; i < Model.BloodBankModel.EquipmentList.Count; i++)
                                        {
                                            <tr>
                                                <td>@Convert.ToInt32(i + 1)</td>
                                                <td>@Model.BloodBankModel.EquipmentList[i].Name</td>
                                                <td>@Model.BloodBankModel.EquipmentList[i].Type</td>
                                                <td>@Model.BloodBankModel.EquipmentList[i].MachineModel</td>
                                                <td>@Model.BloodBankModel.EquipmentList[i].SerialNumber</td>
                                            </tr>
                                        }
                                    }

                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                </div>
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Inspection & Attachmnets</legend>
                <div class="row">
                    <div class="col-md-offset-2 col-md-6">
                        The Premises and plant are ready for inspection/will be ready for inspection date:
                    </div>
                    <div class="col-md-3">
                        @Model.BloodBankModel.BloodBankAttachments.InspectionDate.ToString("dd-MM-yyyy")
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankAttachments.planPremisesPath, "Plan of the Premises", new { @class = "control-label" })
                    </div>
                    <div class="col-md-5">
                        @if (!string.IsNullOrEmpty(Model.BloodBankModel.BloodBankAttachments.planPremisesPath))
                        {
                            var index = Model.BloodBankModel.BloodBankAttachments.planPremisesPath.LastIndexOf("/");
                            var addressfileName = Model.BloodBankModel.BloodBankAttachments.planPremisesPath.Substring(index + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.BloodBankModel.BloodBankAttachments.planPremisesPath, downloadName = addressfileName },
                                                    null
                                                    );
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankAttachments.OwnerPremisesPath, "Ownership or tenacy of the Premises", new { @class = "control-label" })
                    </div>
                    <div class="col-md-5">
                        @if (!string.IsNullOrEmpty(Model.BloodBankModel.BloodBankAttachments.OwnerPremisesPath))
                        {
                            var index = Model.BloodBankModel.BloodBankAttachments.OwnerPremisesPath.LastIndexOf("/");
                            var addressfileName = Model.BloodBankModel.BloodBankAttachments.OwnerPremisesPath.Substring(index + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.BloodBankModel.BloodBankAttachments.OwnerPremisesPath, downloadName = addressfileName },
                                                    null
                                                    );
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankAttachments.IdProffPath, "Id Proff of Owner", new { @class = "control-label" })
                    </div>
                    <div class="col-md-5">
                        @if (!string.IsNullOrEmpty(Model.BloodBankModel.BloodBankAttachments.IdProffPath))
                        {
                            var index = Model.BloodBankModel.BloodBankAttachments.IdProffPath.LastIndexOf("/");
                            var addressfileName = Model.BloodBankModel.BloodBankAttachments.IdProffPath.Substring(index + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.BloodBankModel.BloodBankAttachments.IdProffPath, downloadName = addressfileName },
                                                    null
                                                    );
                        }
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankAttachments.DeclareDate, "Date", new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Model.BloodBankModel.BloodBankAttachments.DeclareDate.ToString("dd-MM-yyyy")
                    </div>
                    <div class="col-md-6 text-right">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankAttachments.Name, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankAttachments.Name)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankAttachments.Place, "Place", new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankAttachments.Place)
                    </div>
                    <div class="col-md-6 text-right">
                        @Html.LabelFor(model => model.BloodBankModel.BloodBankAttachments.Designation, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankModel.BloodBankAttachments.Designation)
                    </div>
                </div>
            </fieldset>
        </fieldset>
    }
    @if (Model.BloodBankForm27EModel != null)
    {
        <fieldset class="scheduler-border">
            <legend class="scheduler-border">Blood Bank - FORM 27 E</legend>
            <div class="row">
                @Html.HiddenFor(model => model.Id)
                <div class="col-md-offset-1 col-md-10">
                    Application for grant of license to manufacture Blood products for sale or distribution
                </div>
            </div>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Applicant</legend>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.Name, "Owner Name", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.Name)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.OwnershipType, "Ownership Type", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.OwnershipType)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.Aadhar, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.Aadhar)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.PAN, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.PAN)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.MandalName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.VillageName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.HouseNumber)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.StreetName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankApplicantModel.UploadDocument, "Document (MOA/Ownership)", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @if (Model.BloodBankForm27EModel.BloodBankApplicantModel.UploadDocument != null && Model.BloodBankForm27EModel.BloodBankApplicantModel.UploadDocument != "" || Model.BloodBankModel.BloodBankApplicantModel.UploadDocument != string.Empty)
                        {
                            var addressindex = Model.BloodBankForm27EModel.BloodBankApplicantModel.UploadDocument.LastIndexOf("/");
                            var addressfileName = Model.BloodBankForm27EModel.BloodBankApplicantModel.UploadDocument.Substring(addressindex + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                         new { Area = "", path = Model.BloodBankForm27EModel.BloodBankApplicantModel.UploadDocument, downloadName = addressfileName }, null);
                        }
                    </div>
                </div>
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Establishment</legend>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.Name, "BloodBank Name", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.Name)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.MandalName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.VillageName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.HouseNumber)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.StreetName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankEstablishmentModel.AddressProofPath, "Address Proof", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @if (!string.IsNullOrEmpty(Model.BloodBankForm27EModel.BloodBankEstablishmentModel.AddressProofPath))
                        {
                            var index = Model.BloodBankForm27EModel.BloodBankEstablishmentModel.AddressProofPath.LastIndexOf("/");
                            var addressfileName = Model.BloodBankForm27EModel.BloodBankEstablishmentModel.AddressProofPath.Substring(index + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.BloodBankForm27EModel.BloodBankEstablishmentModel.AddressProofPath, downloadName = addressfileName },
                                                    null
                                                    );
                        }
                    </div>
                </div>
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">List of Items</legend>
                <div class="row">
                    <div class="col-xs-12">
                        <div class="box">
                            <div class="box-body table-responsive no-padding">
                                <table id="tblItems" class="table table-hover">
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Name</th>
                                    </tr>
                                    @if (Model.BloodBankForm27EModel.BloodBankList != null)
                                    {
                                        for (int i = 0; i < Model.BloodBankForm27EModel.BloodBankList.Count; i++)
                                        {
                                            <tr>
                                                <td>@Convert.ToInt32(i + 1)</td>
                                                <td>@Model.BloodBankForm27EModel.BloodBankList[i].Name</td>
                                            </tr>
                                        }
                                    }

                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                </div>
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Technical Details</legend>
                <div class="row" hidden>
                    <div class="col-xs-12">
                        <div class="box">
                            <div class="box-body table-responsive no-padding">
                                <table id="tblEmployeeCertificate" class="table table-hover">
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Type</th>
                                        <th>Certificates</th>
                                        <th></th>
                                    </tr>
                                    @if (Model.BloodBankForm27EModel.TechnicalModel.UploadDocuments != null)
                                    {
                                        for (int i = 0; i < Model.BloodBankForm27EModel.TechnicalModel.UploadDocuments.Count; i++)
                                        {
                                            <tr>
                                                <td> @Convert.ToInt32(@i + 1)</td>
                                                <td> @Model.BloodBankForm27EModel.TechnicalModel.UploadDocuments[i].UploadType</td>
                                                <td>
                                                    @if (Model.BloodBankForm27EModel.TechnicalModel.UploadDocuments[i].DocumentPath != null)
                                                    {
                                                        var addressindex = Model.BloodBankForm27EModel.TechnicalModel.UploadDocuments[i].DocumentPath.LastIndexOf("/");
                                                        var fileName = Model.BloodBankForm27EModel.TechnicalModel.UploadDocuments[i].DocumentPath.Substring(addressindex + 1);
                                                        @Html.ActionLink(fileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.BloodBankForm27EModel.TechnicalModel.UploadDocuments[i].DocumentPath, downloadName = fileName }, null);
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12">
                        <div class="box">
                            <div class="box-body table-responsive no-padding">
                                <table id="tblBloodbankEmployee" class="table table-hover">
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Name</th>
                                        <th>Qulification</th>
                                        <th>Experience</th>
                                        <th></th>
                                    </tr>
                                    @if (Model.BloodBankForm27EModel.TechnicalList != null)
                                    {
                                        for (int i = 0; i < Model.BloodBankForm27EModel.TechnicalList.Count; i++)
                                        {
                                            <tr>
                                                <td> @Convert.ToInt32(@i + 1)</td>
                                                <td> @Model.BloodBankForm27EModel.TechnicalList[i].Name</td>
                                                <td> @Model.BloodBankForm27EModel.TechnicalList[i].Qualification</td>
                                                <td> @Model.BloodBankForm27EModel.TechnicalList[i].ExpYears Years, @Model.BloodBankForm27EModel.TechnicalList[i].ExpMonths Months, @Model.BloodBankForm27EModel.TechnicalList[i].ExpDays Days</td>
                                            </tr>
                                        }
                                    }
                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                </div>
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Equipment</legend>
                <div class="row">
                    <div class="col-xs-12">
                        <div class="box">
                            <div class="box-body table-responsive no-padding">
                                <table id="tblBloodEquipment" class="table table-hover">
                                    <tr>
                                        <th>S.No.</th>
                                        <th>Name</th>
                                        <th>Type</th>
                                        <th>Model No.</th>
                                        <th>Serial No.</th>
                                        <th></th>
                                    </tr>
                                    @if (Model.BloodBankForm27EModel.EquipmentList != null)
                                    {
                                        for (int i = 0; i < Model.BloodBankForm27EModel.EquipmentList.Count; i++)
                                        {
                                            <tr>
                                                <td>@Convert.ToInt32(i + 1)</td>
                                                <td>@Model.BloodBankForm27EModel.EquipmentList[i].Name</td>
                                                <td>@Model.BloodBankForm27EModel.EquipmentList[i].Type</td>
                                                <td>@Model.BloodBankForm27EModel.EquipmentList[i].MachineModel</td>
                                                <td>@Model.BloodBankForm27EModel.EquipmentList[i].SerialNumber</td>
                                            </tr>
                                        }
                                    }

                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                </div>
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Inspection & Attachmnets</legend>
                <div class="row">
                    <div class="col-md-offset-2 col-md-6">
                        The Premises and plant are ready for inspection/will be ready for inspection date:
                    </div>
                    <div class="col-md-3">
                        @Model.BloodBankForm27EModel.BloodBankAttachments.InspectionDate.ToString("dd-MM-yyyy")
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankAttachments.planPremisesPath, "Plan of the Premises", new { @class = "control-label" })
                    </div>
                    <div class="col-md-5">
                        @if (!string.IsNullOrEmpty(Model.BloodBankForm27EModel.BloodBankAttachments.planPremisesPath))
                        {
                            var index = Model.BloodBankForm27EModel.BloodBankAttachments.planPremisesPath.LastIndexOf("/");
                            var addressfileName = Model.BloodBankForm27EModel.BloodBankAttachments.planPremisesPath.Substring(index + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.BloodBankForm27EModel.BloodBankAttachments.planPremisesPath, downloadName = addressfileName },
                                                    null
                                                    );
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankAttachments.OwnerPremisesPath, "Ownership or tenacy of the Premises", new { @class = "control-label" })
                    </div>
                    <div class="col-md-5">
                        @if (!string.IsNullOrEmpty(Model.BloodBankForm27EModel.BloodBankAttachments.OwnerPremisesPath))
                        {
                            var index = Model.BloodBankForm27EModel.BloodBankAttachments.OwnerPremisesPath.LastIndexOf("/");
                            var addressfileName = Model.BloodBankForm27EModel.BloodBankAttachments.OwnerPremisesPath.Substring(index + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.BloodBankForm27EModel.BloodBankAttachments.OwnerPremisesPath, downloadName = addressfileName },
                                                    null
                                                    );
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankAttachments.IdProffPath, "Id Proff of Owner", new { @class = "control-label" })
                    </div>
                    <div class="col-md-5">
                        @if (!string.IsNullOrEmpty(Model.BloodBankForm27EModel.BloodBankAttachments.IdProffPath))
                        {
                            var index = Model.BloodBankForm27EModel.BloodBankAttachments.IdProffPath.LastIndexOf("/");
                            var addressfileName = Model.BloodBankForm27EModel.BloodBankAttachments.IdProffPath.Substring(index + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.BloodBankForm27EModel.BloodBankAttachments.IdProffPath, downloadName = addressfileName },
                                                    null
                                                    );
                        }
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankAttachments.DeclareDate, "Date", new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Model.BloodBankForm27EModel.BloodBankAttachments.DeclareDate.ToString("dd-MM-yyyy")
                    </div>
                    <div class="col-md-6 text-right">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankAttachments.Name, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankAttachments.Name)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankAttachments.Place, "Place", new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankAttachments.Place)
                    </div>
                    <div class="col-md-6 text-right">
                        @Html.LabelFor(model => model.BloodBankForm27EModel.BloodBankAttachments.Designation, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.BloodBankForm27EModel.BloodBankAttachments.Designation)
                    </div>
                </div>
            </fieldset>
        </fieldset>
    }
    @if (Model.BioCapstoneModel != null)
    {

        <fieldset class="scheduler-border">
            <legend class="scheduler-border">BioCapstone</legend>
            <fieldset class="scheduler-border" id="fsParticulars">
                <legend class="scheduler-border">Particulars of applicant</legend>
                <form id="frmBioCapstoneApplicant">
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.Name, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.Name, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.InstitutionName, new { @class = "control-label" })
                        </div>
                        <div class="col-md-3">
                            @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.InstitutionName, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.DistrictName, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.DistrictName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.MandalName, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.MandalName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.VillageName, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.VillageName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.HouseNumber, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.HouseNumber, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.StreetName, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.Fax, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.Fax, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.Telegraph, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.Telegraph, new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.Telex, new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.Telex, new { @class = "form-control" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.PINCode, new { @class = "control-label " })
                        </div>
                        <div class="col-md-2">
                            @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneApplicantModel.PINCode, new { @class = "form-control numeric" })
                        </div>
                    </div>
                </form>
            </fieldset>

            <fieldset class="scheduler-border" id="fsAuthorisation">
                <legend class="scheduler-border">Authorisation of activity</legend>
                <div class="row">
                    <div class="col-md-offset-1 col-md-3">
                        @Html.CheckBox("authorasation", new { @value = "1" }) Generation
                    </div>
                    <div class="col-md-3">
                        @Html.CheckBox("authorasation", new { @value = "2" }) Transportation
                    </div>
                    <div class="col-md-4">
                        @Html.CheckBox("authorasation", new { @value = "3" }) Collection
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-offset-1 col-md-3">
                        @Html.CheckBox("authorasation", new { @value = "4" }) Treatment
                    </div>
                    <div class="col-md-3">
                        @Html.CheckBox("authorasation", new { @value = "5" }) Reception
                    </div>
                    <div class="col-md-4">
                        @Html.CheckBox("authorasation", new { @value = "6" }) Disposal
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-offset-1 col-md-3">
                        @Html.CheckBox("authorasation", new { @value = "7" }) Storage
                    </div>
                    <div class="col-md-2">
                        @Html.CheckBox("authorasation", new { @value = "8" }) Other form
                    </div>
                    <div class="col-md-3" id="hidtextbox" hidden>
                        @Html.DisplayFor(model => model.BioCapstoneModel.AuthorisationModel.Others, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </fieldset>

            <fieldset class="scheduler-border" id="fsTreatmentfacility">
                <legend class="scheduler-border">Address of Treatment Facility</legend>
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.DistrictName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.DistrictName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.MandalName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.MandalName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.VillageName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.VillageName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.HouseNumber, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.Fax, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.Fax, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.Telegraph, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.Telegraph, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.Telex, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.Telex, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressTreatementFacilityModel.PINCode, new { @class = "form-control numeric" })
                    </div>
                </div>
            </fieldset>

            <fieldset class="scheduler-border" id="fsDisposalofwaste">
                <legend class="scheduler-border">Address of Disposal waste</legend>
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.DistrictName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.DistrictName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.MandalName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.MandalName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.VillageName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.VillageName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.HouseNumber, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.Fax, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.Fax, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.Telegraph, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.Telegraph, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.Telex, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.Telex, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.BioCapstoneAddressDisposalWasteModel.PINCode, new { @class = "form-control numeric" })
                    </div>
                </div>
            </fieldset>

            <fieldset class="scheduler-border" id="fstreatment">
                <legend class="scheduler-border">Mode of treatment</legend>
                <form id="frmTreatment">
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="box">
                                <div class="box-body table-responsive no-padding">
                                    <table id="tblAddressUploads" class="table table-hover">
                                        <tr>
                                            <th>S.No.</th>
                                            <th>Description</th>
                                            <th>Attachment</th>
                                            <th></th>
                                        </tr>
                                        @if (Model.BioCapstoneModel.TreatmentList != null)
                                        {
                                            for (int i = 0; i < Model.BioCapstoneModel.TreatmentList.Count; i++)
                                            {
                                                <tr>
                                                    <td>@Convert.ToInt32(i + 1)</td>
                                                    <td>@Model.BioCapstoneModel.TreatmentList[i].Description</td>
                                                    <td>
                                                        @if (Model.BioCapstoneModel.TreatmentList[i].Attachment != null)
                                                        {
                                                            var layoutindex = Model.BioCapstoneModel.TreatmentList[i].Attachment.LastIndexOf("/");
                                                            var layoutfileName = Model.BioCapstoneModel.TreatmentList[i].Attachment.Substring(layoutindex + 1);
                                                            @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                             new { Area = "", path = Model.BioCapstoneModel.TreatmentList[i].Attachment, downloadName = layoutfileName }, null);
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </table>
                                </div>
                                <!-- /.box-body -->
                            </div>
                            <!-- /.box -->
                        </div>
                    </div>
                </form>
            </fieldset>

            <fieldset class="scheduler-border" id="fsdisposal">
                <legend class="scheduler-border">Mode of treatment and disposal</legend>
                <form id="frmTreatmentDisposal">
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="box">
                                <div class="box-body table-responsive no-padding">
                                    <table id="tblDisposalUploads" class="table table-hover">
                                        <tr>
                                            <th>S.No.</th>
                                            <th>Description</th>
                                            <th>Attachment</th>
                                            <th></th>
                                        </tr>
                                        @if (Model.BioCapstoneModel.TreatmentDisposalList != null)
                                        {
                                            for (int i = 0; i < Model.BioCapstoneModel.TreatmentDisposalList.Count; i++)
                                            {
                                                <tr>
                                                    <td>@Convert.ToInt32(i + 1)</td>
                                                    <td>@Model.BioCapstoneModel.TreatmentDisposalList[i].Description</td>
                                                    <td>
                                                        @if (Model.BioCapstoneModel.TreatmentDisposalList[i].Attachment != null)
                                                        {
                                                            var layoutindex = Model.BioCapstoneModel.TreatmentDisposalList[i].Attachment.LastIndexOf("/");
                                                            var layoutfileName = Model.BioCapstoneModel.TreatmentDisposalList[i].Attachment.Substring(layoutindex + 1);
                                                            @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                             new { Area = "", path = Model.BioCapstoneModel.TreatmentDisposalList[i].Attachment, downloadName = layoutfileName }, null);
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </table>
                                </div>
                                <!-- /.box-body -->
                            </div>
                            <!-- /.box -->
                        </div>
                    </div>
                </form>
            </fieldset>

            <fieldset class="scheduler-border" id="fsWaste">
                <legend class="scheduler-border">Category an Quantity of Waste</legend>
                <form id="frmQuantityofWaste">

                    <div class="row">
                        <div class="col-xs-12">
                            <div class="box">
                                <div class="box-body table-responsive no-padding">
                                    <table id="tblWasteUploads" class="table table-hover">
                                        <tr>
                                            <th>S.No.</th>
                                            <th>Category</th>
                                            <th>Quantity</th>
                                            <th>Units</th>
                                            <th></th>
                                        </tr>
                                        @if (Model.BioCapstoneModel.QuantityWasteList != null)
                                        {
                                            for (int i = 0; i < Model.BioCapstoneModel.QuantityWasteList.Count; i++)
                                            {
                                                <tr>
                                                    <td>@Convert.ToInt32(i + 1)</td>
                                                    <td>@Model.BioCapstoneModel.QuantityWasteList[i].CategoryName</td>
                                                    <td>@Model.BioCapstoneModel.QuantityWasteList[i].Quantity</td>
                                                    @*<td>@Model.BioCapstoneModel.QuantityWasteList[i].UnitName</td>*@
                                                    @if (@Model.BioCapstoneModel.QuantityWasteList[i].UnitName == "Others")
                                                    {
                                                        <td>@Model.BioCapstoneModel.QuantityWasteList[i].QuantityOthers</td>
                                                    }
                                                    else
                                                    {
                                                        <td>@Model.BioCapstoneModel.QuantityWasteList[i].UnitName</td>
                                                    }

                                                </tr>
                                            }
                                        }
                                    </table>
                                </div>
                                <!-- /.box-body -->
                            </div>
                            <!-- /.box -->
                        </div>
                    </div>
                </form>
            </fieldset>

            <fieldset class="scheduler-border" id="fsDeclaration">
                <legend class="scheduler-border">Declaration</legend>
                <div class="row">
                    <div class="col-md-offset-1 col-md-11">
                        I do hereby declare that the statements mode and informationgiven above  are true to  the best of my
                        knowledge and belife and that I have not concealed any information.
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-11">
                        I do also hereby under taken to provide any further information  sought by the prescribed
                        authority in relation to these rules and to fulfill any condition stipulated by the prescribed authority.
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        Date
                    </div>
                    <div class="col-md-2">
                        @Model.BioCapstoneModel.DeclarationModel.Date.ToString("dd-MM-yyyy")
                        @*@Html.DisplayFor(model => model.BioCapstoneModel.DeclarationModel.Date)*@
                    </div>
                    <div class="col-md-offset-5 col-md-1">
                        Designation
                    </div>
                    <div class="col-md-2" style="text-align:center">
                        @Html.DisplayFor(model => model.BioCapstoneModel.DeclarationModel.Designation, new { @class = "form-control", placeholder = " Designation of the applicant" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        Place
                    </div>
                    <div class="col-md-2">
                        @Html.DisplayFor(model => model.BioCapstoneModel.DeclarationModel.Place, new { @class = "form-control" })
                    </div>
                    <div class="col-md-offset-5 col-md-1">
                        Signature
                    </div>
                    <div class="col-md-2" style="text-align:center">
                        @Html.DisplayFor(model => model.BioCapstoneModel.DeclarationModel.Signature, new { @class = "", type = "form-control" })
                    </div>
                </div>
            </fieldset>
        </fieldset>
    }
    @if (Model.HomeopathyDrugStore != null)
    {
        <fieldset class="scheduler-border">
            <legend class="scheduler-border">Applicant</legend>
            <form id="formHDApplicant">
                <div class="row">
                    @Html.HiddenFor(model => model.HomeopathyDrugStore.HDApplicantModel.Id, new { @id = "HD_ApplicantID" })
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.Name, "Owner Name", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDApplicantModel.Name)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.OwnershipType, "Ownership Type", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDApplicantModel.OwnershipType)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.Aadhar, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDApplicantModel.Aadhar)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.PAN, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDApplicantModel.PAN)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.MobileNo, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDApplicantModel.MobileNo)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDApplicantModel.DistrictName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDApplicantModel.MandalName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDApplicantModel.VillageName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDApplicantModel.HouseNumber)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDApplicantModel.StreetName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDApplicantModel.PINCode)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDApplicantModel.UploadDocument, "Document (AOA/MOA/Ownership)", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @if (!string.IsNullOrEmpty(Model.HomeopathyDrugStore.HDApplicantModel.UploadDocument))
                        {
                            var documentindex = Model.HomeopathyDrugStore.HDApplicantModel.UploadDocument.LastIndexOf("/");
                            var documentfileName = Model.HomeopathyDrugStore.HDApplicantModel.UploadDocument.Substring(documentindex + 1);
                            @Html.ActionLink(documentfileName, "DownloadFile", "Generic",
                                    new { Area = "", path = Model.HomeopathyDrugStore.HDApplicantModel.UploadDocument, downloadName = documentfileName }, null);
                        }
                    </div>
                </div>
            </form>
        </fieldset>
        <fieldset class="scheduler-border">
            <legend class="scheduler-border">Establishment</legend>
            <form id="formHDEstablishment">
                <div class="row">
                    @Html.HiddenFor(model => model.HomeopathyDrugStore.HDEstablishment.Id, new { @id = "HD_EstablishmentID" })
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.Name, "Store Name", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDEstablishment.Name)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.OwnedBy, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDEstablishment.OwnedBy)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.Rent, "Rent/Lease", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        <div class="row">
                            <div class="col-md-6">
                                @Model.HomeopathyDrugStore.HDEstablishment.Fromdate.ToString("dd-MM-yyyy")
                            </div>
                            <div class="col-md-6">
                                @Model.HomeopathyDrugStore.HDEstablishment.ToDate.ToString("dd-MM-yyyy")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDEstablishment.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDEstablishment.MandalName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDEstablishment.VillageName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDEstablishment.HouseNumber)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDEstablishment.StreetName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HomeopathyDrugStore.HDEstablishment.PINCode)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.RentalDocument, "Document (Rent deed/Taxes)", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @if (!string.IsNullOrEmpty(Model.HomeopathyDrugStore.HDEstablishment.RentalDocument))
                        {
                            var taxesindex = Model.HomeopathyDrugStore.HDEstablishment.RentalDocument.LastIndexOf("/");
                            var taxdocumentName = Model.HomeopathyDrugStore.HDEstablishment.RentalDocument.Substring(taxesindex + 1);
                            @Html.ActionLink(taxdocumentName, "DownloadFile", "Generic",
                                new { Area = "", path = Model.HomeopathyDrugStore.HDEstablishment.RentalDocument, downloadName = taxdocumentName }, null);
                        }
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.PlanPremisesDocument, "Document (Plan of the Premises)", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @if (!string.IsNullOrEmpty(Model.HomeopathyDrugStore.HDEstablishment.PlanPremisesDocument))
                        {
                            var premisesindex = Model.HomeopathyDrugStore.HDEstablishment.PlanPremisesDocument.LastIndexOf("/");
                            var premisesfileName = Model.HomeopathyDrugStore.HDEstablishment.PlanPremisesDocument.Substring(premisesindex + 1);
                            @Html.ActionLink(premisesfileName, "DownloadFile", "Generic",
                                new { Area = "", path = Model.HomeopathyDrugStore.HDEstablishment.PlanPremisesDocument, downloadName = premisesfileName }, null);
                        }
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.HomeopathyDrugStore.HDEstablishment.AddressProff, "Address Proof", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @if (!string.IsNullOrEmpty(Model.HomeopathyDrugStore.HDEstablishment.AddressProff))
                        {
                            var addressindex = Model.HomeopathyDrugStore.HDEstablishment.AddressProff.LastIndexOf("/");
                            var addressfileName = Model.HomeopathyDrugStore.HDEstablishment.AddressProff.Substring(addressindex + 1);
                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                new { Area = "", path = Model.HomeopathyDrugStore.HDEstablishment.AddressProff, downloadName = addressfileName }, null);
                        }
                    </div>
                </div>
            </form>
        </fieldset>
                                                <fieldset class="scheduler-border">
                                                    <legend class="scheduler-border">Competent Person Incharge Details</legend>
                                                    <form id="formHDCompetentPerson">
                                                        @Html.HiddenFor(model => model.HomeopathyDrugStore.HDCompetentModel.Id, new { @id = "HD_CompetentID" })
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDCompetentModel.Name, "Owner Name", new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.HomeopathyDrugStore.HDCompetentModel.Name)
                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDCompetentModel.Aadhar, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.HomeopathyDrugStore.HDCompetentModel.Aadhar)
                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDCompetentModel.MobileNo, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.HomeopathyDrugStore.HDCompetentModel.MobileNo)
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDCompetentModel.DistrictId, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.HomeopathyDrugStore.HDCompetentModel.DistrictName)
                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDCompetentModel.MandalId, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.HomeopathyDrugStore.HDCompetentModel.MandalName)
                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDCompetentModel.VillageId, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.HomeopathyDrugStore.HDCompetentModel.VillageName)
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDCompetentModel.HouseNumber, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.HomeopathyDrugStore.HDCompetentModel.HouseNumber)
                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDCompetentModel.StreetName, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.HomeopathyDrugStore.HDCompetentModel.StreetName)
                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDCompetentModel.PINCode, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.HomeopathyDrugStore.HDCompetentModel.PINCode)
                                                            </div>
                                                        </div>
                                                    </form>
                                                </fieldset>
                                                <fieldset class="scheduler-border">
                                                    <legend class="scheduler-border">Declaration</legend>
                                                    <form id="formHDDeclaration">
                                                        @Html.HiddenFor(model => model.HomeopathyDrugStore.HDDeclaration.Id, new { @id = "HDDeclarationId" })
                                                        <br />
                                                        <div class="row">
                                                            <div class="col-md-offset-3 col-md-2">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDDeclaration.CoveringLetter, "Covering Letter", new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-4">
                                                                @if (!string.IsNullOrEmpty(Model.HomeopathyDrugStore.HDDeclaration.CoveringLetter))
                                                                {
                                                                    var letterindex = Model.HomeopathyDrugStore.HDDeclaration.CoveringLetter.LastIndexOf("/");
                                                                    var letterName = Model.HomeopathyDrugStore.HDDeclaration.CoveringLetter.Substring(letterindex + 1);
                                                                    @Html.ActionLink(letterName, "DownloadFile", "Generic",
                                    new { Area = "", path = Model.HomeopathyDrugStore.HDDeclaration.CoveringLetter, downloadName = letterName }, null);
                                                                }
                                                            </div>
                                                        </div>
                                                        <br />
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDDeclaration.Date, "Date", new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-2">
                                                                @Model.HomeopathyDrugStore.HDDeclaration.Date.ToString("dd-MM-yyyy")
                                                            </div>
                                                            <div class="col-md-6 text-right">
                                                                @Html.LabelFor(model => model.HomeopathyDrugStore.HDDeclaration.Signature, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.HomeopathyDrugStore.HDDeclaration.Signature)
                                                            </div>
                                                        </div>
                                                    </form>
                                                </fieldset>
    }
    @if (Model.AllopathicDrugModel != null)
    {
        if (Model.AllopathicDrugModel.ADApplicantModel.ServiceId == 36)
        {
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Applicant</legend>
                @*<form id="formADApplicant">*@
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.Name, "Owner Name", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.HiddenFor(model => model.AllopathicDrugModel.ADApplicantModel.Id, new { @id = "AD_ApplicantID" })
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD_ApplicantName" } })

                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.OwnershipType, "Ownership Type", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.OwnershipType)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.DistrictName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.PAN, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.PAN)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.MobileNo, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.MobileNo)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.DistrictName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.MandalName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.VillageName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.HouseNumber)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.StreetName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.PINCode)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.UploadDocument, "Document (AOA/MOA/Ownership)", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @*@Html.TextBoxFor(model => model.AllopathicDrugModel.ADApplicantModel.UploadDocument, new { @class = "", type = "file", @id = "AD_ApplicantUpload" })*@

                        @if (!string.IsNullOrEmpty(Model.AllopathicDrugModel.ADApplicantModel.UploadDocument))
                        {
                            var documentindex = Model.AllopathicDrugModel.ADApplicantModel.UploadDocument.LastIndexOf("/");
                            var documentfileName = Model.AllopathicDrugModel.ADApplicantModel.UploadDocument.Substring(documentindex + 1);
                            @Html.ActionLink(documentfileName, "DownloadFile", "Generic",
                        new { Area = "", path = Model.AllopathicDrugModel.ADApplicantModel.UploadDocument, downloadName = documentfileName },
                        null
                        );
                        }

                    </div>
                </div>
                @*</form>*@
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Pharmacy</legend>
                @*<form id="formADPharmacy">*@
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.Name, "Pharmacy Name", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.HiddenFor(model => model.AllopathicDrugModel.ADPharmacyModel.Id, new { @id = "AD_PharmacyID" })
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD_PharmacyName" } })

                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.OwnedBy, new { @class = "control-label" })
                    </div>
                    <div class="col-md-1">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.OwnedBy)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.Rent, "From", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        <div class="row">
                            <div class="col-md-5">
                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.Fromdate, new { @class = "form-control datepicker", @id = "AD_PharmacyFromDate", @Value = @System.DateTime.Today.ToString("dd/MM/yyyy"), @placeholder = "From Date" })

                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.Rent, "To", new { @class = "control-label" })
                            </div>
                            <div class="col-md-5">
                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.ToDate, new { @class = "form-control datepicker", @id = "AD_PharmacyToDate", @Value = "", @placeholder = "To Date" })

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.DistrictName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.HouseNumber, new { htmlAttributes = new { @class = "form-control", @id = "AD_PharmacyHouseNo" } })

                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "AD_PharmacyStreet" } })

                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.PINCode, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_PharmacyPINCode" } })

                    </div>
                </div>

            </fieldset>
                                                    <fieldset class="scheduler-border">
                                                        <legend class="scheduler-border">Competent Person Incharge Details</legend>
                                                        @*<form id="formADCompetentPerson">*@
                                                        @Html.HiddenFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.Id, new { @id = "AD_CompetentID" })
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.Name, "Owner Name", new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD_CompetentName" } })

                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.Aadhar, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.Aadhar, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_CompetentAadhar" } })

                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.MobileNo, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.MobileNo, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_CompetentMobile" } })

                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.DistrictId, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.DistrictName)
                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.MandalId, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.MandalName)
                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.VillageId, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.VillageName)
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.HouseNumber, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.HouseNumber, new { htmlAttributes = new { @class = "form-control", @id = "AD_CompetentHouseNo" } })

                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.StreetName, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "AD_CompetentStreet" } })

                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.PINCode, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.PINCode, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_CompetentPINCode" } })

                                                            </div>
                                                        </div>
                                                        @*<div class="row">
                                                                <div class="col-md-1">
                                                                    @Html.LabelFor(model => model.ADApplicantModel.FileType, "File Type", new { @class = "control-label" })
                                                                </div>
                                                                <div class="col-md-3">
                                                                   @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.DistrictName)  </div>
                                                                <div class="col-md-1">
                                                                    @Html.LabelFor(model => model.ADApplicantModel.uploadedDocuments, "Certificate Upload ", new { @class = "control-label" })
                                                                </div>
                                                                <div class="col-md-3">
                                                                    @Html.TextBoxFor(model => model.ADApplicantModel.uploadedDocuments, new { @type = "file" })
                                                                </div>

                                                            </div>*@
                                                        @*</form>*@
                                                        <div class="row">
                                                            <div class="col-xs-12">
                                                                <div class="box">
                                                                    <div class="box-body table-responsive no-padding">
                                                                        <table id="tblCompetentCertificate" class="table table-hover">
                                                                            <tr>
                                                                                <th>S.No.</th>
                                                                                <th>File Type</th>
                                                                                <th>Documents</th>
                                                                                <th></th>
                                                                            </tr>
                                                                            @if (Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments != null)
                                                                            {
                                                                                for (int i = 0; i < Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments.Count; i++)
                                                                                {
                                                                                    <tr>
                                                                                        <td>@Convert.ToInt32(i + 1)</td>
                                                                                        <td>@Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments[i].UploadType</td>
                                                                                        <td>
                                                                                            @if (Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments[i].DocumentPath != null)
                                                                                            {
                                                                                                var layoutindex = Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments[i].DocumentPath.LastIndexOf("/");
                                                                                                var layoutfileName = Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments[i].DocumentPath.Substring(layoutindex + 1);
                                                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                      new { Area = "", path = Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments[i].DocumentPath, downloadName = layoutfileName }, null);
                                                                                            }
                                                                                        </td>
                                                                                    </tr>
                                                                                }
                                                                            }
                                                                        </table>
                                                                    </div>
                                                                    <!-- /.box-body -->
                                                                </div>
                                                                <!-- /.box -->
                                                            </div>
                                                        </div>
                                                    </fieldset>
                                                    <fieldset class="scheduler-border">
                                                        <legend class="scheduler-border">Name of Drugs</legend>
                                                        @*<form id="formADDrugName">*@

                                                        @*</form>*@
                                                        <div class="row">
                                                            <div class="col-xs-12">
                                                                <div class="box">
                                                                    <div class="box-body table-responsive no-padding">
                                                                        <table id="tblDrugNames" class="table table-hover">
                                                                            <tr>
                                                                                <th>S.No.</th>
                                                                                <th>Name</th>
                                                                                <th></th>
                                                                            </tr>
                                                                            @if (Model.AllopathicDrugModel.AllopathicDrugList != null)
                                                                            {
                                                                                for (int i = 0; i < Model.AllopathicDrugModel.AllopathicDrugList.Count; i++)
                                                                                {
                                                                                    <tr>
                                                                                        <td>@Convert.ToInt32(i + 1)</td>
                                                                                        <td>@Model.AllopathicDrugModel.AllopathicDrugList[i].Name</td>
                                                                                        @*<td><input type='button' value='Delete' onclick='DeleteDrugNames(@i);' /></td>*@
                                                                                    </tr>
                                                                                }
                                                                            }

                                                                        </table>
                                                                    </div>
                                                                    <!-- /.box-body -->
                                                                </div>
                                                                <!-- /.box -->
                                                            </div>
                                                        </div>

                                                    </fieldset>
                                                    <fieldset class="scheduler-border">
                                                        <legend class="scheduler-border">Declaration</legend>
                                                        @*<form id="formHDDeclaration">*@
                                                        @Html.HiddenFor(model => model.AllopathicDrugModel.ADDeclaration.Id, new { @id = "ADDeclaration_Id" })
                                                        <br />
                                                        @*<div class="row">
                                                                <div class="col-md-1" style="text-align:right; margin-top:-1%">
                                                                    <div class="checkbox">
                                                                        @Html.DisplayFor(model => model.ADDeclaration.HasAppliedSpecialStorage, new
                                                                   {
                                                                       htmlAttributes = new
                                                                       {
                                                                           @class = "allopathic"
                                                                       }
                                                                   })
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-10">
                                                                    @Html.LabelFor(model => model.ADDeclaration.HasAppliedSpecialStorage, "Particulars of Special Storage accommodation", htmlAttributes: new { @class = "control-label" })
                                                                </div>
                                                            </div>*@
                                                        <div class="row">
                                                            <div class="row">
                                                                <div class="col-md-8">
                                                                    @Html.LabelFor(model => model.AllopathicDrugModel.ADDeclaration.TextArea, "Particulars of Special Storage accommodation", new { @class = "control-label", })
                                                                </div>
                                                            </div>

                                                            <div class="row">
                                                                <div class="col-md-8 focus" id="divDescription">
                                                                    @Html.DisplayFor(model => model.AllopathicDrugModel.ADDeclaration.TextArea, new { style = "width:100%" })
                                                                </div>

                                                            </div>
                                                        </div>
                                                        <br />
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADDeclaration.Date, "Date", new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-2">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADDeclaration.Date, new { @class = "form-control datepicker", @id = "ADDeclaration_Date", @Value = @System.DateTime.Today.ToString("dd/MM/yyyy") })
                                                            </div>
                                                            <div class="col-md-6 text-right">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADDeclaration.Sign, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADDeclaration.Sign, new { htmlAttributes = new { @class = "form-control", @id = "ADDeclaration_Sign" } })

                                                            </div>
                                                        </div>
                                                        @*</form>*@
                                                    </fieldset>

        }
        if (Model.AllopathicDrugModel.ADApplicantModel.ServiceId == 37)
        {
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Applicant</legend>
                @*<form id="formADApplicant">*@
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.Name, "Owner Name", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.HiddenFor(model => model.AllopathicDrugModel.ADApplicantModel.Id, new { @id = "AD_ApplicantID" })
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD_ApplicantName" } })

                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.OwnershipType, "Ownership Type", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.OwnershipType)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.DistrictName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.PAN, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.PAN)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.MobileNo, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.MobileNo)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.DistrictName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.MandalName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.VillageName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.HouseNumber)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.StreetName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.PINCode)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADApplicantModel.UploadDocument, "Document (AOA/MOA/Ownership)", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @*@Html.TextBoxFor(model => model.AllopathicDrugModel.ADApplicantModel.UploadDocument, new { @class = "", type = "file", @id = "AD_ApplicantUpload" })*@

                        @if (!string.IsNullOrEmpty(Model.AllopathicDrugModel.ADApplicantModel.UploadDocument))
                        {
                            var documentindex = Model.AllopathicDrugModel.ADApplicantModel.UploadDocument.LastIndexOf("/");
                            var documentfileName = Model.AllopathicDrugModel.ADApplicantModel.UploadDocument.Substring(documentindex + 1);
                            @Html.ActionLink(documentfileName, "DownloadFile", "Generic",
                        new { Area = "", path = Model.AllopathicDrugModel.ADApplicantModel.UploadDocument, downloadName = documentfileName },
                        null
                        );
                        }

                    </div>
                </div>
                @*</form>*@
            </fieldset>
            <fieldset class="scheduler-border">
                <legend class="scheduler-border">Pharmacy</legend>
                @*<form id="formADPharmacy">*@
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.Name, "Pharmacy Name", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.HiddenFor(model => model.AllopathicDrugModel.ADPharmacyModel.Id, new { @id = "AD_PharmacyID" })
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD_PharmacyName" } })

                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.OwnedBy, new { @class = "control-label" })
                    </div>
                    <div class="col-md-1">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.OwnedBy)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.Rent, "From", new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        <div class="row">
                            <div class="col-md-5">
                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.Fromdate, new { @class = "form-control datepicker", @id = "AD_PharmacyFromDate", @Value = @System.DateTime.Today.ToString("dd/MM/yyyy"), @placeholder = "From Date" })

                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.Rent, "To", new { @class = "control-label" })
                            </div>
                            <div class="col-md-5">
                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.ToDate, new { @class = "form-control datepicker", @id = "AD_PharmacyToDate", @Value = "", @placeholder = "To Date" })

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.DistrictId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.MandalId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.DistrictName)
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.VillageId, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.DistrictName)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.HouseNumber, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.HouseNumber, new { htmlAttributes = new { @class = "form-control", @id = "AD_PharmacyHouseNo" } })

                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.StreetName, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "AD_PharmacyStreet" } })

                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.AllopathicDrugModel.ADPharmacyModel.PINCode, new { @class = "control-label" })
                    </div>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.AllopathicDrugModel.ADPharmacyModel.PINCode, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_PharmacyPINCode" } })

                    </div>
                </div>

            </fieldset>
                                                    <fieldset class="scheduler-border">
                                                        <legend class="scheduler-border">Competent Person Incharge Details</legend>
                                                        @*<form id="formADCompetentPerson">*@
                                                        @Html.HiddenFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.Id, new { @id = "AD_CompetentID" })
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.Name, "Owner Name", new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD_CompetentName" } })

                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.Aadhar, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.Aadhar, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_CompetentAadhar" } })

                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.MobileNo, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.MobileNo, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_CompetentMobile" } })

                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.DistrictId, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.DistrictName)
                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.MandalId, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.MandalName)
                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.VillageId, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.VillageName)
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.HouseNumber, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.HouseNumber, new { htmlAttributes = new { @class = "form-control", @id = "AD_CompetentHouseNo" } })

                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.StreetName, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "AD_CompetentStreet" } })

                                                            </div>
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.PINCode, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADCompetentPersonModel.PINCode, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_CompetentPINCode" } })

                                                            </div>
                                                        </div>
                                                        @*<div class="row">
                                                                <div class="col-md-1">
                                                                    @Html.LabelFor(model => model.ADApplicantModel.FileType, "File Type", new { @class = "control-label" })
                                                                </div>
                                                                <div class="col-md-3">
                                                                   @Html.DisplayFor(model => model.AllopathicDrugModel.ADApplicantModel.DistrictName)  </div>
                                                                <div class="col-md-1">
                                                                    @Html.LabelFor(model => model.ADApplicantModel.uploadedDocuments, "Certificate Upload ", new { @class = "control-label" })
                                                                </div>
                                                                <div class="col-md-3">
                                                                    @Html.TextBoxFor(model => model.ADApplicantModel.uploadedDocuments, new { @type = "file" })
                                                                </div>

                                                            </div>*@
                                                        @*</form>*@
                                                        <div class="row">
                                                            <div class="col-xs-12">
                                                                <div class="box">
                                                                    <div class="box-body table-responsive no-padding">
                                                                        <table id="tblCompetentCertificate" class="table table-hover">
                                                                            <tr>
                                                                                <th>S.No.</th>
                                                                                <th>File Type</th>
                                                                                <th>Documents</th>
                                                                                <th></th>
                                                                            </tr>
                                                                            @if (Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments != null)
                                                                            {
                                                                                for (int i = 0; i < Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments.Count; i++)
                                                                                {
                                                                                    <tr>
                                                                                        <td>@Convert.ToInt32(i + 1)</td>
                                                                                        <td>@Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments[i].UploadType</td>
                                                                                        <td>
                                                                                            @if (Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments[i].DocumentPath != null)
                                                                                            {
                                                                                                var layoutindex = Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments[i].DocumentPath.LastIndexOf("/");
                                                                                                var layoutfileName = Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments[i].DocumentPath.Substring(layoutindex + 1);
                                                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                      new { Area = "", path = Model.AllopathicDrugModel.ADCompetentPersonModel.uploadedDocuments[i].DocumentPath, downloadName = layoutfileName }, null);
                                                                                            }
                                                                                        </td>
                                                                                    </tr>
                                                                                }
                                                                            }
                                                                        </table>
                                                                    </div>
                                                                    <!-- /.box-body -->
                                                                </div>
                                                                <!-- /.box -->
                                                            </div>
                                                        </div>
                                                    </fieldset>
                                                    <fieldset class="scheduler-border">
                                                        <legend class="scheduler-border">Name of Drugs</legend>
                                                        @*<form id="formADDrugName">*@

                                                        @*</form>*@
                                                        <div class="row">
                                                            <div class="col-xs-12">
                                                                <div class="box">
                                                                    <div class="box-body table-responsive no-padding">
                                                                        <table id="tblDrugNames" class="table table-hover">
                                                                            <tr>
                                                                                <th>S.No.</th>
                                                                                <th>Name</th>
                                                                                <th></th>
                                                                            </tr>
                                                                            @if (Model.AllopathicDrugModel.AllopathicDrugList != null)
                                                                            {
                                                                                for (int i = 0; i < Model.AllopathicDrugModel.AllopathicDrugList.Count; i++)
                                                                                {
                                                                                    <tr>
                                                                                        <td>@Convert.ToInt32(i + 1)</td>
                                                                                        <td>@Model.AllopathicDrugModel.AllopathicDrugList[i].Name</td>
                                                                                        @*<td><input type='button' value='Delete' onclick='DeleteDrugNames(@i);' /></td>*@
                                                                                    </tr>
                                                                                }
                                                                            }

                                                                        </table>
                                                                    </div>
                                                                    <!-- /.box-body -->
                                                                </div>
                                                                <!-- /.box -->
                                                            </div>
                                                        </div>

                                                    </fieldset>
                                                    <fieldset class="scheduler-border">
                                                        <legend class="scheduler-border">Declaration</legend>
                                                        @*<form id="formHDDeclaration">*@
                                                        @Html.HiddenFor(model => model.AllopathicDrugModel.ADDeclaration.Id, new { @id = "ADDeclaration_Id" })
                                                        <br />
                                                        @*<div class="row">
                                                                <div class="col-md-1" style="text-align:right; margin-top:-1%">
                                                                    <div class="checkbox">
                                                                        @Html.DisplayFor(model => model.ADDeclaration.HasAppliedSpecialStorage, new
                                                                   {
                                                                       htmlAttributes = new
                                                                       {
                                                                           @class = "allopathic"
                                                                       }
                                                                   })
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-10">
                                                                    @Html.LabelFor(model => model.ADDeclaration.HasAppliedSpecialStorage, "Particulars of Special Storage accommodation", htmlAttributes: new { @class = "control-label" })
                                                                </div>
                                                            </div>*@
                                                        <div class="row">
                                                            <div class="row">
                                                                <div class="col-md-8">
                                                                    @Html.LabelFor(model => model.AllopathicDrugModel.ADDeclaration.TextArea, "Particulars of Special Storage accommodation", new { @class = "control-label", })
                                                                </div>
                                                            </div>

                                                            <div class="row">
                                                                <div class="col-md-8 focus" id="divDescription">
                                                                    @Html.DisplayFor(model => model.AllopathicDrugModel.ADDeclaration.TextArea, new { style = "width:100%" })
                                                                </div>

                                                            </div>
                                                        </div>
                                                        <br />
                                                        <div class="row">
                                                            <div class="col-md-1">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADDeclaration.Date, "Date", new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-2">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADDeclaration.Date, new { @class = "form-control datepicker", @id = "ADDeclaration_Date", @Value = @System.DateTime.Today.ToString("dd/MM/yyyy") })
                                                            </div>
                                                            <div class="col-md-6 text-right">
                                                                @Html.LabelFor(model => model.AllopathicDrugModel.ADDeclaration.Sign, new { @class = "control-label" })
                                                            </div>
                                                            <div class="col-md-3">
                                                                @Html.DisplayFor(model => model.AllopathicDrugModel.ADDeclaration.Sign, new { htmlAttributes = new { @class = "form-control", @id = "ADDeclaration_Sign" } })

                                                            </div>
                                                        </div>
                                                        @*</form>*@
                                                    </fieldset>
        }
    }
</div>
<div class="row">
    <div class="col-md-2">
        Remarks :
    </div>
    <div class="col-md-8 focus" >

@Html.TextArea("Remarks", new { style = "width:100%" })
        <span id="spanRemarks" style="color:red"></span>
    </div>
</div>
<div class="row" style="text-align:center;">
    <input type="button" value="Cancel" id="btnCancel" data-dismiss="modal" class="btn btn-default" />
    <input type="button" value="Approve" id="btnApprove" class="btn btn-success" />
    <input type="button" value="Reject" id="btnReject" class="btn btn-warning" />
</div>
<script>
    $('#btnApprove').click(function(e){

        if($('#Remarks').val()!="") {

            $('#spanRemarks').text('');
            var data =PrepareData();
            var url = '@Url.Action("AppealApproval", "Dashboard", new { Area = "Admin" })';
            var jqxhr = $.post(url, data, function () { })
              .done(function (response) {
                  //if (response instanceof Object)
                  //    json = response;
                  //else
                  //    json = $.parseJSON(response);
                  var DistrictId=$('#hfDistrictId').val();
                  var jsonObject= GetModalJSON();
                  jsonObject.Title="License Preview";
                  jsonObject.IsLargeModal = true;
                  jsonObject.BodyContent=response;
                  jsonObject.NonActionButtonText="Goto List";
                  jsonObject.NonActionButtonClass="Success";
                  jsonObject.ShowNonActionButton=true;
                  $('#btnNonAction').click(function(e){

                      debugger;
                      var link='@Url.Action("GetDistrictAppeals", "Dashboard",new { Area = "Admin" ,DId= "_DistrictId" })';
                      link=link.replace("_DistrictId",DistrictId);
                      window.location.href=link;
                  });

                  ShowModal(jsonObject);
                  $('#btnClosePreview').hide();

              })
              .fail(function (jqxhr, textStatus, error) {
                  var err = textStatus + ", " + error;
                  console.log("Saving Request Failed: " + err);
              });
        }
        else{
            $('#Remarks').focus();
            $('#spanRemarks').text('Remarks Required');
        }
    });
    function PrepareData(serialized){

        var data;

        var InspectionPrivilege='False';


            data = {
                approval:
                    {
                        TransactionId:$('#TransactionId').val(),
                        Remarks:$('#Remarks').val()
                    },
                Submit:"Approve",
                HasInspectionPrivilege:InspectionPrivilege
            }
        return data;
    }

</script>
<script>



    $(function () {
        debugger;



        var pcpndt = @Html.Raw(Json.Encode(Model.PCPNDTModel));
        var apmce = @Html.Raw(Json.Encode(Model.APMCEModel));
        var bloodbankform27c=@Html.Raw(Json.Encode(Model.BloodBankModel));
        var bioCapstone=@Html.Raw(Json.Encode(Model.BioCapstoneModel));

        console.log('PCPNDT');
        console.log(pcpndt);
        console.log('APMCE');
        console.log(apmce);
        console.log('BloodBankForm27C');
        console.log(bloodbankform27c);

        console.log('BioCapstone');
        console.log(bioCapstone);

        debugger;
        if(pcpndt !=null)
        {
            BindFacility();
            BindTests();
            BindFacilities();
            BindInstitutionDataonPreview();
        }
       else if(bioCapstone !=null)
        {
            BindAuthorisationData();
            DisableCheckboxes();
        }


    });

    function BindFacility() {
        // Bind Facilities in Facility tab
        var pcpndtModel = @Html.Raw(Json.Encode(Model.PCPNDTModel));
        var facilities;
        if(pcpndtModel != undefined)
            facilities = pcpndtModel.FacilityModel.Faclities;
        if (facilities.length > 0) {
            var arrFacilities = facilities.split(',');
            for (var i = 0; i < arrFacilities.length; i++) {
                $('input:checkbox[name="facilitytypepreview"][value="' + arrFacilities[i] + '"]').iCheck('check');
            }
        }
    }

    function BindTests() {
        // Bind Invasive in Tests tab
        var pcpndtModel = @Html.Raw(Json.Encode(Model.PCPNDTModel));
        var invasives;
        if(pcpndtModel != undefined)
            invasives = pcpndtModel.TestsModel.InvasiveTests;
        if (invasives.length > 0) {
            var arrInvasives = invasives.split(',');
            for (var i = 0; i < arrInvasives.length; i++) {
                $('input:checkbox[name="testinvasivepreview"][value="' + arrInvasives[i] + '"]').iCheck('check');
            }
        }


        var noninvasives = pcpndtModel.TestsModel.NonInvasiveTests;
        if (noninvasives.length > 0) {
            var arrNonInvasives = noninvasives.split(',');
            for (var i = 0; i < arrNonInvasives.length; i++) {
                $('input:checkbox[name="testnoninvasivepreview"][value="' + arrNonInvasives[i] + '"]').iCheck('check');
            }
        }
    }

    function BindFacilities() {
        var pcpndtModel = @Html.Raw(Json.Encode(Model.PCPNDTModel));

        // Bind Tests in Facilities tab
        var tests = pcpndtModel.FacilitiesModel.Tests;
        if (tests.length > 0) {
            var arrTests = tests.split(',');
            for (var i = 0; i < arrTests.length; i++) {
                $('input:checkbox[name="facilitytestpreview"][value="' + arrTests[i] + '"]').iCheck('check');
            }
        }
        // Bind Studies in Facilities tab
        var studies = pcpndtModel.FacilitiesModel.Studies;
        if (studies.length > 0) {
            var arrStudies = studies.split(',');
            for (var i = 0; i < arrStudies.length; i++) {
                $('input:checkbox[name="facilitystudiespreview"][value="' + arrStudies[i] + '"]').iCheck('check');
            }
        }
    }


    function BindInstitutionDataonPreview(){
        debugger;
        var pcpndtModel = @Html.Raw(Json.Encode(Model.PCPNDTModel));
        ShowHideOwnershipUploads(pcpndtModel.InstitutionModel.OwnershipTypeId);

        var documentJson = pcpndtModel.InstitutionModel.StudyCertificateDocPaths;


        if (documentJson != undefined) {
            $('#tblStudyCertificatesonPreview').show();
            $('#tblStudyCertificatesonPreview tr').not(function () { return !!$(this).has('th').length; }).remove();
            var tr;
            //Append each row to html table
            for (var i = 0; i < documentJson.length; i++) {

                tr = $('<tr/>');
                tr.append("<td>" + (i + 1) + "</td>");

                var path = documentJson[i].DocumentPath;
                var index = path.indexOf("/");
                var displayFileName = path.substring(index + 1, path.length);
                var fileLink = '@Html.Raw(Html.ActionLink("displaytext", "DownloadFile", "Generic", new { Area = "", path = "filepath", downloadName = "downloadfilename" }, null))';
                fileLink = fileLink.replace("displaytext", displayFileName);
                fileLink = fileLink.replace("filepath", path);
                fileLink = fileLink.replace("downloadfilename", displayFileName);
                tr.append("<td>" + fileLink + "</td>");
                //tr.append("<td><input type='button' value='Delete' onclick='DeleteStudyCertificate(" + documentJson[i].Id + ");'/></td>");

                $('#tblStudyCertificatesonPreview').append(tr);
            }
            if(pcpndtModel.InstitutionModel.OwnershipTypeId > 0){
                debugger;
                $('#divOwnershipUploads').show();
                switch (pcpndtModel.InstitutionModel.OwnershipTypeId) {

                    case '1':
                     case 1:
                        {
                            $('#divAffidavitFile1').show();
                            $('#divStudyCertificateFiles1').show();
                            $('#divAssociationFile1').hide();


                        }
                        break;
                    case '2':
                    case '3':
                    case '5':
                    case 2:
                    case 3:
                    case 5:{
                        $('#divAffidavitFile1').show();
                        $('#divStudyCertificateFiles1').show();
                        $('#divAssociationFile1').show();
                        $('#spanArticlesofAssociation1').text('Articles of Association');
                    }
                        break;
                    case '4':
                    case 4:{
                        $('#divAffidavitFile1').show();
                        $('#divStudyCertificateFiles1').show();
                        $('#divAssociationFile1').show();
                        $('#spanArticlesofAssociation1').text('Articles of Association/Memorandum of Association');
                    }
                    default:

                }
            }
            else{
                $('#divOwnershipUploads').hide();
            }


            //if(InstitutionModel.FormStatus != 0){
            //    $('#btnInstitutionSave').val('Update');
            //    $('#btnInstitutionSave').removeClass('btn-primary');
            //    $('#btnInstitutionSave').addClass('btn-success');
            //}
        }
        else{
            $('#tblStudyCertificatesonPreview').hide();
        }
    }

    function BindAuthorisationData(){
        var bioCapstoneModel = @Html.Raw(Json.Encode(Model.BioCapstoneModel));

        var authorisation=bioCapstoneModel.AuthorisationModel.Authorasation;
        if ( authorisation.length > 0) {
            var arrAuthorisation = authorisation.split(',');
            for (var i = 0; i < arrAuthorisation.length; i++) {
                $('input:checkbox[name="authorasation"][value="' + arrAuthorisation[i] + '"]').iCheck('check');
            }
            for (var i = 0; i < arrAuthorisation.length; i++) {
                if(arrAuthorisation[i]==8)
                {
                    $('#hidtextbox').show();
                }
                else{
                    $('#hidtextbox').hide();
                }
            }

        }
    }
    function DisableCheckboxes(){
        debugger;
        var bioCapstoneModel1 = @Html.Raw(Json.Encode(Model.BioCapstoneModel));

        $.each($("input[name='authorasation']"), function () {
            $(this).parent('[class*="icheckbox"]').iCheck('disable');
        });
    }
</script>

<script>
    $(function () {
        $('input').iCheck({ checkboxClass: 'icheckbox_minimal-blue', radioClass: 'iradio_minimal-blue' });
        $(".select2").select2();
        $('input[type="checkbox"].flat-blue, input[type="radio"].flat-blue').iCheck({
            checkboxClass: 'icheckbox_flat-blue',
            radioClass: 'iradio_flat-blue'
        });
    });

    $('#btnPrint').on('click', function (e) {
        // console.log($('#divPrint').innerHTML);
        //printDiv();
        //PrintElem($('#divPrint'));
        //Print3();
        //printDiv('divModal');
        //alert('this will some soon');
        printDiv($('#divPrint').html());
    });
    function printDiv(data) {
        var mywindow = window.open('', 'new div', 'height=400,width=600');
        mywindow.document.write('<html><head><title></title>');
        mywindow.document.write('</head><body >');
        mywindow.document.write(data);
        mywindow.document.write('</body></html>');

        mywindow.print();
        mywindow.close();

        return true;
    }



    $('#btnMakePayment').on('click', function (e) {
        debugger;
        var tid = $('#Id').val();
        var link = '@Url.Action("Payment", "License", new { Area = "User", Id = "ApplicationId" })';
        link = link.replace("ApplicationId", tid);
        window.location.href = link;
        @*var url = '@Url.Action("SubmitApplication", "License", new { Area = "User" })';*@
        var Data = {
            Id: tid
        }
        debugger;
        var jqxhr = $.post(url, Data, function () { })
    .done(function (response) {
        debugger;
        var json;
        if (response instanceof Object)
            json = response;
        else
            json = $.parseJSON(response);
        ShowModal(response);
        $('#btnPreview').attr('disabled', 'disabled');
        $('#btnPreview').val('Submitted');
    })
.fail(function (jqxhr, status, error) {
    var err = status + ", " + error;
    console.log("SubmitApplication Request Failed: " + err);
});
        //window.location.href = '@Url.Action("Application", "License", new { Area = "User" })';
    });

    function printDiv4() {

        var divToPrint = $('#divPrint');

        var newWin = window.open('', 'Print-Window');

        newWin.document.open();

        newWin.document.write('<html><body onload="window.print()">' + divToPrint.innerHTML + '</body></html>');

        newWin.document.close();

        setTimeout(function () { newWin.close(); }, 10);

    }

    function PrintElem(elem) {
        var mywindow = window.open('', 'PRINT', 'height=400,width=600');

        mywindow.document.write('<html><head><title>' + document.title + '</title>');
        mywindow.document.write('</head><body >');
        mywindow.document.write('<h1>' + document.title + '</h1>');
        mywindow.document.write(document.getElementById(elem).innerHTML);
        mywindow.document.write('</body></html>');

        mywindow.document.close(); // necessary for IE >= 10
        mywindow.focus(); // necessary for IE >= 10*/

        mywindow.print();
        mywindow.close();

        return true;
    }

    function Print1() {
        var contents = $("#divModal").html();
        var frame1 = $('<iframe />');
        frame1[0].name = "frame1";
        frame1.css({ "position": "absolute", "top": "-1000000px" });
        $("body").append(frame1);
        var frameDoc = frame1[0].contentWindow ? frame1[0].contentWindow : frame1[0].contentDocument.document ? frame1[0].contentDocument.document : frame1[0].contentDocument;
        frameDoc.document.open();
        //Create a new HTML document.
        frameDoc.document.write('<html><head><title>DIV Contents</title>');
        frameDoc.document.write('</head><body>');
        //Append the external CSS file.
        frameDoc.document.write('<link href="style.css" rel="stylesheet" type="text/css" />');
        //Append the DIV contents.
        frameDoc.document.write(contents);
        frameDoc.document.write('</body></html>');
        frameDoc.document.close();
        setTimeout(function () {
            window.frames["frame1"].focus();
            window.frames["frame1"].print();
            frame1.remove();
        }, 500);
    }

    function Print2() {
        var printTaken = document.getElementById("divModal");
        printTaken.style.visibility = 'hidden';
        window.print()
        printTaken.style.visibility = 'visible';
    }

    function Print3() {
        var options = { mode: "popup", popHt: 500, popWd: 400, popX: 500, popY: 600, popTitle: "This is PrintArea Demo", popClose: false };
        $("#divModal").printArea(options);
    }

    //function printDiv(divName) {

    //    var printContents = document.getElementById(divName).innerHTML;
    //    w = window.open();

    //    w.document.write(printContents);
    //    w.document.write('<scr' + 'ipt type="text/javascript">' + 'window.onload = function() { window.print(); window.close(); };' + '</sc' + 'ript>');

    //    w.document.close(); // necessary for IE >= 10
    //    w.focus(); // necessary for IE >= 10

    //    return true;
    //}
</script>



