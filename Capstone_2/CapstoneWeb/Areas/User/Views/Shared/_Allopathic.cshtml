@model Capstone.Models.AllopathicDrugStoreViewModel

<div class="row">
    <div class="col-md-12">
        <!-- Custom Tabs -->
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tabAllopathicForm19" data-toggle="tab">Allopathic FORM 19</a></li>
                <li><a href="#tabAllopathicForm19C" data-toggle="tab">Allopathic FORM 19 C</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tabAllopathicForm19">
                    @*<form id="formAllopathicForm19">*@<form id="form19">
                        <div class="row">
                            <div class="col-md-12" style="text-align:center;">
                                <span style="font-size:x-large;">Allopathic Drug Store - FORM 19</span>
                                <br />
                                <i>[See Rule 59(2)]</i>
                                <br />
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-offset-1 col-md-10">
                                License to sale by wholesale/retail drugs specified in Schedule C and (1) and excluding those Specified in Schedule X* and/or
                                drugs other than those specified in Schedule C,C(1) and X to the Drugs and Cosmetics Rules, 1945<sup>*</sup> and also to Operate a pharmacy.
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="box">
                                    <div class="box-body">
                                        <fieldset class="scheduler-border">
                                            <legend class="scheduler-border">Applicant</legend>
                                            @*<form id="formADApplicant">*@
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.Name, "Owner Name", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.HiddenFor(model => model.ADApplicantModel.Id, new { @id = "AD_ApplicantID" })
                                                    @Html.EditorFor(model => model.ADApplicantModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD_ApplicantName" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.Name, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.OwnershipType, "Ownership Type", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.OwnershipType,
                                new List<SelectListItem> {
                                    new SelectListItem {Text = "Select Owner Type", Value = "", Selected = true },
                                    new SelectListItem {Text = "Individual", Value = "Individual" },
                                    new SelectListItem {Text = "Partner", Value = "Partner" },
                                    new SelectListItem {Text = "Company", Value = "Company" }
                                },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD_ApplicantOwnerType" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.OwnershipType, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.Aadhar, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.Aadhar, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_ApplicantAadhar" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.Aadhar, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.PAN, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.PAN, new { htmlAttributes = new { @class = "form-control", @id = "AD_ApplicantPAN", @Style = "text-transform: uppercase;" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.PAN, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.MobileNo, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.MobileNo, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_ApplicantMobile" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.MobileNo, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.DistrictId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.DistrictId,
                                new SelectList(ViewBag.DistrictList, "Id", "Name"), "Select District",
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD_ApplicantDistrictId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.DistrictId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.MandalId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.MandalId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Mandal", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD_ApplicantMandalId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.MandalId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.VillageId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.VillageId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Village", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD_ApplicantVillageId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.VillageId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.HouseNumber, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.HouseNumber, new { htmlAttributes = new { @class = "form-control", @id = "AD_ApplicantHouseNo" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.HouseNumber, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.StreetName, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "AD_ApplicantStreet" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.StreetName, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.PINCode, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.PINCode, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_ApplicantPINCode" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.PINCode, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.UploadDocument, "Document (AOA/MOA/Ownership)", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.TextBoxFor(model => model.ADApplicantModel.UploadDocument, new { @class = "", type = "file", @id = "AD_ApplicantUpload" })

                                                    @*@if (!string.IsNullOrEmpty(Model.HDApplicantModel.UploadDocument))
                                                            {
                                                                var documentindex = Model.HDApplicantModel.UploadDocument.LastIndexOf("/");
                                                                var documentfileName = Model.HDApplicantModel.UploadDocument.Substring(documentindex + 1);
                                                                @Html.ActionLink(documentfileName, "DownloadFile", "Generic",
                                                        new { Area = "", path = Model.HDApplicantModel.UploadDocument, downloadName = documentfileName },
                                                        null
                                                        );
                                                            }*@
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.UploadDocument, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            @*</form>*@
                                        </fieldset>
                                        <fieldset class="scheduler-border">
                                            <legend class="scheduler-border">Pharmacy</legend>
                                            @*<form id="formADPharmacy">*@
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.Name, "Pharmacy Name", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.HiddenFor(model => model.ADPharmacyModel.Id, new { @id = "AD_PharmacyID" })
                                                    @Html.EditorFor(model => model.ADPharmacyModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD_PharmacyName" } })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.Name, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.OwnedBy, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADPharmacyModel.OwnedBy,
                                new List<SelectListItem> {
                                    new SelectListItem {Text = "Select Owner Type", Value = "", Selected = true },
                                    new SelectListItem {Text = "Own", Value = "Own" },
                                    new SelectListItem {Text = "Rent", Value = "Rent" },
                                    new SelectListItem {Text = "Lease", Value = "Lease" }
                                },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD_PharmacyType" })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.OwnedBy, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.Rent, "Rent/Lease", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            @Html.TextBoxFor(model => model.ADPharmacyModel.Fromdate, new { @class = "form-control datepicker", @id = "AD_PharmacyFromDate", @Value = "", @placeholder = "From Date" })
                                                            @Html.ValidationMessageFor(model => model.ADPharmacyModel.Fromdate, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-6">
                                                            @Html.TextBoxFor(model => model.ADPharmacyModel.ToDate, new { @class = "form-control datepicker", @id = "AD_PharmacyToDate", @Value = "", @placeholder = "To Date" })
                                                            @Html.ValidationMessageFor(model => model.ADPharmacyModel.ToDate, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.DistrictId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADPharmacyModel.DistrictId,
                                new SelectList(ViewBag.DistrictList, "Id", "Name"), "Select District",
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD_PharmacyDistrictId" })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.DistrictId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.MandalId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADPharmacyModel.MandalId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Mandal", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD_PharmacyMandalId" })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.MandalId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.VillageId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADPharmacyModel.VillageId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Village", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD_PharmacyVillageId" })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.VillageId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.HouseNumber, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADPharmacyModel.HouseNumber, new { htmlAttributes = new { @class = "form-control", @id = "AD_PharmacyHouseNo" } })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.HouseNumber, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.StreetName, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADPharmacyModel.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "AD_PharmacyStreet" } })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.StreetName, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.PINCode, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADPharmacyModel.PINCode, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_PharmacyPINCode" } })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.PINCode, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            @*<div class="row">
                                                    <div class="col-md-1">
                                                        @Html.LabelFor(model => model.HDEstablishment.RentalDocument, "Document (Rent deed/Taxes)", new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.HDEstablishment.RentalDocument, new { @class = "", type = "file", @id = "AD_PharmacyRental" })

                                                        @if (!string.IsNullOrEmpty(Model.HDEstablishment.RentalDocument))
                                                        {
                                                            var taxesindex = Model.HDEstablishment.RentalDocument.LastIndexOf("/");
                                                            var taxdocumentName = Model.HDEstablishment.RentalDocument.Substring(taxesindex + 1);
                                                            @Html.ActionLink(taxdocumentName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.HDEstablishment.RentalDocument, downloadName = taxdocumentName },
                                                    null
                                                    );
                                                        }
                                                        @Html.ValidationMessageFor(model => model.HDApplicantModel.UploadDocument, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-md-1">
                                                        @Html.LabelFor(model => model.HDEstablishment.PlanPremisesDocument, "Document (Plan of the Premises)", new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.HDEstablishment.PlanPremisesDocument, new { @class = "", type = "file", @id = "AD_PharmacyPlanPremises" })

                                                        @if (!string.IsNullOrEmpty(Model.HDEstablishment.PlanPremisesDocument))
                                                        {
                                                            var premisesindex = Model.HDEstablishment.PlanPremisesDocument.LastIndexOf("/");
                                                            var premisesfileName = Model.HDEstablishment.PlanPremisesDocument.Substring(premisesindex + 1);
                                                            @Html.ActionLink(premisesfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.HDEstablishment.PlanPremisesDocument, downloadName = premisesfileName },
                                                    null
                                                    );
                                                        }
                                                        @Html.ValidationMessageFor(model => model.HDEstablishment.PlanPremisesDocument, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-md-1">
                                                        @Html.LabelFor(model => model.HDEstablishment.AddressProff, "Address Proof", new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.HDEstablishment.AddressProff, new { @class = "", type = "file", @id = "AD_PharmacyAddressProof" })

                                                        @if (!string.IsNullOrEmpty(Model.HDEstablishment.AddressProff))
                                                        {
                                                            var addressindex = Model.HDEstablishment.AddressProff.LastIndexOf("/");
                                                            var addressfileName = Model.HDEstablishment.AddressProff.Substring(addressindex + 1);
                                                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.HDEstablishment.AddressProff , downloadName = addressfileName },
                                                    null
                                                    );
                                                        }
                                                        @Html.ValidationMessageFor(model => model.HDEstablishment.AddressProff, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@
                                            @*</form>*@
                                        </fieldset>
                                        <fieldset class="scheduler-border">
                                            <legend class="scheduler-border">Competent Person Incharge Details</legend>
                                            @*<form id="formADCompetentPerson">*@
                                            @Html.HiddenFor(model => model.ADApplicantModel.Id, new { @id = "AD_CompetentID" })
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.Name, "Owner Name", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD_CompetentName" } })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.Name, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.Aadhar, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.Aadhar, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_CompetentAadhar" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.Aadhar, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.MobileNo, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.MobileNo, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_CompetentMobile" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.MobileNo, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.DistrictId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.DistrictId,
                                new SelectList(ViewBag.DistrictList, "Id", "Name"), "Select District",
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD_CompetentDistrictId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.DistrictId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.MandalId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.MandalId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Mandal", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD_CompetentMandalId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.MandalId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.VillageId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.VillageId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Village", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD_CompetentVillageId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.VillageId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.HouseNumber, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.HouseNumber, new { htmlAttributes = new { @class = "form-control", @id = "AD_CompetentHouseNo" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.HouseNumber, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.StreetName, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "AD_CompetentStreet" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.StreetName, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.PINCode, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.PINCode, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD_CompetentPINCode" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.PINCode, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.FileType, "File Type", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.FileType,
                                                        new List<SelectListItem> {
                                                            new SelectListItem {Text = "Select Type", Value = "", Selected = true },
                                                            new SelectListItem {Text = "Education", Value = "Education" },
                                                            new SelectListItem {Text = "Experience", Value = "Experience" }
                                                        },
                                                        new { @class = "form-control select2", @id = "AD_CompetentFileType", @style = "width:100%;" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.FileType, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.uploadedDocuments, "Certificate Upload ", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.TextBoxFor(model => model.ADApplicantModel.uploadedDocuments, new { @type = "file" })
                                                </div>
                                                <div class="col-md-2 text-right">
                                                    <input type="button" value="Upload" id="btnAddCompetentCertificate" class="btn btn-default" />
                                                </div>
                                            </div>
                                            @*</form>*@
                                            <div class="row">
                                                <div class="col-xs-12">
                                                    <div class="box">
                                                        <div class="box-body table-responsive no-padding">
                                                            <table id="tblCompetentCertificate" class="table table-hover">
                                                                <tr>
                                                                    <th>S.No.</th>
                                                                    <th>File Type</th>
                                                                    <th>Documents</th>
                                                                    <th></th>
                                                                </tr>
                                                            </table>
                                                        </div>
                                                        <!-- /.box-body -->
                                                    </div>
                                                    <!-- /.box -->
                                                </div>
                                            </div>
                                        </fieldset>
                                        <fieldset class="scheduler-border">
                                            <legend class="scheduler-border">Name of Drugs</legend>
                                            @*<form id="formADDrugName">*@
                                            @Html.HiddenFor(model => model.ADDrugNameModel.Id, new { @id = "ADDrug_ID" })
                                            <div class="row">
                                                <div class="col-md-offset-1 col-md-1">
                                                    @Html.LabelFor(model => model.ADDrugNameModel.Name, "Category Name", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.TextBoxFor(model => model.ADDrugNameModel.Name, new { @class = "form-control", @id = "ADDrug_Name" })
                                                    @Html.ValidationMessageFor(model => model.ADDrugNameModel.Name, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-2 text-right">
                                                    <input type="button" value="Add" id="btnDrugName" class="btn btn-default" />
                                                </div>
                                            </div>
                                            @*</form>*@
                                            <div class="row">
                                                <div class="col-xs-12">
                                                    <div class="box">
                                                        <div class="box-body table-responsive no-padding">
                                                            <table id="tblDrugNames" class="table table-hover">
                                                                <tr>
                                                                    <th>S.No.</th>
                                                                    <th>Name</th>
                                                                    <th></th>
                                                                </tr>
                                                                @if (Model.AllopathicDrugList != null)
                                                                {
                                                                    for (int i = 0; i < Model.AllopathicDrugList.Count; i++)
                                                                    {
                                                                        <tr>
                                                                            <td>@Convert.ToInt32(i + 1)</td>
                                                                            <td>@Model.AllopathicDrugList[i].Name</td>
                                                                            @*<td><input type='button' value='Delete' onclick='DeleteDrugNames(@i);' /></td>*@
                                                                        </tr>
                                                                    }
                                                                }

                                                            </table>
                                                        </div>
                                                        <!-- /.box-body -->
                                                    </div>
                                                    <!-- /.box -->
                                                </div>
                                            </div>

                                        </fieldset>
                                        <fieldset class="scheduler-border">
                                            <legend class="scheduler-border">Declaration</legend>
                                            @*<form id="formHDDeclaration">*@
                                            @Html.HiddenFor(model => model.ADDeclaration.Id, new { @id = "ADDeclaration_Id" })
                                            <br />
                                            <div class="row">
                                                <div class="col-md-1" style="text-align:right; margin-top:-1%">
                                                    <div class="checkbox">
                                                        @Html.EditorFor(model => model.ADDeclaration.HasAppliedSpecialStorage, new
                                                   {
                                                       htmlAttributes = new
                                                       {
                                                           @class = "allopathic"
                                                       }
                                                   })
                                                    </div>
                                                </div>
                                                <div class="col-md-10">
                                                    @Html.LabelFor(model => model.ADDeclaration.HasAppliedSpecialStorage, "Particulars of Special Storage accommodation", htmlAttributes: new { @class = "control-label" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-8 focus" id="divDescription" hidden>
                                                    @Html.TextAreaFor(model => model.ADDeclaration.TextArea, new { style = "width:100%" })
                                                    @Html.ValidationMessageFor(model => model.ADDeclaration.TextArea, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <br />
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADDeclaration.Date, "Date", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.TextBoxFor(model => model.ADDeclaration.Date, new { @class = "form-control datepicker", @id = "ADDeclaration_Date", @Value = @System.DateTime.Today.ToString("dd/MM/yyyy") })
                                                </div>
                                                <div class="col-md-6 text-right">
                                                    @Html.LabelFor(model => model.ADDeclaration.Sign, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADDeclaration.Sign, new { htmlAttributes = new { @class = "form-control", @id = "ADDeclaration_Sign" } })
                                                    @Html.ValidationMessageFor(model => model.ADDeclaration.Sign, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            @*</form>*@
                                        </fieldset>
                                        <div class="row">
                                            <div class="col-md-12 text-right">
                                                <input type="button" value="Clear" id="btnAllopathicForm19Clear" class="btn btn-default" />
                                                <input type="button" value="Save" id="btnAllopathicForm19Save" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- /.col -->
                        </div>
                        @*</form>*@
                    </form>
                </div>
                <div class="tab-pane" id="tabAllopathicForm19C">
                    <form id="form19C">
                        <div class="row">
                            <div class="col-md-12" style="text-align:center;">
                                <span style="font-size:x-large;">Allopathic Drug Store - FORM 19 C</span>
                                <br />
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-offset-1 col-md-10">
                                License to sell by Retail drugs specified in Schedule X to the Drugs and Cosmetics Rules, 1945 and also to Operate a pharmacy.
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="box">
                                    <div class="box-body">
                                        <fieldset class="scheduler-border">
                                            <legend class="scheduler-border">Applicant</legend>
                                            @*<form id="formADApplicant">*@
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.Name, "Owner Name", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.HiddenFor(model => model.ADApplicantModel.Id, new { @id = "AD19c_ApplicantID" })
                                                    @Html.EditorFor(model => model.ADApplicantModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD19c_ApplicantName" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.Name, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.OwnershipType, "Ownership Type", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.OwnershipType,
                                new List<SelectListItem> {
                                    new SelectListItem {Text = "Select Owner Type", Value = "", Selected = true },
                                    new SelectListItem {Text = "Individual", Value = "Individual" },
                                    new SelectListItem {Text = "Partner", Value = "Partner" },
                                    new SelectListItem {Text = "Company", Value = "Company" }
                                },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_ApplicantOwnerType" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.OwnershipType, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.Aadhar, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.Aadhar, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD19c_ApplicantAadhar" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.Aadhar, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.PAN, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.PAN, new { htmlAttributes = new { @class = "form-control", @id = "AD19c_ApplicantPAN", @Style = "text-transform: uppercase;" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.PAN, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.MobileNo, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.MobileNo, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD19c_ApplicantMobile" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.MobileNo, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.DistrictId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.DistrictId,
                                new SelectList(ViewBag.DistrictList, "Id", "Name"), "Select District",
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_ApplicantDistrictId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.DistrictId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.MandalId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.MandalId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Mandal", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_ApplicantMandalId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.MandalId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.VillageId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.VillageId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Village", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_ApplicantVillageId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.VillageId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.HouseNumber, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.HouseNumber, new { htmlAttributes = new { @class = "form-control", @id = "AD19c_ApplicantHouseNo" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.HouseNumber, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.StreetName, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "AD19c_ApplicantStreet" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.StreetName, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.PINCode, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.PINCode, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD19c_ApplicantPINCode" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.PINCode, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.UploadDocument, "Document (AOA/MOA/Ownership)", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.TextBoxFor(model => model.ADApplicantModel.UploadDocument, new { @class = "", type = "file", @id = "AD19c_ApplicantUpload" })

                                                    @*@if (!string.IsNullOrEmpty(Model.HDApplicantModel.UploadDocument))
                                                            {
                                                                var documentindex = Model.HDApplicantModel.UploadDocument.LastIndexOf("/");
                                                                var documentfileName = Model.HDApplicantModel.UploadDocument.Substring(documentindex + 1);
                                                                @Html.ActionLink(documentfileName, "DownloadFile", "Generic",
                                                        new { Area = "", path = Model.HDApplicantModel.UploadDocument, downloadName = documentfileName },
                                                        null
                                                        );
                                                            }*@
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.UploadDocument, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            @*</form>*@
                                        </fieldset>
                                        <fieldset class="scheduler-border">
                                            <legend class="scheduler-border">Pharmacy</legend>
                                            @*<form id="formADPharmacy">*@
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.Name, "Pharmacy Name", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.HiddenFor(model => model.ADPharmacyModel.Id, new { @id = "AD19c_PharmacyID" })
                                                    @Html.EditorFor(model => model.ADPharmacyModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD19c_PharmacyName" } })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.Name, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.OwnedBy, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADPharmacyModel.OwnedBy,
                                new List<SelectListItem> {
                                    new SelectListItem {Text = "Select Owner Type", Value = "", Selected = true },
                                    new SelectListItem {Text = "Own", Value = "Own" },
                                    new SelectListItem {Text = "Rent", Value = "Rent" },
                                    new SelectListItem {Text = "Lease", Value = "Lease" }
                                },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_PharmacyType" })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.OwnedBy, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.Rent, "Rent/Lease", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            @Html.TextBoxFor(model => model.ADPharmacyModel.Fromdate, new { @class = "form-control datepicker", @id = "AD19c_PharmacyFromDate", @Value = "", @placeholder = "From Date" })
                                                            @Html.ValidationMessageFor(model => model.ADPharmacyModel.Fromdate, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-6">
                                                            @Html.TextBoxFor(model => model.ADPharmacyModel.ToDate, new { @class = "form-control datepicker", @id = "AD19c_PharmacyToDate", @Value = "", @placeholder = "To Date" })
                                                            @Html.ValidationMessageFor(model => model.ADPharmacyModel.ToDate, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.DistrictId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADPharmacyModel.DistrictId,
                                new SelectList(ViewBag.DistrictList, "Id", "Name"), "Select District",
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_PharmacyDistrictId" })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.DistrictId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.MandalId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADPharmacyModel.MandalId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Mandal", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_PharmacyMandalId" })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.MandalId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.VillageId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADPharmacyModel.VillageId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Village", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_PharmacyVillageId" })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.VillageId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.HouseNumber, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADPharmacyModel.HouseNumber, new { htmlAttributes = new { @class = "form-control", @id = "AD19c_PharmacyHouseNo" } })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.HouseNumber, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.StreetName, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADPharmacyModel.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "AD19c_PharmacyStreet" } })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.StreetName, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADPharmacyModel.PINCode, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADPharmacyModel.PINCode, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD19c_PharmacyPINCode" } })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.PINCode, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            @*<div class="row">
                                                    <div class="col-md-1">
                                                        @Html.LabelFor(model => model.HDEstablishment.RentalDocument, "Document (Rent deed/Taxes)", new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.HDEstablishment.RentalDocument, new { @class = "", type = "file", @id = "AD_PharmacyRental" })

                                                        @if (!string.IsNullOrEmpty(Model.HDEstablishment.RentalDocument))
                                                        {
                                                            var taxesindex = Model.HDEstablishment.RentalDocument.LastIndexOf("/");
                                                            var taxdocumentName = Model.HDEstablishment.RentalDocument.Substring(taxesindex + 1);
                                                            @Html.ActionLink(taxdocumentName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.HDEstablishment.RentalDocument, downloadName = taxdocumentName },
                                                    null
                                                    );
                                                        }
                                                        @Html.ValidationMessageFor(model => model.HDApplicantModel.UploadDocument, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-md-1">
                                                        @Html.LabelFor(model => model.HDEstablishment.PlanPremisesDocument, "Document (Plan of the Premises)", new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.HDEstablishment.PlanPremisesDocument, new { @class = "", type = "file", @id = "AD_PharmacyPlanPremises" })

                                                        @if (!string.IsNullOrEmpty(Model.HDEstablishment.PlanPremisesDocument))
                                                        {
                                                            var premisesindex = Model.HDEstablishment.PlanPremisesDocument.LastIndexOf("/");
                                                            var premisesfileName = Model.HDEstablishment.PlanPremisesDocument.Substring(premisesindex + 1);
                                                            @Html.ActionLink(premisesfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.HDEstablishment.PlanPremisesDocument, downloadName = premisesfileName },
                                                    null
                                                    );
                                                        }
                                                        @Html.ValidationMessageFor(model => model.HDEstablishment.PlanPremisesDocument, "", new { @class = "text-danger" })
                                                    </div>
                                                    <div class="col-md-1">
                                                        @Html.LabelFor(model => model.HDEstablishment.AddressProff, "Address Proof", new { @class = "control-label" })
                                                    </div>
                                                    <div class="col-md-3">
                                                        @Html.TextBoxFor(model => model.HDEstablishment.AddressProff, new { @class = "", type = "file", @id = "AD_PharmacyAddressProof" })

                                                        @if (!string.IsNullOrEmpty(Model.HDEstablishment.AddressProff))
                                                        {
                                                            var addressindex = Model.HDEstablishment.AddressProff.LastIndexOf("/");
                                                            var addressfileName = Model.HDEstablishment.AddressProff.Substring(addressindex + 1);
                                                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.HDEstablishment.AddressProff , downloadName = addressfileName },
                                                    null
                                                    );
                                                        }
                                                        @Html.ValidationMessageFor(model => model.HDEstablishment.AddressProff, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@
                                            @*</form>*@
                                        </fieldset>
                                        <fieldset class="scheduler-border">
                                            <legend class="scheduler-border">Competent Person Incharge Details</legend>
                                            @*<form id="formADCompetentPerson">*@
                                            @Html.HiddenFor(model => model.ADApplicantModel.Id, new { @id = "AD19c_CompetentID" })
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.Name, "Owner Name", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.Name, new { htmlAttributes = new { @class = "form-control", @id = "AD19c_CompetentName" } })
                                                    @Html.ValidationMessageFor(model => model.ADPharmacyModel.Name, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.Aadhar, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.Aadhar, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD19c_CompetentAadhar" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.Aadhar, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.MobileNo, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.MobileNo, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD19c_CompetentMobile" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.MobileNo, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.DistrictId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.DistrictId,
                                new SelectList(ViewBag.DistrictList, "Id", "Name"), "Select District",
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_CompetentDistrictId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.DistrictId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.MandalId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.MandalId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Mandal", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_CompetentMandalId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.MandalId, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.VillageId, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.VillageId,
                                new List<SelectListItem>() { new SelectListItem() { Text = "Select Village", Value = "", Selected = true } },
                                new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_CompetentVillageId" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.VillageId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.HouseNumber, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.HouseNumber, new { htmlAttributes = new { @class = "form-control", @id = "AD19c_CompetentHouseNo" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.HouseNumber, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.StreetName, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "AD19c_CompetentStreet" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.StreetName, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.PINCode, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADApplicantModel.PINCode, new { htmlAttributes = new { @class = "form-control numeric", @id = "AD19c_CompetentPINCode" } })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.PINCode, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.FileType, "File Type", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.DropDownListFor(model => model.ADApplicantModel.FileType,
                                                        new List<SelectListItem> {
                                                            new SelectListItem {Text = "Select Type", Value = "", Selected = true },
                                                            new SelectListItem {Text = "Education", Value = "Education" },
                                                            new SelectListItem {Text = "Experience", Value = "Experience" }
                                                        },
                                                        new { @class = "form-control select2", @style = "width:100%;", @id = "AD19c_CompetentFile" })
                                                    @Html.ValidationMessageFor(model => model.ADApplicantModel.FileType, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADApplicantModel.uploadedDocuments, "Certificate Upload ", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.TextBoxFor(model => model.ADApplicantModel.uploadedDocuments, new { @id = "AD19c_CompetentCertificate", @type = "file" })
                                                </div>
                                                <div class="col-md-2 text-right">
                                                    <input type="button" value="Upload" id="btn19CAddCompetentCertificate" class="btn btn-default" />
                                                </div>
                                            </div>
                                            @*</form>*@
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="box">
                                                        <div class="box-body table-responsive no-padding">
                                                            <table id="tbl19CCompetentCertificate" class="table table-hover">
                                                                <tr>
                                                                    <th>S.No.</th>
                                                                    <th>File Type</th>
                                                                    <th>Documents</th>
                                                                    <th></th>
                                                                </tr>
                                                            </table>
                                                        </div>
                                                        <!-- /.box-body -->
                                                    </div>
                                                    <!-- /.box -->
                                                </div>
                                            </div>
                                        </fieldset>
                                        <fieldset class="scheduler-border">
                                            <legend class="scheduler-border">Name of Drugs</legend>
                                            @*<form id="formADDrugName">*@
                                            @Html.HiddenFor(model => model.ADDrugNameModel.Id, new { @id = "AD19cDrug_ID" })
                                            <div class="row">
                                                <div class="col-md-offset-1 col-md-1">
                                                    @Html.LabelFor(model => model.ADDrugNameModel.Name, "Category Name", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.TextBoxFor(model => model.ADDrugNameModel.Name, new { @class = "form-control", @id = "AD19cDrug_Name" })
                                                    @Html.ValidationMessageFor(model => model.ADDrugNameModel.Name, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-2 text-right">
                                                    <input type="button" value="Add" id="btn19cDrugName" class="btn btn-default" />
                                                </div>
                                            </div>
                                            @*</form>*@
                                            <div class="row">
                                                <div class="col-xs-12">
                                                    <div class="box">
                                                        <div class="box-body table-responsive no-padding">
                                                            <table id="tbl19cDrugNames" class="table table-hover">
                                                                <tr>
                                                                    <th>S.No.</th>
                                                                    <th>Name</th>
                                                                    <th></th>
                                                                </tr>
                                                                @if (Model.AllopathicDrugList != null)
                                                                {
                                                                    for (int i = 0; i < Model.AllopathicDrugList.Count; i++)
                                                                    {
                                                                        <tr>
                                                                            <td>@Convert.ToInt32(i + 1)</td>
                                                                            <td>@Model.AllopathicDrugList[i].Name</td>
                                                                            @*<td><input type='button' value='Delete' onclick='DeleteDrugNames(@i);' /></td>*@
                                                                        </tr>
                                                                    }
                                                                }

                                                            </table>
                                                        </div>
                                                        <!-- /.box-body -->
                                                    </div>
                                                    <!-- /.box -->
                                                </div>
                                            </div>

                                        </fieldset>
                                        <fieldset class="scheduler-border">
                                            <legend class="scheduler-border">Declaration</legend>
                                            @*<form id="formHDDeclaration">*@
                                            @Html.HiddenFor(model => model.ADDeclaration.Id, new { @id = "AD19cDeclaration_Id" })
                                            <br />
                                            <div class="row">

                                                <div class="col-md-1" style="text-align:right; margin-top:-1%">
                                                    <div class="checkbox">
                                                        @Html.EditorFor(model => model.ADDeclaration.HasAppliedSpecialStorage, new
                                                   {
                                                       htmlAttributes = new
                                                       {
                                                           @class = "allopathic",
                                                           @id = "ADDeclaration_19cHasAppliedSpecialStorage"
                                                       }
                                                   })
                                                    </div>
                                                </div>


                                                <div class="col-md-10">
                                                    @Html.LabelFor(model => model.ADDeclaration.HasAppliedSpecialStorage, "Particulars of Special Storage accommodation", htmlAttributes: new { @class = "control-label" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-8 focus" id="div19cDescription" hidden>
                                                    @Html.TextAreaFor(model => model.ADDeclaration.TextArea, new { style = "width:100%", @id = "19cTextArea" }

                                               )
                                                    @Html.ValidationMessageFor(model => model.ADDeclaration.TextArea, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <br />
                                            <div class="row">
                                                <div class="col-md-1">
                                                    @Html.LabelFor(model => model.ADDeclaration.Date, "Date", new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.TextBoxFor(model => model.ADDeclaration.Date, new { @class = "form-control datepicker", @id = "ADDeclaration19c_Date", @Value = @System.DateTime.Today.ToString("dd/MM/yyyy") })
                                                </div>
                                                <div class="col-md-6 text-right">
                                                    @Html.LabelFor(model => model.ADDeclaration.Sign, new { @class = "control-label" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.EditorFor(model => model.ADDeclaration.Sign, new { htmlAttributes = new { @class = "form-control", @id = "ADDeclaration19c_Sign" } })
                                                    @Html.ValidationMessageFor(model => model.ADDeclaration.Sign, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            @*</form>*@
                                        </fieldset>
                                        <div class="row">
                                            <div class="col-md-12 text-right">
                                                <input type="button" value="Clear" id="btnAllopathicForm19CClear" class="btn btn-default" />
                                                <input type="button" value="Save" id="btnAllopathicForm19CSave" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- /.col -->
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- nav-tabs-custom -->
    </div>
</div>

<script>
    $('#AD_ApplicantDistrictId').on('change', function () {
        debugger;
        BindMandals('AD_Applicant', this.value);
    });

    $('#AD_ApplicantMandalId').on('change', function () {
        BindVillages('AD_Applicant', this.value);
    });

    $('#AD_PharmacyDistrictId').on('change', function () {
        BindMandals('AD_Pharmacy', this.value);
    });

    $('#AD_PharmacyMandalId').on('change', function () {
        BindVillages('AD_Pharmacy', this.value);
    });

    $('#AD_CompetentDistrictId').on('change', function () {
        BindMandals('AD_Competent', this.value);
    });

    $('#AD_CompetentMandalId').on('change', function () {
        BindVillages('AD_Competent', this.value);
    });

    $('#btnAllopathicForm19Save').on('click', function (e) {
        e.preventDefault();
        debugger;
       
            var url = '@Url.Action("Allopathic", "Application", new { Area = "User" })';
            if (window.FormData !== undefined) {
                var AD_ApplicantUpload = $("#AD_ApplicantUpload").get(0).files[0];

                // Create FormData object
                var fileData = new FormData();

                //Applicant Data
                fileData.append('uploadForm', 'AllopathicForm19');
                fileData.append('ADApplicantModel.Name', $('#AD_ApplicantName').val());
                fileData.append('ADApplicantModel.OwnershipType', $('#AD_ApplicantOwnerType').val());
                fileData.append('ADApplicantModel.Aadhar', $('#AD_ApplicantAadhar').val());
                fileData.append('ADApplicantModel.PAN', $('#AD_ApplicantPAN').val());
                fileData.append('ADApplicantModel.MobileNo', $('#AD_ApplicantMobile').val());
                fileData.append('ADApplicantModel.DistrictId', $('#AD_ApplicantDistrictId').val());
                fileData.append('ADApplicantModel.MandalId', $('#AD_ApplicantMandalId').val());
                fileData.append('ADApplicantModel.VillageId', $('#AD_ApplicantMandalId').val());
                fileData.append('ADApplicantModel.HouseNumber', $('#AD_ApplicantHouseNo').val());
                fileData.append('ADApplicantModel.StreetName', $('#AD_ApplicantStreet').val());
                fileData.append('ADApplicantModel.PINCode', $('#AD_ApplicantPINCode').val());
                fileData.append('ADApplicantModel.FileType', 'AllopathicForm19');
                fileData.append('ADApplicantModel.UploadDocument', AD_ApplicantUpload);

                //Pharmacy Data
                fileData.append('ADPharmacyModel.Name', $('#AD_PharmacyName').val());
                fileData.append('ADPharmacyModel.OwnedBy', $('#AD_PharmacyType').val());
                fileData.append('ADPharmacyModel.Fromdate', $('#AD_PharmacyFromDate').val());
                fileData.append('ADPharmacyModel.ToDate', $('#AD_PharmacyToDate').val());
                fileData.append('ADPharmacyModel.DistrictId', $('#AD_PharmacyDistrictId').val());
                fileData.append('ADPharmacyModel.MandalId', $('#AD_PharmacyMandalId').val());
                fileData.append('ADPharmacyModel.VillageId', $('#AD_PharmacyVillageId').val());
                fileData.append('ADPharmacyModel.HouseNumber', $('#AD_PharmacyHouseNo').val());
                fileData.append('ADPharmacyModel.StreetName', $('#AD_PharmacyStreet').val());
                fileData.append('ADPharmacyModel.PINCode', $('#AD_PharmacyPINCode').val());
                //Competent Person Incharge Details
                fileData.append('ADCompetentPersonModel.Name', $('#AD_CompetentName').val());
                fileData.append('ADCompetentPersonModel.Aadhar', $('#AD_CompetentAadhar').val());
                fileData.append('ADCompetentPersonModel.MobileNo', $('#AD_CompetentMobile').val());
                fileData.append('ADCompetentPersonModel.DistrictId', $('#AD_CompetentDistrictId').val());
                fileData.append('ADCompetentPersonModel.MandalId', $('#AD_CompetentMandalId').val());
                fileData.append('ADCompetentPersonModel.VillageId', $('#AD_CompetentVillageId').val());
                fileData.append('ADCompetentPersonModel.HouseNumber', $('#AD_CompetentHouseNo').val());
                fileData.append('ADCompetentPersonModel.StreetName', $('#AD_CompetentStreet').val());
                fileData.append('ADCompetentPersonModel.PINCode', $('#AD_CompetentPINCode').val());
                fileData.append('ADCompetentPersonModel.FileType', $('#AD_CompetentFileType').val());

                fileData.append('ADDeclaration.TextArea', $('#ADDeclaration_TextArea').val());
                fileData.append('ADDeclaration.Date', $('#ADDeclaration_Date').val());
                fileData.append('ADDeclaration.Sign', $('#ADDeclaration_Sign').val());


                $.ajax({
                    type: "POST",
                    url: url,
                    data: fileData,
                    contentType: false,
                    processData: false,
                    async: true,
                    success: function (response) {
                        ClearForm19Controls();
                        //  $('#txtUpload').val('');
                        //BindUploads(response);

                    },
                    failure: function (response) {
                        alert('failure: ' + response.d);
                    },
                    error: function (response) {
                        alert('error: ' + response.d);
                    }
                });
            }
        
    });
    function ClearForm19Controls() {
        //Applicant Data

        $('#AD_ApplicantName').val('');
        $('#AD_ApplicantOwnerType').val('').trigger('change');
        $('#AD_ApplicantAadhar').val('');
        $('#AD_ApplicantPAN').val('');
        $('#AD_ApplicantMobile').val('');
        $('#AD_ApplicantDistrictId').val('').trigger('change');
        $('#AD_ApplicantMandalId').val('').trigger('change');
        $('#AD_ApplicantMandalId').val('').trigger('change');
        $('#AD_ApplicantHouseNo').val('');
        $('#AD_ApplicantStreet').val('');
        $('#AD_ApplicantPINCode').val('');


        //Pharmacy Data
        $('#AD_PharmacyName').val('');
        $('#AD_PharmacyType').val('');
        $('#AD_PharmacyFromDate').val('');
        $('#AD_PharmacyToDate').val('');
        $('#AD_PharmacyDistrictId').val('').trigger('change');
        $('#AD_PharmacyMandalId').val('').trigger('change');
        $('#AD_PharmacyVillageId').val('').trigger('change');
        $('#AD_PharmacyHouseNo').val('');
        $('#AD_PharmacyStreet').val('');
        $('#AD_PharmacyPINCode').val('');
        //Competent Person Incharge Details

        $('#AD_CompetentName').val('');
        $('#AD_CompetentAadhar').val('');
        $('#AD_CompetentMobile').val('');
        $('#AD_CompetentDistrictId').val('').trigger('change');
        $('#AD_CompetentMandalId').val('').trigger('change');
        $('#AD_CompetentVillageId').val('').trigger('change');
        $('#AD_CompetentHouseNo').val('');
        $('#AD_CompetentStreet').val('');
        $('#AD_CompetentPINCode').val('');
        $('#AD_CompetentFileType').val('').trigger('change');;

        $('#ADDeclaration_TextArea').val('');
        //$('#ADDeclaration_Date').val('');
        $('#ADDeclaration_Sign').val('');
    }


    $('#btnAllopathicForm19CSave').on('click', function (e) {
        e.preventDefault();
        if ($('#form19C').valid()) {
            var url = '@Url.Action("Allopathic", "Application", new { Area = "User" })';
            if (window.FormData !== undefined) {
                var AD19C_ApplicantUpload = $("AD19c_ApplicantUpload").get(0).files[0];

                // Create FormData object
                var fileData = new FormData();

                //Applicant Data
                fileData.append('ADApplicantModel.Name', $('#AD19c_ApplicantName').val());
                fileData.append('ADApplicantModel.OwnershipType', $('#AD19c_ApplicantOwnerType').val());
                fileData.append('ADApplicantModel.Aadhar', $('#AD19c_ApplicantAadhar').val());
                fileData.append('ADApplicantModel.PAN', $('#AD19c_ApplicantPAN').val());
                fileData.append('ADApplicantModel.MobileNo', $('#AD19c_ApplicantMobile').val());
                fileData.append('ADApplicantModel.DistrictId', $('#AD19c_ApplicantDistrictId').val());
                fileData.append('ADApplicantModel.MandalId', $('AD19c_ApplicantMandalId').val());
                fileData.append('ADApplicantModel.VillageId', $('AD19c_ApplicantVillageId').val());
                fileData.append('ADApplicantModel.HouseNumber', $('#AD_ApplicantHouseNo').val());
                fileData.append('ADApplicantModel.StreetName', $('AD19c_ApplicantStreet').val());
                fileData.append('ADApplicantModel.PINCode ', $('AD19c_ApplicantPINCode').val());
                fileData.append('ADApplicantModel.UploadDocument ', AD19C_ApplicantUpload);
                //Pharmacy Data
                fileData.append('ADPharmacyModel.Name', $('#AD19c_PharmacyID').val());
                fileData.append('ADPharmacyModel.OwnedBy', $('#AD19c_PharmacyName;').val());
                fileData.append('ADPharmacyModel.Fromdate', $('#AD19c_PharmacyFromDate').val());
                fileData.append('ADPharmacyModel.ToDate', $('#AD19c_PharmacyToDate').val());
                fileData.append('ADPharmacyModel.DistrictId', $('#AD19c_PharmacyDistrictId').val());
                fileData.append('ADApplicantModel.MandalId', $('#AD19c_PharmacyMandalId').val());
                fileData.append('ADPharmacyModel.VillageId', $('#AD19c_PharmacyVillageId').val());
                fileData.append('ADPharmacyModel.HouseNumber', $('#AD19c_PharmacyHouseNo').val());
                fileData.append('ADPharmacyModel.StreetName', $('#AD19c_PharmacyStreet').val());
                fileData.append('ADApplicantModel.PINCode', $('#AD19c_PharmacyPINCode').val());
                //Competent Person Incharge Details
                fileData.append('ADCompetentPersonModel.Name', $('#AD19c_CompetentName').val());
                fileData.append('ADCompetentPersonModel.Aadhar', $('#AD19c_CompetentAadhar').val());
                fileData.append('ADCompetentPersonModel.MobileNo', $('#AD19c_CompetentMobile').val());
                fileData.append('ADCompetentPersonModel.DistrictId', $('#AD19c_CompetentDistrictId').val());
                fileData.append('ADCompetentPersonModel.MandalId', $('#AD19c_CompetentMandalId').val());
                fileData.append('ADCompetentPersonModel.VillageId', $('#AD19c_CompetentVillageId').val());
                fileData.append('ADCompetentPersonModel.HouseNumber', $('#AD19c_CompetentHouseNo').val());
                fileData.append('ADCompetentPersonModel.StreetName', $('#AD19c_CompetentStreet').val());
                fileData.append('ADCompetentPersonModel.PINCode', $('#AD19c_CompetentPINCode').val());
                fileData.append('ADCompetentPersonModel.FileType', $('#AD19c_CompetentFile').val());
                $.ajax({
                    type: "POST",
                    url: url,
                    data: fileData,
                    contentType: false,
                    processData: false,
                    async: true,
                    success: function (response) {
                        // Clear controls
                        //  $('#txtUpload').val('');
                        //BindUploads(response);
                        ShowModal(response);

                    },
                    failure: function (response) {
                        alert('failure: ' + response.d);
                    },
                    error: function (response) {
                        alert('error: ' + response.d);
                    }
                });
            }
        }
    });
    function ClearForm19cControls() {
        $('#AD19c_ApplicantName').val();
        $('#AD19c_ApplicantOwnerType').val();
        $('#AD19c_ApplicantAadhar').val();
        $('#AD19c_ApplicantPAN').val();
        $('#AD19c_ApplicantMobile').val();
        $('#AD19c_ApplicantDistrictId').val('').trigger('change');
        $('AD19c_ApplicantMandalId').val('').trigger('change');
        $('AD19c_ApplicantVillageId').val('').trigger('change');
        $('#AD_ApplicantHouseNo').val();
        $('AD19c_ApplicantStreet').val();
        $('AD19c_ApplicantPINCode').val();

        //Pharmacy Data
        $('#AD19c_PharmacyID').val();
        $('#AD19c_PharmacyName;').val();
        $('#AD19c_PharmacyFromDate').val();
        $('#AD19c_PharmacyToDate').val();
        $('#AD19c_PharmacyDistrictId').val('').trigger('change');
        $('#AD19c_PharmacyMandalId').val('').trigger('change');
        $('#AD19c_PharmacyVillageId').val('').trigger('change');
        $('#AD19c_PharmacyHouseNo').val();
        $('#AD19c_PharmacyStreet').val();
        $('#AD19c_PharmacyPINCode').val();
        //Competent Person Incharge Details
        $('#AD19c_CompetentName').val();
        $('#AD19c_CompetentAadhar').val();
        $('#AD19c_CompetentMobile').val();
        $('#AD19c_CompetentDistrictId').val('').trigger('change');
        $('#AD19c_CompetentMandalId').val('').trigger('change');
        $('#AD19c_CompetentVillageId').val('').trigger('change');
        $('#AD19c_CompetentHouseNo').val();
        $('#AD19c_CompetentStreet').val();
        $('#AD19c_CompetentPINCode').val();
        $('#AD19c_CompetentFile').val();
    }

</script>
<script>

    $('#btnAddCompetentCertificate').click(function (e) {

        e.preventDefault();
        debugger;
        //var Validate19cUpload = $('#form19').validate();

        //var Is19cUploadValid = Validate19cUpload.element('#ADApplicantModel_uploadedDocuments');
        var uploadedFile = $("#ADApplicantModel_uploadedDocuments").get(0).files[0];
        //if (Is19cUploadValid) {
        if (uploadedFile !== undefined) {
            var uri = '@Url.Action("AddDocuments", "Application", new { Area = "User" })';
            // Create FormData object
            var fileData = new FormData();

            fileData.append('UploadType', $("#AD_CompetentFileType option:selected").val());
            fileData.append('ReferenceId', 1);
            fileData.append('DocumentPath', uploadedFile);
            $.ajax({
                type: "POST",
                url: uri,
                data: fileData,
                contentType: false,
                processData: false,
                async: true,
                success: function (response) {
                    // Clear controls
                    $('#ADApplicantModel_uploadedDocuments').val('');
                    // $('#AD_CompetentFileType').val("");
                    $('#AD_CompetentFileType').val('').trigger('change');

                    BindUploads(response);

                },
                failure: function (response) {
                    alert('failure: ' + response.d);
                },
                error: function (response) {
                    alert('error: ' + response.d);
                }
            });
        }

        //}

    });

    function BindUploads(response) {

        $('#tblCompetentCertificate tr').not(function () { return !!$(this).has('th').length; }).remove();
        $("#tblCompetentCertificate").empty()
        var json = response;

        var tr;
        tr = $('<tr/>');
        tr.append("<th>S.No.</th>");
        tr.append("<th>File Type</th>");
        tr.append("<th>Uploaded File</th>");
        $('#tblCompetentCertificate').append(tr);

        //Append each row to html table
        for (var i = 0; i < json.length; i++) {
            tr = $('<tr/>');
            tr.append("<td>" + (i + 1) + "</td>");
            tr.append("<td>" + json[i].UploadType + "</td>");
            var path = json[i].DocumentPath;
            var index = path.indexOf("/");
            var displayFileName = path.substring(index + 1, path.length);
            var fileLink = '@Html.Raw(Html.ActionLink("displaytext", "DownloadFile", "Generic", new { Area = "", path = "filepath", downloadName = "downloadfilename" }, null))';
            fileLink = fileLink.replace("displaytext", displayFileName);
            fileLink = fileLink.replace("DocumentType", json[i].UploadType);
            fileLink = fileLink.replace("filepath", json[i].DocumentPath);
            fileLink = fileLink.replace("downloadfilename", displayFileName);
            tr.append("<td>" + fileLink + "</td>");
            $('#tblCompetentCertificate').append(tr);
        }
    }
    $('#btn19CAddCompetentCertificate').click(function (e) {
        alert($("#AD19c_CompetentFile option:selected").val());
        e.preventDefault();
        debugger;
        var Validate19cUpload = $('#form19C').validate();

        var Is19cUploadValid = Validate19cUpload.element('#AD19c_CompetentFile');
        var uploadedFile = $("#AD19c_CompetentCertificate").get(0).files[0];
        if (Is19cUploadValid) {
            if (uploadedFile !== undefined) {
                var uri = '@Url.Action("AddDocuments", "Application", new { Area = "User" })';
                // Create FormData object
                var fileData = new FormData();

                fileData.append('UploadType', $("#AD19c_CompetentFile option:selected").val());
                fileData.append('ReferenceId', 2);
                fileData.append('DocumentPath', uploadedFile);
                $.ajax({
                    type: "POST",
                    url: uri,
                    data: fileData,
                    contentType: false,
                    processData: false,
                    async: true,
                    success: function (response) {
                        // Clear controls
                        //  $('#txtUpload').val('');
                        Bind19cUploads(response);

                    },
                    failure: function (response) {
                        alert('failure: ' + response.d);
                    },
                    error: function (response) {
                        alert('error: ' + response.d);
                    }
                });
            }

        }

    });

    function Bind19cUploads(response) {

        $('#tbl19CCompetentCertificate tr').not(function () { return !!$(this).has('th').length; }).remove();
        $("#tbl19CCompetentCertificate").empty()
        var json = response;

        var tr;
        tr = $('<tr/>');
        tr.append("<th>S.No.</th>");
        tr.append("<th>File Type</th>");
        tr.append("<th>Uploaded File</th>");
        $('#tbl19CCompetentCertificate').append(tr);

        //Append each row to html table
        for (var i = 0; i < json.length; i++) {
            tr = $('<tr/>');
            tr.append("<td>" + (i + 1) + "</td>");
            tr.append("<td>" + json[i].UploadType + "</td>");
            var path = json[i].DocumentPath;
            var index = path.indexOf("/");
            var displayFileName = path.substring(index + 1, path.length);
            var fileLink = '@Html.Raw(Html.ActionLink("displaytext", "DownloadFile", "Generic", new { Area = "", path = "filepath", downloadName = "downloadfilename" }, null))';
            fileLink = fileLink.replace("displaytext", displayFileName);
            fileLink = fileLink.replace("DocumentType", json[i].UploadType);
            fileLink = fileLink.replace("filepath", json[i].DocumentPath);
            fileLink = fileLink.replace("downloadfilename", displayFileName);
            tr.append("<td>" + fileLink + "</td>");
            $('#tbl19CCompetentCertificate').append(tr);
        }
    }

    $('#btnDrugName').click(function (e) {
        e.preventDefault();
        var data = {
            DrugName: $('#ADDrug_Name').val(),
            Type: "AD19Drug"
        }
        var uri = '@Url.Action("AddDrugs", "Application", new { Area = "User" })';
        var jqxhr = $.post(uri, data, function () { })
        .done(function (response) {
            BindDrugs(response);
        }
        );
    });
    @*$('#btn19cDrugName').click(function (e) {
        e.preventDefault();
        var data = {
            DrugName: $('#AD19cDrug_Name').val(),
            Type: "AD19cDrug"
        }
        var uri = '@Url.Action("AddDrugs", "Application", new { Area = "User" })';
        var jqxhr = $.post(uri, data, function () { })
        .done(function (response) {
            Bind19cDrugs(response);
        }
        );
    });

    function Bind19cDrugs(response) {
        debugger;
        $('#tbl19cDrugNames tr').not(function () { return !!$(this).has('th').length; }).remove();
        $("#tbl19cDrugNames").empty()
        var json = response;

        var tr;
        tr = $('<tr/>');
        tr.append("<th>S.No.</th>");
        tr.append("<th>Name</th>");
        $('#tbl19cDrugNames').append(tr);

        //Append each row to html table
        for (var i = 0; i < json.length; i++) {
            tr = $('<tr/>');
            tr.append("<td>" + (i + 1) + "</td>");
            tr.append("<td>" + json[i] + "</td>");

            $('#tbl19cDrugNames').append(tr);
        }
    }*@
    function BindDrugs(response) {
        debugger;
        $('#tblDrugNames tr').not(function () { return !!$(this).has('th').length; }).remove();
        $("#tblDrugNames").empty()
        var json = response;

        var tr;
        tr = $('<tr/>');
        tr.append("<th>S1.No.</th>");
        tr.append("<th>Name</th>");
        $('#tblDrugNames').append(tr);

        //Append each row to html table
        for (var i = 0; i < json.length; i++) {
            tr = $('<tr/>');
            tr.append("<td>" + (i + 1) + "</td>");
            tr.append("<td>" + json[i].Name + "</td>");

            $('#tblDrugNames').append(tr);
        }
    }
    $(document).ready(function () {
        $("#ADDeclaration_HasAppliedSpecialStorage").on('ifToggled', function (event) {
            debugger;
            if (this.checked) {
                $('#divDescription').show();
            } else
                $('#divDescription').hide();


        });
        $("#ADDeclaration_19cHasAppliedSpecialStorage").on('ifToggled', function (event) {
            debugger;
            if (this.checked) {
                $('#div19cDescription').show();
            } else
                $('#div19cDescription').hide();


        });


    });
</script>
