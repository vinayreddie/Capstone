@model Medical.Models.APMCEViewModel

<div class="row">
    <div class="col-md-12">
        <span style="font-size:large">Hospital (TAMCE ACT,2002)</span>
    </div>
    <div style="text-align:center">
        <img src="~/Content/images/logogovts.png" />
    </div>
    <div class="col-md-12" style="text-align:center;">
        <span style="font-size:x-large; color:red;">Government of Telangana</span>
        <br />
        <i>Medical, Health and Family Welfare Department</i>
        <br />
        <i>TAMCE</i>
        <br />
        <i>(prohibition of sex selection)act, 1994 & rules, 1996</i>
    </div>
    <div class="row">
        <div class="col-md-12" style="text-align:center;">
            <span style="font-size:x-large;">FORM-IV</span>
            <br />
            <i>[See rule 5 (a)]</i>
            <br />
            <span style="font-size:x-large;">Government of Telangana </span>
            <br />
            <span style="font-size:x-large;"> Health Medical & Family Welfare Department District Registering Authority</span>
            <br />
            <span style="font-size:x-large;">Certificate of Registration of Allopathic Private Medical Care Establishments</span>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <!-- Custom Tabs -->
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tabRegistration" data-toggle="tab">Registration</a></li>
                <li><a href="#tabCorreespondingAddress" data-toggle="tab">Address</a></li>
                <li><a href="#tabTrust" data-toggle="tab">Trust Details</a></li>
                <li><a href="#tabAccommodation" data-toggle="tab">Accommodation Details</a></li>
                <li><a href="#tabEstablishment" data-toggle="tab">Establishment Details</a></li>
                <li><a href="#tabServices" data-toggle="tab">Services Offered</a></li>
                <li><a href="#tabStaffDetails" data-toggle="tab">Staff Details</a></li>
                <li><a href="#tabInfraStructure" data-toggle="tab">Equipment &nbsp; Furniture Details</a></li>
                <li><a href="#tabFacilitiesAvailable" data-toggle="tab">Facilities Available</a></li>
                <li><a href="#tabInspectionReport" data-toggle="tab" style="display:none;">Inspection Report</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tabRegistration">
                    <form id="formRegistration">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Registration Details </legend>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-10">
                                    Whether Registration is sought for Main Facility or branches also, if so details (separate application shall be submitted for each branch)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2" style="font-size: larger;">
                                    @Html.LabelFor(model => model.RegistrationModel.FacilityType, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3" style="font-size: large;">
                                    <b> @Html.DisplayFor(model => model.RegistrationModel.FacilityType)</b>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.RegistrationModel.Name, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.RegistrationModel.Name)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.RegistrationModel.DistrictId, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.RegistrationModel.DistrictName)
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.RegistrationModel.MandalId, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.RegistrationModel.MandalName)
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.RegistrationModel.VillageId, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.RegistrationModel.VillageName)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.RegistrationModel.HouseNumber, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.RegistrationModel.HouseNumber)
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.RegistrationModel.StreetName, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.RegistrationModel.StreetName)
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.RegistrationModel.PINCode, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.RegistrationModel.PINCode)
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <!-- /.tab-pane -->
                <div class="tab-pane" id="tabCorreespondingAddress">
                    <form id="formCorrespondingAddress">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Correesponding Address Details </legend>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.CorrespondingAddress.Name, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.CorrespondingAddress.Name)
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.CorrespondingAddress.DistrictId, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.CorrespondingAddress.DistrictName)
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.CorrespondingAddress.MandalId, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.CorrespondingAddress.MandalName)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.CorrespondingAddress.VillageId, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.CorrespondingAddress.VillageName)
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.CorrespondingAddress.HouseNumber, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.CorrespondingAddress.HouseNumber)
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.CorrespondingAddress.StreetName, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.CorrespondingAddress.StreetName)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.CorrespondingAddress.PINCode, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.CorrespondingAddress.PINCode)
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <!-- /.tab-pane -->
                <div class="tab-pane" id="tabTrust">
                    <form id="formTrust">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Trust Details </legend>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.TrustModel.Name, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.TrustModel.Name)
                                </div>
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.TrustModel.DistrictId, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Html.DisplayFor(model => model.TrustModel.DistrictName)
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.TrustModel.MandalId, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.TrustModel.MandalName)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.TrustModel.VillageId, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.TrustModel.VillageName)
                                </div>
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.TrustModel.HouseNumber, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Html.DisplayFor(model => model.TrustModel.HouseNumber)
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.TrustModel.StreetName, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.TrustModel.StreetName)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.TrustModel.PINCode, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.TrustModel.PINCode)
                                </div>
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.TrustModel.EstablishedDate, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Model.TrustModel.EstablishedDate.ToString("dd-MM-yyyy")
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <!-- /.tab-pane -->
                <div class="tab-pane" id="tabInfraStructure">

                    <fieldset class="scheduler-border">
                        <legend class="scheduler-border">Equipment Furniture List</legend>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="box">
                                    <div class="box-body table-responsive no-padding">
                                        <table id="tblInfraStructure" class="table table-hover">
                                            <tr>
                                                <th>S.No.</th>
                                                <th>Name</th>
                                                <th>Quantity</th>
                                                <th>Model</th>
                                                <th>Remarks</th>
                                                <th>Uploaded File</th>
                                                <th></th>
                                            </tr>
                                            @if (Model.InfraStructureList != null)
                                            {
                                                for (int i = 0; i < Model.InfraStructureList.Count; i++)
                                                {
                                                    <tr>
                                                        <td> @Convert.ToInt32(@i + 1)</td>
                                                        <td>@Model.InfraStructureList[i].Name</td>
                                                        <td>@Model.InfraStructureList[i].Quantity</td>
                                                        <td>@Model.InfraStructureList[i].ItemModel</td>
                                                        <td>@Model.InfraStructureList[i].Remarks</td>
                                                        <td>
                                                            @if (Model.InfraStructureList[i].UploadedFilePath != null)
                                                            {
                                                                var addressindex = Model.InfraStructureList[i].UploadedFilePath.LastIndexOf("/");
                                                                var addressfileName = Model.InfraStructureList[i].UploadedFilePath.Substring(addressindex + 1);
                                                                @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.InfraStructureList[i].UploadedFilePath, downloadName = addressfileName }, null);
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </table>
                                    </div>
                                    <!-- /.box-body -->
                                </div>
                                <!-- /.box -->
                            </div>
                        </div>
                    </fieldset>
                </div>
                <!-- /.tab-pane -->
                <div id="tabAccommodation" class="tab-pane">
                    <form id="formAccommodation">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Accommodation Details </legend>
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.Accommadation.EstablishmentTypeName, "Establishment Owned by", new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Html.HiddenFor(model => model.Accommadation.Id)
                                    @Html.DisplayFor(model => model.Accommadation.EstablishmentTypeName, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.Accommadation.FromDate, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Model.Accommadation.FromDate.ToString("dd-MM-yyyy")
                                </div>
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.Accommadation.ToDate, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Model.Accommadation.ToDate.ToString("dd-MM-yyyy")

                                </div>
                            </div>
                            <div class="row" id="divAccommodationUpload">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.Accommadation.UploadedFilePath, new { @class = "control-label", @id = "lblAccommodationLabel" })
                                </div>
                                <div class="col-md-3">
                                    @if (!string.IsNullOrEmpty(Model.Accommadation.UploadedFilePath))
                                    {
                                        var addressindex = Model.Accommadation.UploadedFilePath.LastIndexOf("/");
                                        var addressfileName = Model.Accommadation.UploadedFilePath.Substring(addressindex + 1);
                                        @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.Accommadation.UploadedFilePath, downloadName = addressfileName },
                            null
                            );
                                    }

                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <!-- /.tab-pane -->
                <div id="tabEstablishment" class="tab-pane">
                    <form id="formEstablishment">

                        <div class="row">
                            <div class="col-md-offset-1 col-md-2">
                                @Html.LabelFor(model => model.EstablishmentModel.EstablishmentDate, new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">
                                @Model.EstablishmentModel.EstablishmentDate.ToString("dd-MM-yyyy")
                                @*@Html.HiddenFor(model => model.EstablishmentModel.Id)
                                    @Html.DisplayFor(model => model.EstablishmentModel.EstablishmentDate, new { htmlAttributes = new { @class = "form-control datepicker" } })*@

                            </div>
                        </div>
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Total Area of Establishment</legend>
                            <div class="row">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.EstablishmentModel.OpenArea, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @*@Model.EstablishmentModel.EstablishmentDate.ToString("dd-MM-yyyy")*@
                                    @Html.DisplayFor(model => model.EstablishmentModel.OpenArea, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="col-md-3">
                                    @*@Html.DisplayFor(model => model.EstablishmentModel.OpenAreaFilePath, new { @class = "", type = "file" })*@
                                    @if (!String.IsNullOrWhiteSpace(Model.EstablishmentModel.OpenAreaFilePath))
                                    {
                                        var addressindex = Model.EstablishmentModel.OpenAreaFilePath.LastIndexOf("/");
                                        var addressfileName = Model.EstablishmentModel.OpenAreaFilePath.Substring(addressindex + 1);
                                        @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                     new { Area = "", path = Model.EstablishmentModel.OpenAreaFilePath, downloadName = addressfileName }, null);
                                    }
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.EstablishmentModel.ConstructionArea, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Html.DisplayFor(model => model.EstablishmentModel.ConstructionArea, new { htmlAttributes = new { @class = "form-control" } })

                                </div>
                                <div class="col-md-7">
                                    @*@Html.DisplayFor(model => model.EstablishmentModel.ConstructionAreaFilePath, new { @class = "", type = "file" })*@
                                    @if (!String.IsNullOrWhiteSpace(Model.EstablishmentModel.ConstructionAreaFilePath))
                                    {
                                        var addressindex = Model.EstablishmentModel.ConstructionAreaFilePath.LastIndexOf("/");
                                        var addressfileName = Model.EstablishmentModel.ConstructionAreaFilePath.Substring(addressindex + 1);
                                        @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                     new { Area = "", path = Model.EstablishmentModel.ConstructionAreaFilePath, downloadName = addressfileName }, null);
                                    }
                                </div>
                            </div>
                        </fieldset>

                    </form>
                </div>
                <!-- /.tab-pane -->
                <div id="tabServices" class="tab-pane">
                    <form id="formServices">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Service Offered Details </legend>
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.OfferedServices.BedStrength, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Html.HiddenFor(model => model.OfferedServices.Id)
                                    @Html.DisplayFor(model => model.OfferedServices.BedStrength, new { htmlAttributes = new { @class = "form-control numeric" } })

                                </div>
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.OfferedServices.OfferedServices, new { @class = "control-label" })
                                </div>
                                <div class="col-md-6">

                                    @Html.DisplayFor(model => model.OfferedServices.OfferedServices, new { htmlAttributes = new { @class = "form-control numeric" } })
                                </div>
                            </div>
                        </fieldset>
                    </form>
                </div>
                <!-- /.tab-pane -->
                <div id="tabStaffDetails" class="tab-pane">
                    <fieldset class="scheduler-border">
                        <legend class="scheduler-border">Staff List</legend>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="box">
                                    <div class="box-body table-responsive no-padding">
                                        <table id="tblStaffdetails" class="table table-hover">
                                            <tr>
                                                <th>S.No.</th>
                                                <th>Designation</th>
                                                <th>Name</th>
                                                <th>RegistrationNo</th>
                                                <th>Uploaded File</th>
                                                <th>Email</th>
                                                <th>Mobile</th>
                                                <th>Speciality</th>
                                                <th></th>
                                            </tr>
                                            @if (Model.StaffDetailsList != null)
                                            {
                                                for (int i = 0; i < Model.StaffDetailsList.Count; i++)
                                                {
                                                    <tr>
                                                        <td> @Convert.ToInt32(@i + 1)</td>
                                                        <td>@Model.StaffDetailsList[i].StaffDesignation</td>
                                                        <td>@Model.StaffDetailsList[i].Name</td>
                                                        <td>@Model.StaffDetailsList[i].RegistrationNumber</td>
                                                        <td>
                                                            @if (Model.StaffDetailsList[i].UploadedFilePath != null)
                                                            {
                                                                var addressindex = Model.StaffDetailsList[i].UploadedFilePath.LastIndexOf("/");
                                                                var addressfileName = Model.StaffDetailsList[i].UploadedFilePath.Substring(addressindex + 1);
                                                                @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.StaffDetailsList[i].UploadedFilePath, downloadName = addressfileName }, null);
                                                            }
                                                        </td>
                                                        <td>@Model.StaffDetailsList[i].Email</td>
                                                        <td>@Model.StaffDetailsList[i].PhoneNumber</td>
                                                        <td>@Model.StaffDetailsList[i].Speciality</td>

                                                        @*@if (@Model.StaffDetailsList[i].Id != 0)
                                                            {
                                                                <td>Existing</td>
                                                                <td><input type='button' value='Delete' onclick='DeleteInfraStructure(@i);' /></td>
                                                            }
                                                            else if (@Model.StaffDetailsList[i].Id == 0)
                                                            {
                                                                <td>New</td>
                                                                <td><input type='button' value='Delete' onclick='DeleteInfraStructure(@i);' /></td>
                                                            }
                                                            else if (@Model.StaffDetailsList[i].Id != 0 && @Model.StaffDetailsList[i].IsDeleted == true)
                                                            {
                                                                <td>Deleted</td>
                                                            }

                                                            <td><input type='button' value='Delete' onclick='DeleteStaffDetails(@i);'/></td>*@
                                                    </tr>

                                                }
                                            }

                                        </table>
                                    </div>
                                    <!-- /.box-body -->
                                </div>
                                <!-- /.box -->
                            </div>
                        </div>
                    </fieldset>


                </div>
                <!-- /.tab-pane -->
                <div id="tabFacilitiesAvailable" class="tab-pane">
                    <form id="formFacilitiesAvailable">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Facilities Available </legend>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-4">
                                    @Html.LabelFor(model => model.FacilitiesAvailableModel.HasLaborRoom, new { @class = "control-label" })
                                </div>
                                <div class="col-md-1">
                                    @if (Model.FacilitiesAvailableModel.HasLaborRoom)
                                    {<text>Yes</text>}
                                else
                                {<text>No</text>}
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-4">
                                    @Html.LabelFor(model => model.FacilitiesAvailableModel.HasOperationTheater, new { @class = "control-label" })
                                </div>
                                <div class="col-md-1">
                                    @if (Model.FacilitiesAvailableModel.HasOperationTheater)
                                    {<text>Yes</text>}
                                else
                                {<text>No</text>}
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-4">
                                    @Html.LabelFor(model => model.FacilitiesAvailableModel.HasDiagnosticFacility, new { @class = "control-label" })
                                </div>
                                <div class="col-md-1">
                                    @if (Model.FacilitiesAvailableModel.HasDiagnosticFacility)
                                    {<text>Yes</text>}
                                else
                                {<text>No</text>}
                                </div>
                            </div>
                            <br /><br />
                            <div class="row" id="divDeclarationStampDetails">

                                @if (Model.FacilitiesAvailableModel.DeclarationStampFilePath != null && Model.FacilitiesAvailableModel.DeclarationStampFilePath != "" && Model.FacilitiesAvailableModel.DeclarationStampFilePath != string.Empty)
                                {
                                    <div class="col-md-5">
                                        @Html.LabelFor(model => model.FacilitiesAvailableModel.DeclarationStampFilePath, new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-6">
                                        @if (Model.FacilitiesAvailableModel.DeclarationStampFilePath != null && Model.FacilitiesAvailableModel.DeclarationStampFilePath != "" && Model.FacilitiesAvailableModel.DeclarationStampFilePath != string.Empty)
                                        {
                                            var addressindex = Model.FacilitiesAvailableModel.DeclarationStampFilePath.LastIndexOf("/");
                                            var addressfileName = Model.FacilitiesAvailableModel.DeclarationStampFilePath.Substring(addressindex + 1);
                                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                         new { Area = "", path = Model.FacilitiesAvailableModel.DeclarationStampFilePath, downloadName = addressfileName }, null);
                                        }
                                    </div>
                                }

                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.FacilitiesAvailableModel.OtherInformationDescription, new { @class = "control-label" })
                                </div>
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.FacilitiesAvailableModel.OtherInformationDescription, new { htmlAttributes = new { @class = "form-control" } })

                                </div>
                                <div class="col-md-6">
                                    @if (!string.IsNullOrEmpty(Model.FacilitiesAvailableModel.OtherInformationDocumentPath))
                                    {
                                        var addressindex = Model.FacilitiesAvailableModel.OtherInformationDocumentPath.LastIndexOf("/");
                                        var addressfileName = Model.FacilitiesAvailableModel.OtherInformationDocumentPath.Substring(addressindex + 1);
                                        @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                         new { Area = "", path = Model.FacilitiesAvailableModel.OtherInformationDocumentPath, downloadName = addressfileName }, null);
                                    }
                                </div>
                            </div>
                        </fieldset>

                    </form>
                </div>



            </div>
            <!-- /.tab-content -->
        </div>
        <!-- nav-tabs-custom -->
    </div>
    <!-- /.col -->

</div>
