

@model Capstone.Models.PCPNDTViewModel
    @using (Html.BeginForm("_PCPNDTEquipment", "Amendments", FormMethod.Post))
    {

<section class="content">

    <div class="row">
        <div class="col-md-12">
            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title">Equipment Details </h3>
                </div>
                <div class="tab-pane" id="tabEquipment">
                    <form id="formEquipment">
                        @Html.HiddenFor(model => model.EquipmentModel.Id)
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Equipment Details</legend>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.EquipmentModel.Name, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Html.HiddenFor(model => model.EquipmentModel.Id)
                                    @Html.TextBoxFor(model => model.EquipmentModel.Name, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EquipmentModel.Name, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 text-right">
                                    @Html.LabelFor(model => model.EquipmentModel.MachineModel, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(model => model.EquipmentModel.MachineModel, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EquipmentModel.MachineModel, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2 text-right">
                                    @Html.LabelFor(model => model.EquipmentModel.SerialNumber, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(model => model.EquipmentModel.SerialNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EquipmentModel.SerialNumber, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.EquipmentModel.Make, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(model => model.EquipmentModel.Make, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EquipmentModel.Make, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 text-right">
                                    @Html.LabelFor(model => model.EquipmentModel.Type, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(model => model.EquipmentModel.Type, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EquipmentModel.Type, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2 text-right">
                                    @Html.LabelFor(model => model.EquipmentModel.UploadedFilePath, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(model => model.EquipmentModel.UploadedFilePath, new { @type = "file" })
                                    @Html.ValidationMessageFor(model => model.EquipmentModel.UploadedFilePath, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2 text-right">
                                    <input type="button" value="Add" id="btnAddEquipment" class="btn btn-default" />
                                </div>
                            </div>
                        </fieldset>
                    </form>
                    <fieldset class="scheduler-border">
                        <legend class="scheduler-border">Equipment List</legend>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="box">
                                    <div class="box-body table-responsive no-padding">
                                        <table id="tblEquiments" class="table table-hover">
                                            <tr>
                                                <th>S.No.</th>
                                                <th>Name</th>
                                                <th>Serial No.</th>
                                                <th>Model</th>
                                                <th>Make</th>
                                                <th>Type</th>
                                                <th>Uploaded File</th>
                                                <th></th>
                                            </tr>
                                            @if (Model.EquipmentList != null)
                                            {
                                                for (int i = 0; i < Model.EquipmentList.Count; i++)
                                                {
                                                    <tr>
                                                        <td>@Convert.ToInt32(i + 1)</td>
                                                        <td>@Model.EquipmentList[i].Name</td>
                                                        <td>@Model.EquipmentList[i].SerialNumber</td>
                                                        <td>@Model.EquipmentList[i].MachineModel</td>
                                                        <td>@Model.EquipmentList[i].Make</td>
                                                        <td>@Model.EquipmentList[i].Type</td>
                                                        <td>
                                                            @if (Model.EquipmentList[i].UploadedFilePath != null)
                                                            {
                                                                var layoutindex = Model.EquipmentList[i].UploadedFilePath.LastIndexOf("/");
                                                                var layoutfileName = Model.EquipmentList[i].UploadedFilePath.Substring(layoutindex + 1);
                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                    new { Area = "", path = Model.EquipmentList[i].UploadedFilePath, downloadName = layoutfileName }, null);
                                                            }
                                                        </td>
                                                        <td><input type='button' value='Delete' onclick='DeleteEquipment(@i);' /></td>
                                                    </tr>
                                                }
                                            }

                                        </table>
                                    </div>
                                    <!-- /.box-body -->
                                </div>
                                <!-- /.box -->
                            </div>
                        </div>
                    </fieldset>
                    <div class="row">
                        <div class="col-md-12 text-right">
                            <input type="button" value="Clear" id="btnEquipmentClear" class="btn btn-default" />
                            <input type="button" value="Save" id="btnEquipmentSave" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

    }