@using Medical.Models;
@model ExistingLicense

@{
    ViewBag.Title = "AddExistingLicenseDetails";
    Layout = "~/Views/Shared/_AdminLTELayout.cshtml";
}
<section class="content-header">
    <h1>
        Add Existing License Details
    </h1>
    <ol class="breadcrumb" style="display:none;">
        <li><a href="@Url.Action("index","Dashboard","User")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="@Url.Action("Drafts","Dashboard","User")">Questionnaire</a></li>
        <li class="active">New</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <form id="formExistingLicense">
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Existing License Details</legend>
                    @*<div class="row">
            <div class="col-md-offset-1 col-md-10">
                Whether Registration is sought for Main Facility or branches also, if so details (separate application shall be submitted for each branch)
            </div>
        </div>*@
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.HiddenFor(model => model.Id)
                            @Html.LabelFor(model => model.ApplicationNumber, new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.ApplicationNumber, new { htmlAttributes = new { @class = "form-control numeric" } })
                            @Html.ValidationMessageFor(model => model.ApplicationNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.SubmittedOn, new { @class = "control-label" })
                        </div>
                        @if (Model.Id == 0)
                        {
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.SubmittedOn, new { htmlAttributes = new { @class = "form-control datepicker", @Value = @System.DateTime.Today.ToString("dd/MM/yyyy") } })
                            </div>
                        }
                        else
                        {
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.SubmittedOn, new { htmlAttributes = new { @class = "form-control datepicker", @Value = Model.SubmittedOn.ToString("dd/MM/yyyy") } })

                            </div>
                        }
                    </div>

                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        @*<div class="col-md-2  text-right">
                @Html.LabelFor(model => model.LicenseNumber, new { @class = "control-label" })
                <span style="color:red">*</span>
            </div>
            <div class="col-md-2">
                @Html.EditorFor(model => model.LicenseNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LicenseNumber, "", new { @class = "text-danger" })
            </div>*@
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.ExistingLicenseNumber, "Existing License No.", new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.ExistingLicenseNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ExistingLicenseNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.LicenseIssueDate, "License Issue Date", new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.LicenseIssueDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            @Html.ValidationMessageFor(model => model.LicenseIssueDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.LicenseExpiryDate, "License Expiry Date", new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.LicenseExpiryDate, new { htmlAttributes = new { @class = "form-control datepicker", @disabled = true } })
                            @Html.ValidationMessageFor(model => model.LicenseExpiryDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.MobileNo, "Mobile No.", new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control numeric", @maxlength = 10 } })
                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.Aadhar, new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Aadhar, new { htmlAttributes = new { @class = "form-control numeric", @maxlength = 12 } })
                            @Html.ValidationMessageFor(model => model.Aadhar, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.PAN, new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.PAN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PAN, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        @*<div class="col-md-2  text-right">
                @Html.LabelFor(model => model.CurrentDesignationId, "Designation", new { @class = "control-label" })
                <span style="color:red">*</span>
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.CurrentDesignationId,
                    new List<SelectListItem>() {
                        new SelectListItem() { Text = "MD", Value = "7" } ,
                        new SelectListItem() {Text="MD", Value="1" },
                        new SelectListItem() {Text="21 to 50 beds", Value="2" },
                        new SelectListItem() {Text="51 to 100 beds", Value="3" },
                        new SelectListItem() {Text="101 to 200 beds", Value="4" },
                        new SelectListItem() {Text="More than 200 beds", Value="5" },
                        new SelectListItem() {Text="Director", Value="7", Selected = true }
                    },
                     new { @class = "form-control select2", @style = "width:100%;",@disabled=true })
                @Html.ValidationMessageFor(model => model.CurrentDesignationId, "", new { @class = "text-danger" })
            </div>*@
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.DistrictID, "District", new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.DistrictID,
                        new SelectList(ViewBag.DistrictList, "Id", "Name"), "Select District",
                        new { @class = "form-control select2", @style = "width:100%;" })
                            @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.MandalID, "Mandal", new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.MandalID,
                        new List<SelectListItem>() { new SelectListItem() { Text = "Select Mandal", Value = "", Selected = true } },
                        new { @class = "form-control select2", @style = "width:100%;" })
                            @Html.ValidationMessageFor(model => model.MandalID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.VillageID, "Village", new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.DropDownListFor(model => model.VillageID,
                        new List<SelectListItem>() { new SelectListItem() { Text = "Select Mandal", Value = "", Selected = true } },
                        new { @class = "form-control select2", @style = "width:100%;" })
                            @Html.ValidationMessageFor(model => model.VillageID, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.HouseNo, new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.HouseNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HouseNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.StreetName, new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.Pincode, new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control numeric", @maxlength = 6 } })
                            @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-12 text-center">
                            <input type="button" id="btnExistingLicenseClear" value="Clear" class="btn btn-default" /> &nbsp;&nbsp;&nbsp;
                            <input type="button" id="btnExistingLicenseSave" value="Save" class="btn btn-primary" />
                        </div>
                    </div>
                </fieldset>
            </form>
        </div>
        <!-- /.col -->

    </div>
    <div>
        <h4>NOTE: <span style="color:red">*</span> fields are mandatory.</h4>
    </div>
    @*<div class="row text-right">
        <input type="button" id="btnPreview" value="Preview & Submit" class="btn btn-success" />
    </div>*@
</section>

<script type="text/javascript">
    $(function(){
         
    });
    $('#DistrictID').on('change', function () {
            BindMandals1(this.value);
    });
    $('#MandalID').on('change', function () {
            BindVillages1(this.value);
    });

    function validateEmail($email) {
        var emailReg = /^([a-zA-Z0-9_\.\-\+])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;;
        return emailReg.test($email);
    }

</script>

<script>

    $('#LicenseIssueDate').change(function(){
            var issuedDate=$('#LicenseIssueDate').val();
            var strDate = issuedDate.split('-');    
           // var date = new Date(parseInt(strDate[0]), parseInt(strDate[1])-1, parseInt(strDate[2]));
            var date = new Date(parseInt(strDate[2]), parseInt(strDate[1])-1,parseInt(strDate[0]) );
            var expiryDate = new Date(date);
            expiryDate.setDate(date.getDate() + (5*365));    
            var dd = ('0' + expiryDate.getDate()).slice(-2); // expiryDate.getDate();
            var mm=(expiryDate.getMonth()+1);
            if (expiryDate.getMonth()+1 < 10)
                mm = '0' + (expiryDate.getMonth()+1);
            else
                mm = (expiryDate.getMonth()+1);

            var y = expiryDate.getFullYear();

            var someFormattedDate = dd + '-' + mm + '-' + y;
            $('#LicenseExpiryDate').val(someFormattedDate);
    });


    function BindMandals1(controlValue) {       
        // Clear existing Mandal values
        $('#MandalID').empty();
        $('#MandalID').append('<option value="">Select Mandal</option>');
        // Clear existing Village values
        $('#VillageID').empty();
        $('#VillageID').append('<option value="">Select Village</option>');

        if (controlValue != '') {
            var url = '@Url.Action("GetMandals", "License", new { Area = "User" })';

            var data = {
                id: controlValue
            };

            var jqxhr = $.post(url, data, function () { })
                .done(function (response) {
                    var json;
                    if (response instanceof Object)
                        json = response;
                    else
                        json = $.parseJSON(response);
                    $.each(json, function (i, val) {
                        $('#MandalID').append('<option value="' + val.Id + '">' + val.Name + '</option>');
                    });
                })
            .fail(function (jqxhr, status, error) {
                var err = status + ", " + error;
                console.log("GetMandals api Request Failed: " + err);
            });
        }
    }

    function BindVillages1(controlValue) {
         // Clear existing Village values
        $('#VillageID').empty();
        $('#VillageID').append('<option value="">Select Village</option>');

        if (controlValue != '') {
            var url = '@Url.Action("GetVillages", "License", new { Area = "User" })';

            var data = {
                id: controlValue
            };
            var jqxhr = $.post(url, data, function () { })
                .done(function (response) {
                    var json;
                    if (response instanceof Object)
                        json = response;
                    else
                        json = $.parseJSON(response);
                    $.each(json, function (i, val) {
                        $('#VillageID').append('<option value="' + val.Id + '">' + val.Name + '</option>');
                    });
                })
            .fail(function (jqxhr, status, error) {
                var err = status + ", " + error;
                console.log("GetVillages api Request Failed: " + err);
            });
        }
    }
</script>

<script>
    var isExistingLicense = true,IsValidData=true;
        $('#btnExistingLicenseSave').on('click', function (e) {
            IsValidData=true;
            var clinicType="",bedStrength="",speciality="";
            e.preventDefault();
            if($('#Name').val() == "")
            {
                IsValidData=false;
                alert('Please Enter Hospital/Applicant Name!');
                return;
            }
            else if($('#ApplicationNumber').val() == "")
            {
    IsValidData=false;
                alert('Please Enter ApplicationNumber!');
                return;
            }
            else if($('#ExistingLicenseNumber').val() == "")
            {
    IsValidData=false;
                alert('Please Enter Existing License Number!');
                return;
            }
            else if($('#DistrictID').val() == "")
            {
    IsValidData=false;
                alert('Please Select District!');
                return;
            }
            else if($('#MandalID').val() == "")
            {
    IsValidData=false;
                alert('Please Select Mandal!');
                return;
            }
            else if($('#VillageID').val() == "")
            {
    IsValidData=false;
                alert('Please Select Village!');
                return;
            }
            else if($('#MobileNo').val() == "")
            {
    IsValidData=false;
                alert('Please Enter MobileNo!');
                return;
            }
            else if($('#Aadhar').val() == "")
            {
    IsValidData=false;
                alert('Please Enter Aadhar Number!');
                return;
            }
            else if($('#PAN').val() == "")
            {
    IsValidData=false;
                alert('Please Enter PAN Number!');
                return;
            }
    else if($('#Email').val() == "")
            {
    IsValidData=false;
                alert('Please Enter Email Id!');
                return;
            }
    else if (!validateEmail($('#Email').val())) {
            IsValidData=false;
                alert('Please Enter Valid Email Id!');
                return;
        }
            else if($('#HouseNo').val() == "")
            {
    IsValidData=false;
                alert('Please Enter House Number!');
                return;
            }
            else if($('#StreetName').val() == "")
            {
    IsValidData=false;
                alert('Please Enter Street Name!');
                return;
            }
            else if($('#Pincode').val() == "")
            {
    IsValidData=false;
                alert('Please Enter Pincode!');
                return;
            }

            if (IsValidData) {
     $('#btnExistingLicenseSave').prop('disabled',true);

    //$('#formExistingLicense').valid()) {
               // ShowSpinner();
                var url = '@Url.Action("SaveExistingLicenseDetails", "License", new { Area = "User" })';
                var facilityType = $("input:radio[name='RegistrationModel.FacilityType']:checked").val();
                var licenseNumber = facilityType == 'Branch' ? $('#RegistrationModel_LicenseNumber').val() : null;

                var data = {
                    model: {
                        Id: $('#Id').val() == '' ? 0 : $('#Id').val(),
                        Name: $('#Name').val(),
                        ApplicationNumber : $('#ApplicationNumber').val(),
                        SubmittedOn : $('#SubmittedOn').val(),
                        LicenseNumber: $('#ExistingLicenseNumber').val(),
                        ExistingLicenseNumber : $('#ExistingLicenseNumber').val(),
                        LicenseIssueDate : $('#LicenseIssueDate').val(),
                        LicenseExpiryDate : $('#LicenseExpiryDate').val(),
                        CurrentDesignationId : $('#CurrentDesignationId').val(),
                        DistrictID: $('#DistrictID').val(),
                        MandalID: $('#MandalID').val(),
                        VillageID: $('#VillageID').val(),
                        MobileNo: $('#MobileNo').val(),
                        Aadhar: $('#Aadhar').val(),
                        PAN: $('#PAN').val(),
                        Email :$('#Email').val(),
                        HouseNo: $('#HouseNo').val(),
                        StreetName: $('#StreetName').val(),
                        Pincode: $('#Pincode').val()
                    }
                };
                var jqxhr = $.post(url, data, function () { })
            .done(function (response) {
                var json;
                if (response instanceof Object)
                    json = response;
                else
                    json = $.parseJSON(response);
                // isRegistrationFormInEditMode = false;
   // StopSpinner();
                $('#Id').val(response.ReturnData.split(',')[0]);
                ShowModal(response);
            if (response.ReturnData.split(',')[1] == 'Completed') {
                    $('#btnExistingLicenseSave').val('Update');
                    $('#btnExistingLicenseSave').removeClass('btn-primary');
                    $('#btnExistingLicenseSave').addClass('btn-success');
                }
            })
        .fail(function (jqxhr, status, error) {
            var err = status + ", " + error;
            console.log("Save Existing license Details Request Failed: " + err);
        });
            }
        });
</script>
