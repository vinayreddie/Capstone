@using Capstone.Models
@using Capstone.Framework
@model Capstone.Models.ApprovalComplexViewModel
@{
                /**/

                ViewBag.Title = "Approval";
                Layout = "~/Views/Shared/_AdminLTELayout.cshtml";
}

@*@using (Ajax.BeginForm("InspectionApproval", "DepartmentUser", new { Area = "Department" },
                                                                                new AjaxOptions
                                                                                {
                                                                                    HttpMethod = "POST",
                                                                                    OnSuccess = "GoToListView",
                                                                                    OnFailure = "ShowFailure"
                                                                                }))
    {*@
<section class="content-header">
    <h1>
        Application in Process
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="@Url.Action("ListofApplications", "DepartmentUser", "Department")">List of Applications</a></li>
        <li class="active">Approval</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    @if (Model.ServiceType == "Resubmit")
    {
        <div class="row">

            <div class="col-md-3">
                @Html.LabelFor(model => model.ApplicationNumber, "Existing Application Number", new { @class = "control-label" })
            </div>
            <div class="col-md-9">
                @Html.ActionLink(Model.ApplicationNumber, "ApplicationView", "License", new { Area = "User", id = Model.ApplicationNumber }, null)
            </div>
        </div>
    }

    @*Workflow*@
    <div class="row">
        <div class="col-md-12">
            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title">Workflow</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.HiddenFor(model => Model.Workflow.HasApprovalPrevilege, new { id = "hfHasApprovalPrivilege" })
                            @Html.HiddenFor(model => Model.Workflow.HasInspectionPrevilege, new { id = "hfHasInspectionPrivilege" })
                            @Html.HiddenFor(model => Model.Approval.TransactionId, new { @id = "hfTransactionId" })
                            @Html.HiddenFor(model => Model.ApplicationId, new { @id = "hfApplicationId" })
                            <ul class="timeline timeline-horizontal">
                                @for (int i = 0; i < Model.DesginationList.Count; i++)
                                {
                                    if (Model.DesginationList[i].Id == Session.GetDataFromSession<UserModel>("User").DesignationId)
                                    {
                                        <li class="timeline-item">
                                            <div class="timeline-badge primary" id="div_user1"><i class="glyphicon glyphicon-check"></i></div>
                                            <div class="timeline-heading" style="margin-left:80px;">

                                                <label class="control-label">@Model.DesginationList[i].Name</label>
                                            </div>

                                        </li>
                                    }
                                    else if (Model.DesginationList[i].Id <= Session.GetDataFromSession<UserModel>("User").DesignationId)
                                    {
                                        <li class="timeline-item">
                                            <div class="timeline-badge success" id="div_user1"><i class="glyphicon glyphicon-check"></i></div>
                                            <div class="timeline-heading" style="margin-left:80px;">

                                                <label class="control-label">@Model.DesginationList[i].Name</label>
                                            </div>

                                        </li>
                                    }
                                    else
                                    {
                                        <li class="timeline-item">
                                            <div class="timeline-badge default" id="div_user1"><i class="glyphicon glyphicon-unchecked"></i></div>
                                            <div class="timeline-heading" style="margin-left:80px;">

                                                <label class="control-label">@Model.DesginationList[i].Name</label>
                                            </div>

                                        </li>
                                    }


                                }
                            </ul>
                        </div>
                    </div>

                    <div class="row payment">
                        <div class="col-md-1 text-right">
                            <label>Order Id</label>
                        </div>
                        <div class="col-md-2">
                            <span id="spanOrderId1" />
                        </div>
                        <div class="col-md-2 text-right">
                            <label>Payment Id</label>
                        </div>
                        <div class="col-md-2">
                            <span id="spanPaymentId1" />
                        </div>
                        <div class="col-md-1 text-right">
                            <label>Amount</label>
                        </div>
                        <div class="col-md-1">
                            <span id="spanAmount1" />
                        </div>
                        <div class="col-md-1 text-right">
                            <label>Paid On</label>
                        </div>
                        <div class="col-md-2">
                            <span id="spanPaidOn1" />
                        </div>
                    </div>

                    <div class="row nopayment" hidden>
                        <div class="col-md-12 text-center">
                            <span style="color:red;">Payment details not found</span>
                        </div>
                    </div>

                    <!-- Modal Popup -->
                    <div class="modal fade" id="divRaiseQueryPopup">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    <h4 class="modal-title">Raise Query</h4>
                                </div>
                                <div class="modal-body">

                                    <div class="row">
                                        <div class="col-md-2">
                                            Query
                                        </div>
                                        <div class="col-md-10">
                                            <input type="text" id="txtQuery" class="form-control" multiple />
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-2">
                                            Upload File
                                        </div>
                                        <div class="col-md-8">
                                            <input type="file" id="txtUploadFile" name="uploadedFile" />
                                            <span id="ErrMsgRaiseQuery" style="color:red;"></span>
                                        </div>
                                        <div class="col-md-1 text-right">
                                            <input type="button" value="Add" id="btnAddQueryRaise" class="btn btn-default" />
                                        </div>
                                    </div>
                                    <fieldset class="scheduler-border">
                                        <legend class="scheduler-border">Query Raise List</legend>
                                        <div class="row">
                                            <div class="col-xs-12">
                                                <div class="box">
                                                    <div class="box-body table-responsive no-padding">
                                                        <table id="tblQueryRaise" class="table table-hover">
                                                            <tr>
                                                                <th>S.No.</th>
                                                                <th>Query Details</th>
                                                                <th>Uploaded File</th>
                                                                <th></th>
                                                            </tr>
                                                        </table>
                                                    </div>
                                                    <!-- /.box-body -->
                                                </div>
                                                <!-- /.box -->
                                            </div>
                                        </div>
                                    </fieldset>
                                    <div class="row">
                                        <div class="col-md-12 text-right">
                                            <input type="button" value="Close" data-dismiss="modal" class="btn btn-default" />
                                            <input type="button" value="Submit" id="btnRaiseQuerySubmit" class="btn btn-success" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- /.modal-content -->
                        </div>
                        <!-- /.modal-dialog -->
                    </div>

                    <div class="modal fade" id="divViewQueries">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    <h4 class="modal-title">Query Log</h4>
                                </div>
                                <div class="modal-body">

                                    <div class="row">
                                        <div class="col-xs-12">
                                            <div class="box">
                                                <div class="box-header">
                                                    <h3 class="box-title">Query Log History</h3>
                                                </div>
                                                <!-- /.box-header -->
                                                <div class="box-body">
                                                    <table id="tblQueryLog" class="table table-bordered table-hover">
                                                        <thead>
                                                            <tr>
                                                                <th>S.No.</th>
                                                                <th>Type</th>
                                                                <th>Description</th>
                                                                <th>Uploaded File</th>
                                                                <th>Date</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody></tbody>

                                                    </table>
                                                </div>
                                                <!-- /.box-body -->
                                            </div>
                                            <!-- /.box -->
                                            <!-- /.box -->
                                        </div>
                                        <!-- /.col -->
                                    </div>
                                </div>
                            </div>
                            <!-- /.modal-content -->
                        </div>
                        <!-- /.modal-dialog -->
                    </div>

                    <div class="modal fade" id="divGenerateAck">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    <h4 class="modal-title">Acknowledgement Certificate Details</h4>
                                </div>
                                <div class="modal-body">

                                    <div class="row">                                       
                                        <div class="col-md-10">
                                            @Html.RadioButton("rbDocumentsForAck", "AllDocumentsCleared" , new { @checked = "checked" }) All Documents Cleared
                                            @Html.RadioButton("rbDocumentsForAck", "MissingDocuments") Missing Documents
                                        </div>
                                    </div>
                                    <div class="row" id="divMissingDocsList">
                                        <div class="col-md-4">
                                            Please Check Missing Documents List
                                        </div>
                                        <div class="col-md-10">
                                            <input type="checkbox" id="chkAccommodationFiles" name="chkAccommodationFiles" value="AccommodationFiles" /> Accommodation File &nbsp;&nbsp;
                                            <input type="checkbox" id="chkEstablishmentFiles" name="chkEstablishmentFiles" value="EstablishmentFiles" /> Establishment Files &nbsp;&nbsp;
                                            <input type="checkbox" id="chkServicesOfferedFiles" name="chkServicesOfferedFiles" value="ServicesOfferedFiles" /> Services Offered Files &nbsp;&nbsp;
                                            <input type="checkbox" id="chkStaffFiles" name="chkStaffFiles" value="StaffFiles" /> Staff Files &nbsp;&nbsp;
                                            <input type="checkbox" id="chkEquipmentsFiles" name="chkEquipmentsFiles" value="EquipmentsFiles" /> Equipments & Furniture Files &nbsp;&nbsp;
                                            <input type="checkbox" id="chkFacilitiesFiles" name="chkFacilitiesFiles" value="FacilitiesFiles" /> Facilities Files &nbsp;&nbsp;
                                            <input type="checkbox" id="chkAdditionalFiles" name="chkAdditionalFiles" value="AdditionalFiles" /> Additional Files
                                        </div>                                      
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12 text-right">
                                            @*<input type="button" value="Close" data-dismiss="modal" class="btn btn-default" />*@
                                            <input type="button" class="form-control btn-success" value="Generate" id="btnGenerateAckCertificate"  onclick="GenerateAckCertificate(@(Model.Approval.TransactionId),'Transaction')" style="width:100px;" />
                                            @*<input type="button" value=" Generate Acknowledgement Certificate" id="btnGenerateAckCertificate" class="btn btn-success" disabled/>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- /.modal-content -->
                        </div>
                        <!-- /.modal-dialog -->
                    </div>

                    <!-- /.Modal Popup -->
                </div>
            </div>
            <!-- /.box -->

        </div>
    </div>
    @*Appliction view*@
    <div class="row">
        <div class="col-md-12">
            <div class="box box-success">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-3">
                                <h3 class="box-title">Application Preview</h3>
                            </div>
                            @*<div class="col-md-3">
                                    <h3 class="box-title">Applied since: @Model. .PCPNDTModel?.AppliedSince day(s) ago</h3>
                                </div>*@
                            <div class="col-md-3">
                                <h3 class="box-title">Application Number: @Model.ApplicationNumber</h3>
                            </div>

                            <div class="col-md-6 text-right">
                                @using (Html.BeginForm("DownloadEnclosuresNew", "DepartmentUser", new { transactionId = Model.Approval.TransactionId }, FormMethod.Post, new { Area = "Department", enctype = "multipart/form-data" }))
                                {
                                    <div class="row">
                                        <div class="col-md-12 text-right">
                                            <input type="submit" value="Download Applicant Docs" class="btn btn-primary" id="btnDownloadEnclosures1" />
                                        </div>
                                    </div>
                                }
                                @if (Model.CurrentDestignationId == 8 || Model.CurrentDestignationId == 7)
                                {
                                    using (Html.BeginForm("DownloadDepartmentDocs", "DepartmentUser", new { transactionId = Model.Approval.TransactionId }, FormMethod.Post, new { Area = "Department", enctype = "multipart/form-data" }))
                                    {
                                        <div class="row">
                                            <div class="col-md-12 text-right">
                                                <input type="submit" value="Download Department Files" class="btn btn-warning" id="btnDownloadEnclosures2" />
                                            </div>
                                        </div>
                                    }
                                    using (Html.BeginForm("DownloadRaiseQueryDocs", "DepartmentUser", new { transactionId = Model.Approval.TransactionId }, FormMethod.Post, new { Area = "Department", enctype = "multipart/form-data" }))
                                    {
                                        <div class="row">
                                            <div class="col-md-12 text-right">
                                                <input type="submit" value="Download Raise Query Files" class="btn btn-success" id="btnDownloadEnclosures3" />
                                            </div>
                                        </div>
                                    }
                                  }
                                    @*@using (Html.BeginForm("DownloadRaiseQueryDocs", "DepartmentUser", new { id = "TheForm", transactionId = Model.Approval.TransactionId, }, FormMethod.Post, new { Area = "Department", enctype = "multipart/form-data" }))
            {
                @Html.DropDownList("FooBarDropDown", new List<SelectListItem>
                {
                    new SelectListItem{ Text="Department Docs", Value = "1" },
                    new SelectListItem{ Text="Raise Query Docs", Value = "2" },
                    new SelectListItem{ Text="Applicant Docs", Value = "3" },
                 },new { @class = "form-control" ,onchange = "document.getElementById('TheForm').submit();" })
                <input type='submit' value='Submit' />
            }*@
                            </div>


                        </div>
                    </div>
                </div>
                <div class="box-body">
                    @if (Model.TranServiceId == 2 || Model.TranServiceId == 29 || Model.TranServiceId == 30) // Render PCPNDT ,Resubmit
                    {
                        <div>
                            @{Html.RenderPartial("_PCPNDTView", Model.PCPNDTModel);}
                        </div>

                    }
                    else if (Model.TranServiceId == 1) //Render APMCE
                    {
                        <div>
                            @{Html.RenderPartial("_APMCEView", Model.APMCEModel);}
                        </div>
                    }
                    else if (Model.TranServiceId == 31)//Render Blood bank 27C
                    {
                        <div>
                            @{ Html.RenderPartial("_BloodBankForm27CView", Model.BloodBankModel);}
                        </div>
                    }
                    else if (Model.TranServiceId == 32)//Render Blood bank 27E
                    {
                        <div>
                            @{ Html.RenderPartial("_BloodBankForm27EView", Model.BloodBankForm27EModel);}
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
    @*Remarks*@
    @using (Ajax.BeginForm("InspectionApproval", "DepartmentUser", new { Area = "Department" },
                                                                                            new AjaxOptions
                                                                                            {
                                                                                                HttpMethod = "POST",
                                                                                                OnSuccess = "GoToListView",
                                                                                                OnFailure = "ShowFailure"
                                                                                            }))
    {
        @Html.HiddenFor(model => Model.Approval.TransactionId)
        <div class="row">
            <div class="col-md-12">
                <div class="box box-success">
                    <div class="box-header with-border">
                        <h3 class="box-title">Remarks</h3>
                    </div>
                    <div class="box-body">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Remarks</legend>
                            @if (Model.ApprovalList.Count > 0)
                            {
                                <div class="row">
                                    <table id="tblRemarks" class="table table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th>Sl.No</th>
                                                <th>DesignationName</th>
                                                <th>Status</th>
                                                <th>Remarks</th>
                                            </tr>
                                            @for (int i = 0; i < Model.ApprovalList.Count; i++)
                                            {
                                                <tr>
                                                    <td>@Convert.ToInt32(i + 1)</td>
                                                    <td>@Model.ApprovalList[i].DesignationName</td>
                                                    <td>@Model.ApprovalList[i].status</td>
                                                    <td>@Model.ApprovalList[i].Remarks</td>
                                                </tr>
                                            }
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            }
                            @if (Model.CurrentDestignationId == Session.GetDataFromSession<UserModel>("User").DesignationId && Model.CurrentStatus != Status.Approved && Model.CurrentStatus != Status.Rejected)
                            {
                                <div class="row">
                                    <div class="col-md-2">
                                        Remarks :
                                    </div>
                                    <div class="col-md-8 focus">
                                        @Html.TextAreaFor(model => model.Approval.Remarks, new { style = "width:100%" })
                                        @Html.ValidationMessageFor(model => model.Approval.Remarks, "", new { @class = "text-danger", @Id = "VMRemarks" })

                                    </div>
                                </div>
                            }


                        </fieldset>
                    </div>
                </div>
            </div>
        </div>

        @*Previous user Inspection uploads*@

        if (Model.UploadList != null && Model.UploadList.Count > 0)
        {

            <div class="row" id="divInspectionUploads">
                <div class="col-md-12">
                    <div class="box box-success">
                        <div class="box-header with-border">
                            <h3 class="box-title">Inspection Uploads</h3>
                        </div>
                        <div class="box-body">
                            <div class="row">
                                <div class="col-md-offset-2">
                                    @*<div class="form-group">
                                            <label class="col-md-3 control-label">Inspection Report :</label>

                                            <div class="col-md-6">

                                                @Html.ActionLink(Model.InspectionPDFpath, "DownloadFile", "Generic", new { Area = "", path = Model.InspectionPDFpath, downloadName = Model.InspectionPDFpath }, null);

                                            </div>
                                        </div>*@
                                    @*<table class="table table-hover" id="tblDeptInspectionReport">
                                            <thead>
                                                <tr>
                                                    <th>S.No.</th>
                                                    <th>Uploaded Type</th>
                                                    <th>Uploaded By</th>
                                                    <th>Uploaded File</th>
                                                </tr>
                                            </thead>
                                            @if (Model.UploadList != null && Model.UploadList.Count > 0)
                                            {
                                                for (int i = 0; i < Model.UploadList.Count; i++)
                                                {
                                                    <tr>
                                                        <td>@Convert.ToInt32(i + 1)</td>
                                                        <td>@Model.UploadList[i].UploadType</td>
                                                        <td>
                                                            @if (Model.UploadList[i].DocumentPath != null)
                                                            {
                                                                var addressindex = Model.UploadList[i].DocumentPath.LastIndexOf("/");
                                                                var addressfileName = Model.UploadList[i].DocumentPath.Substring(addressindex + 1);
                                                                @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                new { Area = "", path = Model.UploadList[i].DocumentPath, downloadName = addressfileName }, null);
                                                            }
                                                        </td>
                                                    </tr>
                                                }

                                            }
                                        </table>*@
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-offset-2">
                                    <table class="table table-hover" id="tblDeptUserUploads">
                                        <thead>
                                            <tr>
                                                <th>S.No.</th>
                                                <th>Uploaded Type</th>
                                                <th>Uploaded By</th>
                                                <th>Uploaded File</th>
                                            </tr>
                                        </thead>
                                        @if (Model.UploadList != null && Model.UploadList.Count > 0)
                                        {
                                            for (int i = 0; i < Model.UploadList.Count; i++)
                                            {
                                                <tr>
                                                    <td>@Convert.ToInt32(i + 1)</td>
                                                    <td>@Model.UploadList[i].UploadType</td>
                                                    <td>@Model.UploadList[i].UploadedUserName</td>
                                                    <td>
                                                        @if (Model.UploadList[i].DocumentPath != null)
                                                        {
                                                            var addressindex = Model.UploadList[i].DocumentPath.LastIndexOf("/");
                                                            var addressfileName = Model.UploadList[i].DocumentPath.Substring(addressindex + 1);
                                                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
new { Area = "", path = Model.UploadList[i].DocumentPath, downloadName = addressfileName }, null);
                                                        }
                                                    </td>
                                                </tr>
                                            }

                                        }
                                    </table>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        }



        @*@*APMCE Document Upload
            @if (Model.TranServiceId == 1)
            {  <div class="row" id="divInspectionReports">
            <div class="col-md-12">
                <div class="box box-success">
                    <div class="box-header with-border">
                        <h3 class="box-title">Document Upload</h3>
                    </div>
                    <div class="box-body">
                        <div class="col-md-4 form-group">
                            <label class="col-md-4 control-label">Upload File</label>
                            <div class="col-md-8">
                                @Html.TextBox("txtAPMCEUpload", null, new { @type = "file" })
                            </div>
                        </div>
                        </div>
                    </div></div></div>

                        }*@

        @*Inspection Report*@
        //if(Model.FacilityList != null && Model.FacilityList.Count > 0)
        //if (Model.FacilityList != null && (Model.Workflow.HasInspectionPrevilege || Model.Workflow.HasApprovalPrevilege))
        if ((Model.Workflow.HasInspectionPrevilege || Model.Workflow.HasApprovalPrevilege) && Model.CurrentStatus != Status.Approved)
        {
            <div class="row" id="divInspectionReports">
                <div class="col-md-12">
                    <div class="box box-success">
                        <div class="box-header with-border">
                            <h3 class="box-title">Inspection Reports</h3>
                        </div>
                        <div class="box-body">
                            @*<div class="row Input" hidden>
                                    <div class="col-md-offset-2 col-md-2">
                                        @Html.Label("Upload File", new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-3">
                                        @Html.TextBox("txtUpload", null, new { @type = "file" })
                                    </div>
                                    <div class="col-md-2">
                                        <input type="button" id="btnInspectionUpload" class="btn btn-primary" value="Add" />
                                    </div>
                                </div>*@
                            @if (Request.QueryString["Type"] == null)
                            {
                            <div class="row Input">
                                <div class="col-md-12">
                                    <div class="col-md-offset-1 col-md-5 form-group">
                                        <label class="col-md-4 control-label">Upload Type</label>

                                        <div class="col-md-8">
                                            @Html.DropDownList("ddlUploadType", new List<SelectListItem>
{
            new SelectListItem() {Text = "--Select--", Value=""},
            new SelectListItem() {Text = "Inspection Reports", Value="Inspection"},
            //new SelectListItem() {Text = "(DLAC)District Level Advisory Committe", Value="DLAC"},
            // new SelectListItem() {Text = "(DLMMAA)District Level MultiMember Appropriate Authority", Value="DLMMAA"}
}, new { @style = "width:100%",@class="form-control" })
                                            <span id="errMsgUploadType" style="color:red;"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <label class="col-md-4 control-label">Upload File</label>
                                        <div class="col-md-8">
                                            @Html.TextBox("txtUpload", null, new { @type = "file" })
                                            <span id="errMsgUpload" style="color:red;"></span>
                                        </div>
                                    </div>
                                </div>
                                </div>
                            <div class="row Input">
                                <div class="col-md-12">
                                    <div class="col-md-offset-1 col-md-5 form-group">
                                        <label class="col-md-4 control-label">Inspection Date</label>
                                        <div class="col-md-8">
                                            <input type="text" id="txtUploadedDate" name="txtdateofInspection" class="form-control   has-feedback-left datemask bootstrap-date" />
                                            <span id="errMsgUpload" style="color:red;"></span>
                                        </div>
                                        </div>
                                        <div class="col-md-1">
                                            <input type="button" id="btnInspectionUpload" class="btn btn-primary" value="Add" />
                                        </div>
                                    </div>
                                </div>
                                    }


                                    <div class="row">
                                        <div class="col-md-offset-3">
                                            <table class="table table-hover" id="tblUploads">
                                                @*<thead>
                        <tr>
                            <th>S.No.</th>
                            <th>Uploaded Type</th>
                            <th>Uploaded File</th>
                        </tr>
                    </thead>*@
                                                @*@if (Model.UploadList != null && Model.UploadList.Count > 0)
                    {
                        for (int i = 0; i < Model.UploadList.Count; i++)
                        {
                            <tr>
                                <td>@Convert.ToInt32(i + 1)</td>
                                <td>@Model.UploadList[i].UploadType</td>
                                <td>
                                    @if (Model.UploadList[i].DocumentPath != null)
                                    {
                                        var addressindex = Model.UploadList[i].DocumentPath.LastIndexOf("/");
                                        var addressfileName = Model.UploadList[i].DocumentPath.Substring(addressindex + 1);
                                        @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                        new { Area = "", path = Model.UploadList[i].DocumentPath, downloadName = addressfileName }, null);
                                    }
                                </td>
                            </tr>
                        }

                    }*@
                                            </table>
                                        </div>
                                    </div>

                                    @if (Model.TranServiceId == 2)
                                    {
                                        if (Request.QueryString["Type"] == null)
                                        {
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="nav-tabs-custom">
                                                        <ul class="nav nav-tabs">

                                                            @foreach (FacilityMasterModel facility in Model.FacilityList)
                                                            {
                                                                if (facility.Id == Model.FacilityList.Min(item => item.Id))
                                                                {
                                                                    <li class="active"><a href='#@facility.Id' data-toggle="tab" aria-expanded="true">@facility.Name</a></li>
                                                                }

                                                                else
                                                                {
                                                                    <li><a href='#@facility.Id' data-toggle="tab">@facility.Name</a></li>
                                                                }

                                                            }



                                                        </ul>

                                                        <div id="testdiv" class="tab-content">

                                                            @foreach (FacilityMasterModel facility in Model.FacilityList)
                                                            {
                                                                if (facility.Id == Model.FacilityList.Min(item => item.Id))
                                                                {
                                                                    <div class="tab-pane active" id='@facility.Id'>
                                                                        @{ Html.RenderPartial(facility.InspectionPartialViewName);}
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="tab-pane" id='@facility.Id'>
                                                                        @{ Html.RenderPartial(facility.InspectionPartialViewName);}
                                                                    </div>
                                                                }

                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>}

                                    }
                                </div>
                    </div>
                </div>

            </div>
        }



        @*Submit*@
        if (Request.QueryString["Type"] == null)
        {

            if (Model.CurrentDestignationId == Session.GetDataFromSession<UserModel>("User").DesignationId && (Model.CurrentStatus == Status.Forward || Model.CurrentStatus == Status.Submitted || Model.CurrentStatus == Status.QueryRaised || Model.CurrentStatus == Status.Return))
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="pull-right">
                            @if (Model.Workflow.HasApprovalPrevilege && Model.QueryCount == 0)
                            {
                                <input type="button" id="btnApprove" name="Submit" class="btn btn-default" value="Approve" disabled/>
                            }
                            else if (Model.QueryCount == 0)
                            {
                                <input type="button" id="btnGenerateAck" name="Submit" class="btn btn-default" value="Generate Ack" />
                                <input type="button" id="btnForward" name="Submit" class="btn btn-default" value="Forward" disabled />
                            }

                            @if ((Model.Workflow.HasReturnPrevilege || Model.Workflow.HasApprovalPrevilege) && Model.QueryCount == 0)
                            {
                                <input type="submit" id="btnReturn" name="Submit" class="btn btn-default" value="Return" />
                            }
                            @if (Model.Workflow.HasApprovalPrevilege)
                            {
                                <input type="submit" id="btnReturn" name="Submit" class="btn btn-default" value="Reject" />
                            }
                            @if ((Model.Workflow.HasRaisedQueryPrevilege || Model.Workflow.HasApprovalPrevilege) && Model.QueryCount == 0)
                            {
                                <input type="button" id="btnRaiseQuery" class="btn btn-default" value="RaiseQuery" onclick="ShowRaiseQuery()" />
                            }
                            @if (Model.QueryResponseCount > 0)
                            {
                                <input type="button" class="btn btn-default" id="btnViewQueries" value="View Query Log" />
                            }
                            @*@if (Model.Workflow.HasInspectionPrevilege || Model.Workflow.HasApprovalPrevilege)
                                {
                                    <input type="submit" id="btnInspection" name="Submit" class="btn btn-default" value="Add Inspection Report" />
                                }*@
                            @*@if (Model.QueryCount == 0)
                                {
                                    <input type="button" id="btnInspectionReport" name="Submit" class="btn btn-default" value="Inspection Reports" />
                                }*@

                        </div>
                    </div>
                </div>
            }


        }


    }

</section>
<style type="text/css">
    /* Timeline */
    .timeline,
    .timeline-horizontal {
        list-style: none;
        padding: 20px;
        position: relative;
    }

        .timeline:before {
            top: 40px;
            bottom: 0;
            position: absolute;
            content: " ";
            width: 3px;
            background-color: #eeeeee;
            left: 50%;
            margin-left: -1.5px;
        }

        .timeline .timeline-item {
            margin-bottom: 20px;
            position: relative;
        }

            .timeline .timeline-item:before,
            .timeline .timeline-item:after {
                content: "";
                display: table;
            }

            .timeline .timeline-item:after {
                clear: both;
            }

            .timeline .timeline-item .timeline-badge {
                color: #fff;
                width: 54px;
                height: 54px;
                line-height: 52px;
                font-size: 22px;
                text-align: center;
                position: absolute;
                top: 18px;
                left: 50%;
                margin-left: -25px;
                background-color: #7c7c7c;
                border: 3px solid #ffffff;
                z-index: 100;
                border-top-right-radius: 50%;
                border-top-left-radius: 50%;
                border-bottom-right-radius: 50%;
                border-bottom-left-radius: 50%;
            }

                .timeline .timeline-item .timeline-badge i,
                .timeline .timeline-item .timeline-badge .fa,
                .timeline .timeline-item .timeline-badge .glyphicon {
                    top: 2px;
                    left: 0px;
                }

                .timeline .timeline-item .timeline-badge.primary {
                    background-color: #1f9eba;
                }

                .timeline .timeline-item .timeline-badge.info {
                    background-color: #5bc0de;
                }

                .timeline .timeline-item .timeline-badge.success {
                    background-color: #59ba1f;
                }

                .timeline .timeline-item .timeline-badge.warning {
                    background-color: #d1bd10;
                }

                .timeline .timeline-item .timeline-badge.danger {
                    background-color: #ba1f1f;
                }

            .timeline .timeline-item .timeline-panel {
                position: relative;
                width: 46%;
                float: left;
                right: 16px;
                border: 1px solid #c0c0c0;
                background: #ffffff;
                border-radius: 2px;
                padding: 20px;
                -webkit-box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);
                box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);
            }

                .timeline .timeline-item .timeline-panel:before {
                    position: absolute;
                    top: 26px;
                    right: -16px;
                    display: inline-block;
                    border-top: 16px solid transparent;
                    border-left: 16px solid #c0c0c0;
                    border-right: 0 solid #c0c0c0;
                    border-bottom: 16px solid transparent;
                    content: " ";
                }

                .timeline .timeline-item .timeline-panel .timeline-title {
                    margin-top: 0;
                    color: inherit;
                }

                .timeline .timeline-item .timeline-panel .timeline-body > p,
                .timeline .timeline-item .timeline-panel .timeline-body > ul {
                    margin-bottom: 0;
                }

                    .timeline .timeline-item .timeline-panel .timeline-body > p + p {
                        margin-top: 5px;
                    }

            .timeline .timeline-item:last-child:nth-child(even) {
                float: right;
            }

            .timeline .timeline-item:nth-child(even) .timeline-panel {
                float: right;
                left: 16px;
            }

                .timeline .timeline-item:nth-child(even) .timeline-panel:before {
                    border-left-width: 0;
                    border-right-width: 14px;
                    left: -14px;
                    right: auto;
                }

    .timeline-horizontal {
        list-style: none;
        position: relative;
        padding: 20px 0px 20px 0px;
        display: inline-block;
    }

        .timeline-horizontal:before {
            height: 3px;
            top: auto;
            bottom: 26px;
            left: 56px;
            right: 0;
            width: 60%;
            margin-bottom: 20px;
        }

        .timeline-horizontal .timeline-item {
            display: table-cell;
            height: 35px;
            width: 20%;
            min-width: 320px;
            float: none !important;
            padding-left: 0px;
            padding-right: 52px;
            margin: 0 auto;
            vertical-align: bottom;
        }

            .timeline-horizontal .timeline-item .timeline-panel {
                top: auto;
                bottom: 64px;
                display: inline-block;
                float: none !important;
                left: 0 !important;
                right: 0 !important;
                width: 60%;
                margin-bottom: 20px;
            }

                .timeline-horizontal .timeline-item .timeline-panel:before {
                    top: auto;
                    bottom: -16px;
                    left: 28px !important;
                    right: auto;
                    border-right: 16px solid transparent !important;
                    border-top: 16px solid #c0c0c0 !important;
                    border-bottom: 0 solid #c0c0c0 !important;
                    border-left: 16px solid transparent !important;
                }

            .timeline-horizontal .timeline-item:before,
            .timeline-horizontal .timeline-item:after {
                display: none;
            }

            .timeline-horizontal .timeline-item .timeline-badge {
                top: auto;
                bottom: 0px;
                left: 43px;
            }
</style>

<script>
    $(function () {
        BindPaymentDetails();
        $("#txtUpload").change(function () {
            var UploadFile = this.files;
            var type = UploadFile[0].type;
            if (type == "application/pdf") {  //|| type=="image/jpeg"
                if (UploadFile && UploadFile[0]) {
                    $("#errMsgUpload").text('');
                }
            }
            else {
                $("#txtUpload").val('');
                $("#errMsgUpload").text("Please upload Files in PDF format only");
            }
        });
    var today1 = new Date();
    var date1 = today1.getDate()+'-'+(today1.getMonth()+1)+'-'+today1.getFullYear();
    document.getElementById('txtUploadedDate').value = date1;
    
    ApplyDatecss('txtUploadedDate', 'divInspectionReports');
    })

    function ApplyDatecss(date, form) {
        $('#' + date)
            .datepicker({
                format: 'dd-mm-yyyy',
                weekStart: 1,
                clearBtn: true,
                forceParse: false,
                daysOfWeekHighlighted: [0],
                autoclose: true,
                todayHighlight: true,
                startDate: '+0d'
            })
            .on('changeDate', function (e) {
                // Revalidate the date field
                try {
                    var validator = $("#" + form).validate(); //.valid();
                    validator.element("#" + date);
                }
                catch (exception) {
                    console.log(exception);
                }
            });
    };

    function BindPaymentDetails() {
        var url = '@Url.Action("GetUserPaymentDetails", "License", new { Area = "User" })';
        var data = {
            tamceTransactionId: $('#hfTransactionId').val()
        };
        var jqxhr = $.get(url, data, function () { })
            .done(function (response) {

                var json;
                if (response instanceof Object)
                    json = response;
                else
                    json = $.parseJSON(response);

                if (json.length == 0) {
                    $('.nopayment').show();
                    $('.payment').hide();
                }
                else {
                    $('.nopayment').hide();
                    $('.payment').show();

                    $('#spanOrderId').text(json[0]['OrderId']);
                    $('#spanPaymentId').text(json[0]['PaymentId']);
                    $('#spanAmount').text('₹ ' + json[0]['Amount']);
                    $('#spanPaidOn').text(json[0]['PaymentDatetime']);

                    $('#spanOrderId1').text(json[0]['OrderId']);
                    $('#spanPaymentId1').text(json[0]['PaymentId']);
                    $('#spanAmount1').text('₹ ' + json[0]['Amount']);
                    $('#spanPaidOn1').text(json[0]['PaymentDatetime']);


                    $('#spanHospitalName').text(json[0]['HospitalName']);
                    $('#spanLicenseNumber').text(json[0]['LicenseNumber']);
                    $('#spanExpiryDate').text(json[0]['LicenseExpiryDate']);
                }
                console.log(json);

            })
            .fail(function (jqxhr, status, error) {
                var err = status + ", " + error;
                console.log("Get inspectionlist, Request Failed: " + err);
            });
    }

</script>

<script>

    $('#btnInspectionUpload').click(function(e){
        e.preventDefault;

        if($('#ddlUploadType').val()==''){
            $('#errMsgUploadType').text('Please Select Upload Type');

        }
        else if($('#txtUploadedDate').val()==''){
            $('#errMsgUploadType').text('Please Select Date');

        }else
        {
            $('#errMsgUploadType').text('')

            var uploadedFile = $("#txtUpload").get(0).files[0];
            if(uploadedFile !=undefined)
            {
                if((uploadedFile.size/1024) > 5120)
                {
                    $('#errMsgUpload').text('Please upload a file less than 5 MB');
                    return;
                }
                else
                {
                    $('#errMsgUpload').text('');
                }
            }

            if(uploadedFile!== undefined){

                $('#errMsgUpload').text('');
                var uri = '@Url.Action("AddDocuments", "DepartmentUser", new { Area = "Department" })';
                // Create FormData object
                var fileData = new FormData();
                fileData.append('ReferenceId', $('#hfTransactionId').val());
                fileData.append('ReferenceTable','t_transaction');
                fileData.append('UploadType', $("#ddlUploadType option:selected").val());
                fileData.append('DocumentPath', uploadedFile);
                fileData.append('UploadedDate', $('#txtUploadedDate').val());
                $.ajax({
                    type: "POST",
                    url: uri,
                    data: fileData,
                    contentType: false,
                    processData: false,
                    async: true,
                    success: function (response) {
                        // Clear controls
                        $('#ddlUploadType').val('');
                        $("#txtUpload").val('');
                        BindUploads(response);
                        $('#btnApprove').removeAttr("disabled");
                    },
                    failure: function (response) {
                        // alert('failure: ' + response.d);
                    },
                    error: function (response) {
                        // alert('error: ' + response.d);
                    }
                });
            }
            else{
                $('#errMsgUpload').text('Please Upload a File');
            }
        }});

    function BindUploads(response){
        $('#tblUploads tr').not(function () { return !!$(this).has('th').length; }).remove();
        $("#tblUploads").empty()
        var json = response;

        var tr;
        tr = $('<tr/>');
        tr.append("<th>S.No.</th>");
        tr.append("<th>Uploaded Type</th>");
        tr.append("<th>Uploaded File</th>");
        tr.append("<th>Inspection Date</th>");
        $('#tblUploads').append(tr);

        //Append each row to html table
        for (var i = 0; i < json.length; i++) {
            tr = $('<tr/>');
            tr.append("<td>" + (i + 1) + "</td>");
            tr.append("<td>" + json[i].UploadType + "</td>");
            var path = json[i].DocumentPath;
            var index = path.indexOf("/");
            var displayFileName = path.substring(index + 1, path.length);
            var fileLink = '@Html.Raw(Html.ActionLink("displaytext", "DownloadFile", "Generic", new { Area = "", path = "filepath", downloadName = "downloadfilename" }, null))';
            fileLink = fileLink.replace("displaytext", displayFileName);
            fileLink = fileLink.replace("DocumentType", json[i].UploadType);
            fileLink = fileLink.replace("filepath", json[i].DocumentPath);
            fileLink = fileLink.replace("downloadfilename", displayFileName);
            tr.append("<td>" + fileLink + "</td>");
            tr.append("<td>" + ToJavaScriptDate(json[i].UploadedDate) + "</td>");
            //tr.append("<td><input type='button' value='Delete' onclick='DeleteEmployee(" + i + ");'/></td>");

            $('#tblUploads').append(tr);
        }
    }
    $('#btnApprove').click(function(e){

        if($('#form0').valid()) {

            $('#btnApprove').prop('disabled',true);

            var data =PrepareData("Approve",null);
            var url = '@Url.Action("InspectionApproval", "DepartmentUser", new { Area = "Department" })';
            var jqxhr = $.post(url, data, function () { })
              .done(function (response) {
                  //if (response instanceof Object)
                  //    json = response;
                  //else
                  //    json = $.parseJSON(response);
                  var jsonObject= GetModalJSON();
                  jsonObject.Title="";//"License Preview";
                  jsonObject.IsLargeModal = true;
                  jsonObject.BodyContent=response;
                  jsonObject.NonActionButtonText="Goto List";
                  jsonObject.NonActionButtonClass="Success";
                  jsonObject.ShowNonActionButton=true;
                  $('#btnNonAction').click(function(e){
                      window.location.href='@Url.Action("ListofApplications", "DepartmentUser",new { Area = "Department" })';
                  });

                  ShowModal(jsonObject);
                  $('#btnClosePreview').hide();

              })
              .fail(function (jqxhr, textStatus, error) {
                  var err = textStatus + ", " + error;
                  console.log("Saving Request Failed: " + err);
              });
        }
        else{
            $('#Approval_Remarks').focus();
            $('#VMRemarks').text('Remarks Required');
        }
    });

    $('#btnForward').click(function(e){
        e.preventDefault();
        if($('#Approval_Remarks').val()==""){

            $('#Approval_Remarks').focus();
            $('#VMRemarks').text('Remarks Required');

        }

        else if(@Model.TranServiceId==2){ //PCPNDT
            if(@Html.Raw(Json.Encode(Model.QuestionModelList))!=null){
                Submitform();
            }
            else
            {
                var x = '@Model.Workflow.HasInspectionPrevilege';
                var y='@Model.Workflow.HasApprovalPrevilege';
                if(x == 'True'){
                    if(check()){
                        DisplayForPDF();
                        //DownloadInspectionPDF();
                        Submitform();

                    }
                    else if(y=='True'){
                        DisplayForPDF();
                        Submitform();
                    }
                    else
                    {
                        var jsonModel = GetModalJSON();
                        jsonModel.Title = 'Error';
                        jsonModel.NotificationTypeClass = 'Warning';
                        jsonModel.NotificationMessage = 'Please fill all Inspection reports';
                        jsonModel.ShowNonActionButton = true;
                        jsonModel.NonActionButtonText = 'Okay';
                        jsonModel.NonActionButtonClass = 'Warning';
                        ShowModal(jsonModel);
                    }
                }
                else
                {
                    Submitform();
                }

            }
        }
        else {// APMCE or BloodBank
            Submitform();
        }

    });

    function DisplayForPDF(){
        $('#divInspectionReports').show();
        $('.Input').hide();
        $('.displayInput').show();
        var json =PrepareJson();
        $(json).each(function (i, item) {
            $('#D' + json[i].QuestionId).html(json[i].Answer);
        });
    }


    function DownloadInspectionPDF(){

        var nonSerialized = $('#testdiv').html();
        //            var serialized = $.toJSON(nonSerialized);
        var serialized = Encode(nonSerialized);
        var setting = {
            type: 'POST',
            dataType: 'json',
            cache: false,
            async: false,
            data: { serializedString: serialized },
            success:    DisplayInspectionReports(),
            url: '/DepartmentUser/GetAndReturnSerializedString'
        }
        $.ajax(setting);

        function Encode(input) {
            return $('<div/>').text(input).html();
        }


    }

    function Submitform(){

        var nonSerialized = $('#testdiv').html();
        //            var serialized = $.toJSON(nonSerialized);
        var serialized = Encode(nonSerialized);
        var x= true;


        if($('#form0').valid())
        {

            var data = PrepareData("Forward",serialized);
            var url = '@Url.Action("InspectionApproval", "DepartmentUser", new { Area = "Department" })';
            var jqxhr = $.post(url, data, function () { }, 'json')
              .done(function (response) {
                  if (response instanceof Object)
                      json = response;
                  else
                      json = $.parseJSON(response);
                  GoToListView(response);
              })
              .fail(function (jqxhr, textStatus, error) {
                  var err = textStatus + ", " + error;
                  console.log("Saving Request Failed: " + err);
              });
        }
    }
    function PrepareData(Type,serialized){

        var data;
        var inspectionList = PrepareJson();
        var InspectionPrivilege='False';
        if($('#hfHasInspectionPrivilege').val()=='True' || $('#hfHasApprovalPrivilege').val()=='True')
            InspectionPrivilege='True';
        if(inspectionList == null || inspectionList == undefined){
            data = {
                approval:
                    {
                        TransactionId:$('#hfTransactionId').val(),
                        Remarks:$('#Approval_Remarks').val()
                    },
                Submit:Type,
                //InspectionList:PrepareJson(),
                serializedString:serialized ,
                HasInspectionPrivilege:InspectionPrivilege
            }
        }
        else{
            data = {
                approval:
                    {
                        TransactionId:$('#hfTransactionId').val(),
                        Remarks:$('#Approval_Remarks').val()
                    },
                Submit:Type,
                InspectionList:PrepareJson(),
                serializedString:serialized ,
                HasInspectionPrivilege:InspectionPrivilege
            }
        }

        //var data = {
        //    approval:
        //        {
        //            TransactionId:$('#hfTransactionId').val(),
        //            Remarks:$('#Approval_Remarks').val()
        //        },
        //    Submit:Type,
        //    InspectionList:PrepareJson(),
        //    serializedString:serialized ,
        //    HasInspectionPrivilege:$('#hfHasInspectionPrivilege').val()
        //}
        return data;
    }

    function Encode(input) {
        return $('<div/>').text(input).html();
    }

    $(function(){
        DisplayInspectionReports();
       // $('.Input').show();
    });
    function ShowRaiseQuery() {
        $('#divRaiseQueryPopup').modal('show');
    }
    $('#btnRaiseQuerySubmit').click(function (e) {
        e.preventDefault();
        var flag=true;

        if ($('#tblQueryRaise tr').length > 1) { // $('#txtQuery').val() != ''
            var url = '@Url.Action("SubmitQuery", "DepartmentUser", new { Area = "Department" })';

            if (window.FormData !== undefined) {
                var uploadedfile = $("#txtUploadFile").get(0).files[0];
                //File Upload Size upto 3.8 MB   --kishore 01-11-2017
                if(uploadedfile != undefined)
                {
                    if((uploadedfile.size/1000) > 4096)
                    {
                        $('#ErrMsgRaiseQuery').text('Please check File size, limit to below 3.8 MB');
                        flag= false;
                    }
                    else
                    {
                        $('#ErrMsgRaiseQuery').text('');
                    }
                }

                if(flag==false)
                {
                    return;
                }
                else
                {

                    var fileData = new FormData();
                    fileData.append('Query', $('#txtQuery').val());
                    fileData.append('TransactionId', $('#hfTransactionId').val());
                    fileData.append('ApplicationType', 'Grant');
                    fileData.append('uploadedFile', uploadedfile);
    
                    $.ajax({
                        type: "POST",
                        url: url,
                        cache: false,
                        data: fileData,
                        contentType: false,
                        processData: false,
                        async: true,
                        success: function (response) {
                            console.log(response);
                            $('#divRaiseQueryPopup').modal('hide');
                            ShowModal(response);
                            if (response.NotificationType == 1) {
                                $('#btnRaiseQuery').hide();
                                $('#btnForward').hide();
                                $('#btnReturn').hide();
                                $('#btnApprove').hide();

                            }

                            //BindData();
                        },
                        failure: function (response) {
                            alert('failure: ' + response.d);
                        },
                        error: function (response) {
                            alert('error: ' + response.d);
                        }
                    });

                }
            }
        }
        else {
        alert('Please Add atleast One Query Raise Details')
            //alert('Please enter Query');
        }

    });
    $('#btnViewQueries').click(function () {
        var url = '@Url.Action("GetQureyResponsebyTransactionId", "DepartmentUser", new { Area = "Department" })';
        var data = { TransactionId: $('#hfTransactionId').val(),TransactionType:'Grant'}
        var jqxhr = $.getJSON(url,data, function () { })
            .done(function (response) {
                var json;
                if (response instanceof Object)
                    json = response;
                else
                    json = $.parseJSON(response);
                $('#divViewQueries').modal('show');
                // Clear all existing rows
                $('#tblQueryLog').find("tr:gt(0)").remove();

                if (json != undefined) {

                    for (var i = 0; i < json.length; i++) {
                        var path = json[i].UploadedFilePath;
                        var index = path.indexOf("/");
                        var displayFileName = path.substring(index + 1, path.length);
                        var fileLink = '@Html.Raw(Html.ActionLink("displaytext", "DownloadFile", "Generic", new { Area = "", path = "filepath", downloadName = "downloadfilename" }, null))';

                        fileLink = fileLink.replace("displaytext", displayFileName);
                        fileLink = fileLink.replace("filepath", json[i].UploadedFilePath);
                        fileLink = fileLink.replace("downloadfilename", displayFileName);

                        var tr;
                        tr = $('<tr/>');
                        tr.append("<td>" + (i + 1) + "</td>")
                        tr.append("<td>" + json[i].Type + "</td>")
                        tr.append("<td>" + json[i].Description + "</td>")
                        tr.append("<td>" + fileLink + "</td>")
                        tr.append("<td>" + ToJavaScriptDate(json[i].CreatedOn) + "</td>")
                        $("[id$=tblQueryLog]").append(tr)
                    }

                }


            })
        .fail(function (jqxhr, status, error) {
            var err = status + ", " + error;
            console.log("GetQueryData Request Failed: " + err);
        });
    });

    function GoToListView(response) {


        if (response.NotificationType == 1) {
            $('.btn').hide()
        }
        ShowModal(response);


        //  window.location.href='@Url.Action("ListofApplications","DepartmentUser",new { Area ="Department"})'
    }


    function DisplayInspectionReports() {
        var x = @Html.Raw(Json.Encode(Model.Workflow.HasInspectionPrevilege)); // if user has inspection privilege
        var y=@Html.Raw(Json.Encode(Model.Workflow.HasApprovalPrevilege));
        if(x){
           // $('#divInspectionUploads').hide();
            //var InspectionList = PrepareJson()
            if(@Html.Raw(Json.Encode(Model.QuestionModelList))!=null)  { // check whethre inspection reports already filled
                $('#divInspectionReports').show();
                $('.displayInput').show();

                var json =@Html.Raw(Json.Encode(Model.QuestionModelList));

                $(json).each(function (i, item) {
                    $('#D' + json[i].Id).html(json[i].Answer);

                });
            }

            else{ // Inspection reports not filled
                debugger;
                $('#divInspectionReports').show();
                $('.Input').show();
            }

        }
        else if(y){
            debugger;
            // $('#divInspectionUploads').hide();
            //var InspectionList = PrepareJson()
            if(@Html.Raw(Json.Encode(Model.QuestionModelList))!=null)  { // check whethre inspection reports already filled
                $('#divInspectionReports').show();
                $('.displayInput').show();

                var json =@Html.Raw(Json.Encode(Model.QuestionModelList));

                $(json).each(function (i, item) {
                    $('#D' + json[i].Id).html(json[i].Answer);

                });
            }
            else{ // Inspection reports not filled
                debugger;
                $('#divInspectionReports').show();
                $('.Input').show();
            }
        }
        else { //No inspection Previlege

            // $('#divInspectionReports').show();
            if(@Html.Raw(Json.Encode(Model.QuestionModelList))!=null){
                $('#divInspectionUploads').show();

                $('.displayInput').show();
                var json =@Html.Raw(Json.Encode(Model.QuestionModelList));

                $(json).each(function (i, item) {
                    $('#D' + json[i].Id).html(json[i].Answer);

                });
            }


        }
        if(@Html.Raw(Json.Encode(Model.ServiceType))!='Renewal') {
            $('#divRenewal').show();

        }

    }
    function check() {

        var allCheck = true;
        if ($("#divInspectionReports :radio:checked").length == 0) {
            allCheck = false;
        }
        $("#divInspectionReports :radio").each(function (i,item) {
            var name=$(this).attr("name");
            if($("input:radio[name="+name+"]:checked").length==0){
                allCheck = false;
            }
        })
        if($('#146').val()==''){

            allCheck = false;
        }


        return allCheck;
    }
    function ShowFailure(response){
        alert('incorrect response')
        console.log(response);
    }
</script>

<script>


    function PrepareJson() {


        var Inspection;
        console.log('inspection Privillege:' + $('#hfHasInspectionPrivilege').val());

        if ($('#hfHasInspectionPrivilege').val() == 'False' && $('#hfHasApprovalPrivilege').val() == 'False') {
            return null;
            //var Inspection=null;
        }
        else {
            Inspection = [];
            $("#divInspectionReports :radio:checked").each(function (i, item) {
                Inspection.push({
                    QuestionId: item.name,
                    Answer: item.value
                });

            })
            Inspection.push({

                QuestionId: 146,
                Answer: $('#146').val()
            });



        }

        return Inspection;
    }
</script>
<script type="text/javascript">
    $(function () {
        $('#btnInspectionReport').click(function () {
            var nonSerialized = $('#testdiv').html();
            //            var serialized = $.toJSON(nonSerialized);
            var serialized = Encode(nonSerialized);
            var setting = {
                type: 'POST',
                dataType: 'json',
                cache: false,
                async: false,
                data: { serializedString: serialized },
                url: '/DepartmentUser/GetAndReturnSerializedString'
            }
            $.ajax(setting);

            //$.ajax(setting);
        });
        function Encode(input) {
            return $('<div/>').text(input).html();
        }
        /*
        var setting = {
        type: 'GET',
        dataType: 'json',
        cache: false,
        async: false,
        data: { serializedString: serialized },         Inspection Reports
        url: '/home/GetAndReturnSerializedString',
        success: function (data) {
        if (data.Success) {
        alert(data.data);
        }
        }
        };
        */
    });
</script>
<script>
    @*$('#btnInspectionReport').click(function (e) {

        var url = '@Url.Action("ConvertAboutPageToPdf", "DepartmentUser", new { Area = "Department" })';
        var jqxhr = $.getJSON(url,function () { })
           .done(function (response) {
               var json;
               if (response instanceof Object)
                   json = response;
               else
                   json = $.parseJSON(response);
           });
    });*@

</script>
@*<script>
        $('#btnInspectionReport').click(function (e) {

            var url = '@Url.Action("PdfFile", "DepartmentUser", new { Area = "Department" })';
            var data = { TransactionId: $('#hfTransactionId').val() }
            var jqxhr = $.getJSON(url,data, function () { })
                .done(function (response) {
                    var json;
                    if (response instanceof Object)
                        json = response;
                    else
                        json = $.parseJSON(response);
                });

            var divCounselling = document.getElementById('divCounselling');
            var divUltra = document.getElementById('divUltra');
            var divImaging = document.getElementById('divImaging');
            var divClinic = document.getElementById('divClinic');
            var divLaboratory = document.getElementById('divLaboratory');
            var divArt = document.getElementById('divArt');

            var newWin = window.open('', 'Print-Window');

            newWin.document.open();

            newWin.document.write('<html><body onload="window.print()">'+ '<br/>' + '<br/>' + '<br/>' + divCounselling.innerHTML
                +'<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' +'<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>'+ '<br/>' + '<br/>'
                + divLaboratory.innerHTML+ '</body></html>');

            //newWin.document.write('<html><body onload="window.print()">' + divCounselling.innerHTML
            //    + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' +
            //    divUltra.innerHTML + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' +
            //    divImaging.innerHTML +'<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' +
            //    divClinic.innerHTML +'<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + divLaboratory.innerHTML+
            //    '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + '<br/>' + divArt.innerHTML+ '</body></html>');

            newWin.document.close();

            setTimeout(function () { newWin.close(); }, 10);
        });
    </script>*@
<script>
    $(document).ready(function(){
      

        if(@Model.TranServiceId==2) //PCPNDT
        {
            var data = {
                TransactionId:  $('#hfTransactionId').val(),
                Type:'Grant'

        }
            var url = '@Url.Action("GetDeptUserInspectionQuestions", "DepartmentUser", new { Area = "Department" })';
        var jqxhr = $.post(url, data, function () { })
            .done(function (response) {

                var json;
                if (response instanceof Object)
                    json = response;
                else
                    json = $.parseJSON(response);
                console.log(json);
                BindFacilityData(json);

            })
            .fail(function (jqxhr, status, error) {
                var err = status + ", " + error;
                console.log("Get inspectionlist, Request Failed: " + err);
            });
        }


    })
    function BindFacilityData(json) {

        $('.FacilityName').text(json.Table[0].ApplicantName);
        $('.FacilityAddress').text(json.Table[0].FacilityAddress);
        $('.FacilityPhone').text(json.Table[0].FacilityPhone);
        $('.FacilityEmail').text(json.Table[0].FacilityEmail);
        $('.ApplicantName').text(json.Table[0].ApplicantName);
        $('.Qualification').text(json.Table[0].Qualification);
        $('.ApplicantAddress').text(json.Table[0].ApplicantAddress);
        $('.ApplicantPhone').text(json.Table[0].ApplicantMobile);
        $('.ApplicantEmail').text(json.Table[0].ApplicantEmail);



        $('.EquipmentList').find("tr:gt(0)").remove();
        var tr;
        debugger;

        tr = $('<tr/>');
        tr.append("<th style=text-align:center>SL NO</th>");
        tr.append("<th style=text-align:center;>Name</th>");
        tr.append("<th style=text-align:center;width:10%>SerialNumber</th>");
        tr.append("<th style=text-align:center;width:10%>Model</th>");
        tr.append("<th style=text-align:center;width:10%>Make</th>");
        $(".EquipmentList").append(tr) ;
        console.log('Table length:'+json.Table3.length);
        for (var i = 0; i < json.Table3.length; i++) {

            tr = $('<tr/>');
            tr.append("<td style=text-align:center;>" + (i + 1) + "&nbsp;" + " </td>");
            tr.append("<td style=text-align:center;>" + json.Table3[i].Name + " </td>");
            tr.append("<td style=text-align:center;>" + json.Table3[i].SerialNumber + " </td>");
            tr.append("<td style=text-align:center;>" + json.Table3[i].MachineModel + " </td>");
            tr.append("<td style=text-align:center;>" + json.Table3[i].Make + " </td>");

            $('.EquipmentList').append(tr);
        }

        $('.EmployeeList').find("tr:gt(0)").remove();
        var tr;

        tr = $('<tr/>');
        tr.append("<th style=text-align:center>SL NO</th>");
        tr.append("<th style=text-align:center;>Name</th>");
        tr.append("<th style=text-align:center;width:10%>Designation</th>");
        tr.append("<th style=text-align:center;width:10%>Experience</th>");
        tr.append("<th style=text-align:center;width:15%>Registration Number</th>");
        $(".EmployeeList").append(tr) ;

        for (var i = 0; i < json.Table3.length; i++) {
            var name = json.Table4[i].Name;
            if(json.Table4[i].SubDesignation != 'None')
                name = json.Table4[i].SubDesignation + '. ' + json.Table4[i].Name;
            tr = $('<tr/>');
            tr.append("<td style=text-align:center;>" + (i + 1) + "&nbsp;" + " </td>");
            tr.append("<td style=text-align:center;>" + name + " </td>");
            tr.append("<td style=text-align:center;>" + json.Table4[i].Designation + " </td>");
            tr.append("<td style=text-align:center;>" + json.Table4[i].Experience + " </td>");
            tr.append("<td style=text-align:center;>" + json.Table4[i].RegistrationNumber + " </td>");

            $('.EmployeeList').append(tr);
        }



    }
</script>
<script>
    $('#btnDownloadEnclosures').click(function () {
        var url = '@Url.Action("DownloadEnclosures", "Generic", new { Area = "" })';
        var data = { TransactionId: $('#hfTransactionId').val()}
        var jqxhr = $.getJSON(url,data, function () { })
            .done(function (response) {
                var json;
                if (response instanceof Object)
                    json = response;
                else
                    json = $.parseJSON(response);
                $('#divViewQueries').modal('show');
                // Clear all existing rows
                $('#tblQueryLog').find("tr:gt(0)").remove();

                if (json != undefined) {

                    for (var i = 0; i < json.length; i++) {
                        var path = json[i].UploadedFilePath;
                        var index = path.indexOf("/");
                        var displayFileName = path.substring(index + 1, path.length);
                        var fileLink = '@Html.Raw(Html.ActionLink("displaytext", "DownloadFile", "Generic", new { Area = "", path = "filepath", downloadName = "downloadfilename" }, null))';

                        fileLink = fileLink.replace("displaytext", displayFileName);
                        fileLink = fileLink.replace("filepath", json[i].UploadedFilePath);
                        fileLink = fileLink.replace("downloadfilename", displayFileName);

                        var tr;
                        tr = $('<tr/>');
                        tr.append("<td>" + (i + 1) + "</td>")
                        tr.append("<td>" + json[i].Type + "</td>")
                        tr.append("<td>" + json[i].Description + "</td>")
                        tr.append("<td>" + fileLink + "</td>")
                        tr.append("<td>" + ToJavaScriptDate(json[i].CreatedOn) + "</td>")
                        $("[id$=tblQueryLog]").append(tr)
                    }

                }


            })
        .fail(function (jqxhr, status, error) {
            var err = status + ", " + error;
            console.log("GetQueryData Request Failed: " + err);
        });
    });


</script>

<script type="text/javascript">
    var hasMissingDocuments=false;
    $('input[type="radio"][name="rbDocumentsForAck"]').on('ifChecked', function (e) {
            if (this.value == 'AllDocumentsCleared') {
                $('#divMissingDocsList').hide();
                hasMissingDocuments=false;
    //$('#btnGenerateAckCertificate').prop('disabled', false);
            }
            else {
               $('#divMissingDocsList').show();
                hasMissingDocuments=true;
   // $('#btnGenerateAckCertificate').prop('disabled', true);
            }
        });
    var adtnlfile=null;var accomdationfile=null;var establishmentfile=null;var serviceofferedfile=null;var stafffile=null;var equipmentfile=null;
    var facilitiesfile=null;
    var allFileNames=null;
    
    $('input:checkbox[name="chkAccommodationFiles"]').on('ifChecked', function () {
       accomdationfile = this.value;
        allFileNames = allFileNames + ","+ accomdationfile;
    });
     $('input:checkbox[name="chkEstablishmentFiles"]').on('ifChecked', function () {
         establishmentfile = this.value;
        allFileNames = allFileNames + ","+ establishmentfile;
    });
    $('input:checkbox[name="chkServicesOfferedFiles"]').on('ifChecked', function () {
       serviceofferedfile = this.value;
        allFileNames = allFileNames + ","+ serviceofferedfile;
    });
     $('input:checkbox[name="chkStaffFiles"]').on('ifChecked', function () {
        stafffile = this.value;
    allFileNames = allFileNames + ","+ stafffile;
    });
    $('input:checkbox[name="chkEquipmentsFiles"]').on('ifChecked', function () {
        equipmentfile = this.value;
    allFileNames = allFileNames + ","+ equipmentfile;
    });
    $('input:checkbox[name="chkFacilitiesFiles"]').on('ifChecked', function () {
        facilitiesfile = this.value;
    allFileNames = allFileNames + ","+ facilitiesfile;
    });
    $('input:checkbox[name="chkAdditionalFiles"]').on('ifChecked', function () {
          adtnlfile = this.value;
            allFileNames = allFileNames + ","+ adtnlfile;
    });


     $('input:checkbox[name="chkAdditionalFiles"]').on('ifUnchecked', function () {
          adtnlfile = null;
    });
    $('input:checkbox[name="chkAccommodationFiles"]').on('ifUnchecked', function () {
       accomdationfile = null;
    });
     $('input:checkbox[name="chkEstablishmentFiles"]').on('ifUnchecked', function () {
         establishmentfile = null;
    });
    $('input:checkbox[name="chkServicesOfferedFiles"]').on('ifUnchecked', function () {
       serviceofferedfile =null;
    });
     $('input:checkbox[name="chkStaffFiles"]').on('ifUnchecked', function () {
        stafffile = null;
    });
    $('input:checkbox[name="chkEquipmentsFiles"]').on('ifUnchecked', function () {
        equipmentfile = null;
    });
    $('input:checkbox[name="chkFacilitiesFiles"]').on('ifUnchecked', function () {
        facilitiesfile = null;
    });

    $(function () {
    /*
            $('input:radio[name=rbDocumentsForAck]:checked').change(function () {
             debugger;
            if ($('input[name="rbDocumentsForAck"]:checked').val() == 'AllDocumentsCleared') {
                $('#divMissingDocsList').hide();
            }
            else if ($('input[name="rbDocumentsForAck"]:checked').val() == 'MissingDocuments') {
                 $('#divMissingDocsList').show();
            }
        });
    */
    });

    $('#btnGenerateAck').click(function(e){
        e.preventDefault();
            if(hasMissingDocuments == false)
            {
                $('#divMissingDocsList').hide();
                $('#divGenerateAck').modal('show');
            }
            else
            {
                $('#divMissingDocsList').show();
            }    
    });
    /*
        if(adtnlfile==null || accomdationfile==null || establishmentfile == null ||serviceofferedfile == null || stafffile=null ||
            equipmentfile==null || facilitiesfile == null)
        {
            alert('Please Check Atleast One Missing File!')
            return;
        }
        else
        {
            allFileNames = adtnlfile +"," + accomdationfile +"," + establishmentfile +"," + serviceofferedfile +"," + stafffile +"," + equipmentfile +"," + facilitiesfile;
        } 
    

     $('#btnGenerateAckCertificate1').click(function(e){
        e.preventDefault();  
        if(adtnlfile ==null || accomdationfile==null || establishmentfile == null ||serviceofferedfile == null || stafffile=null || equipmentfile==null || facilitiesfile == null)
        {
            alert('Please Check Atleast One Missing File!');
            return;
        }
        else
        {
            allFileNames = adtnlfile + "," + accomdationfile +"," + establishmentfile +"," + serviceofferedfile +"," + stafffile +"," + equipmentfile +"," + facilitiesfile;
            GenerateAckCertificate($('#hfTransactionId').val(),'Transaction',allFileNames);
        } 
        
    });    
    */

    function GenerateAckCertificate(Id, TableName) {
        debugger;
    ShowSpinner();
        if(hasMissingDocuments == true && allFileNames == null)
    {
    alert('Please Check atleast One Checkbox!');
    return;
    }
        var url = '@Url.Action("GetAcknowledgeCertificate", "Application", new { Area = "User" })';
        var data = {
       
            TransactionId: Id,
            TableName: TableName,
            IsMissingDocuments : hasMissingDocuments,
            AllFileNames : allFileNames
        };
        var jqxhr = $.post(url, data, function () { }, "html")
        .done(function (response) {
            var notificationModel = GetModalJSON();
            notificationModel.Title = "Acknowledge Certificate";
            notificationModel.BodyContent = response;
            notificationModel.IsLargeModal = true;
            ShowModal(notificationModel);

            $('#btnForward').prop('disabled',false);
            $('#btnGenerateAck').prop('disabled',true);
            $('#divGenerateAck').modal('hide');

        })
        .fail(function (jqxhr, status, error) {
            var err = status + ", " + error;
            console.log("GenerateAcknowledgeCertificate Request Failed: " + err);
        });
    }
   // $('input[type=radio][name=rbDocumentsForAck]').change(function() {
   
  
    
</script>

<script>



    function CheckforEnableSubmit() {

        var application = @Html.Raw(Json.Encode(Model));
        var result = false;
        if(application.HasAppliedforAPMCE)
            result = ValidateAPMCECompleted();   //CheckforAPMCEComplete();

        if(application.HasAppliedforPCPNDT)
            result = ValidatePCPNDTCompleted();   // CheckforPCPNDTComplete();

        if(application.HasAppliedforBloodBank)
            result =  ValidateForm27CCompleted();   //ChekforBloodBankForm27C();

        if(application.HasAppliedforBloodBankForm27E)
            result =  ValidateForm27ECompleted(); //ChekforBloodBankForm27E();

        if(application.HasAppliedforHomeopathicDrugStore)
            result =ValidateHomeopathyCompleted();    // ChekforHomeopathyDrugStore();

        if(application.HasAppliedforOrganTransplantation)
            result=true;
        if(application.HasAppliedforBioCapstone)
            result= ValidateBioCapstoneCompleted();       ///CheckforBioCapstoneComplete();
        if(application.HasAppliedforAllopathicDrugStoreForm19)
            result=CheckforAllopathicDrugStoreForm19Complete();
        if(application.HasAppliedforAllopathicDrugStoreForm19C)
            result=CheckforAllopathicDrugStoreForm19cComplete();

        return result;
        //if(result)
        //    $('#btnPreview').removeAttr("disabled");
        //else
        //    $('#btnPreview').attr('disabled', 'disabled');
    }

    $('#btnPreview').on('click', function () {

        var result= true; //CheckforEnableSubmit();
        if(result==true)
        {
            var url = '@Url.Action("PreviewApplication", "License", new { Area = "User" })';
            var data = {
                applicationType : 'Grant' @*'@Model.ApplicationType'*@
            };
            var jqxhr = $.post(url, data, function () { }, 'html')
            .done(function (response) {
                StopSpinner();
                var notificationModel = GetModalJSON();
                notificationModel.Title = "Application Preview";
                notificationModel.BodyContent = response;
                notificationModel.IsLargeModal = true;
                ShowModal(notificationModel);
            })
            .fail(function (jqxhr, status, error) {

                var err = status + ", " + error;
                console.log("Preview Application Request Failed: " + err);
            });
        }
    });

</script>


<script>
    $('#btnAddQueryRaise').on('click', function (e) {
            e.preventDefault();
            if($('#txtQuery').val() == "")
            {
                alert('Please Enter Query Details!');
                return;
            }
            //else if($("#txtUploadFile").val() == "")
           // {
            //   alert('Please Upload File!');
           //    return;
          //  }
           // else if($("#txtUploadFile").get(0).files[0] != undefined)
           // {
           //     if(($("#txtUploadFile").get(0).files[0].size/1000) > 3072)
           //     {
            //       alert('Please check File size, limit to below 3 MB');
            //       return;
             //  }
           // }
            var flag=true;
            if (true) {
                var url = '@Url.Action("AddQueryRaiseFile", "DepartmentUser", new { Area = "Department" })';
                var uploadedFile="";
                if (window.FormData != undefined) {
                    if ($("#txtUploadFile").val() != "")
                        uploadedFile = $("#txtUploadFile").get(0).files[0];

                    if(flag==false)
                    {
                        return;
                    }
                    else
                    {
                        // Create FormData object
                    var fileData = new FormData();
                    fileData.append('Description', $('#txtQuery').val());
                    fileData.append('TransactionId', $('#hfTransactionId').val());
                    fileData.append('ApplicationType', 'Grant');
                    if (window.FormData !== undefined) {
                            var uploadedfile = $("#txtUploadFile").get(0).files[0];
                            fileData.append('uploadedFile', uploadedfile);
                        }

                        $.ajax({
                            type: "POST",
                            url: url,
                            data: fileData,
                            contentType: false,
                            processData: false,
                            async: true,
                            success: function (response) {
                                // Clear controls
                                $('#txtQuery').val('')
                                $('#txtUploadFile').val('');

                                if(response != null)
                                {
                                    $('#tblQueryRaise tr').not(function () { return !!$(this).has('th').length; }).remove();

                                    var json = response;

                                    var tr;
                                    //Append each row to html table
                                    for (var i = 0; i < json.length; i++) {
                                        tr = $('<tr/>');
                                        tr.append("<td>" + (i + 1) + "</td>");
                                        //tr.append("<td style='display:none;'>" + json[i].EquipmentId + "</td>");
                                        tr.append("<td>" + json[i].Description + "</td>");
                                        
                                        if(json[i].UploadedFilePath != null)
                                        {
                                            var path = json[i].UploadedFilePath;
                                            var index = path.indexOf("/");
                                            var displayFileName = path.substring(index + 1, path.length);
                                            var fileLink = '@Html.Raw(Html.ActionLink("displaytext", "DownloadFile", "Generic", new { Area = "", path = "filepath", downloadName = "downloadfilename" }, null))';
                                            fileLink = fileLink.replace("displaytext", displayFileName);
                                            fileLink = fileLink.replace("filepath", json[i].UploadedFilePath);
                                            fileLink = fileLink.replace("downloadfilename", displayFileName);
                                            tr.append("<td>" + fileLink + "</td>");
                                        }
                                        else
                                            tr.append("<td>-</td>");
                                        tr.append("<td><input type='button' value='Delete' onclick='DeleteQueryRaise(" + i + ");'/></td>");

                                        $('#tblQueryRaise').append(tr);
                                    }
                                }
                            },
                            failure: function (response) {
                               // alert('failure: ' + response.d);
                                console.log('QueryRaise failure :'+ response.d);
                            },
                            error: function (response) {
                                console.log('Error/QueryRaise Record Already Exists!');
                                return;
                            }
                        });

                    }
                }
                else {
                    console.log('FormData is not supported.');
                    //alert("FormData is not supported.");
                }
            }
        });


    function DeleteQueryRaise(index) {
            if (confirm('Do you really want to delete?')) {
                var url = '@Url.Action("DeleteQueryRaise", "DepartmentUser", new { Area = "Department" })';
                var data = { index: index };
                var jqxhr = $.post(url, data, function () { })
        .done(function (response) {
            var json;
            if (response instanceof Object)
                json = response;
            else
                json = $.parseJSON(response);

            $('#tblQueryRaise tr').not(function () { return !!$(this).has('th').length; }).remove();
            if (json != undefined) {
                var tr;
                //Append each row to html table
                for (var i = 0; i < json.length; i++) {
                    tr = $('<tr/>');
                    tr.append("<td>" + (i + 1) + "</td>");
                                        //tr.append("<td style='display:none;'>" + json[i].EquipmentId + "</td>");
                                        tr.append("<td>" + json[i].Description + "</td>");
                                        
                                        if(json[i].UploadedFilePath != null)
                                        {
                                            var path = json[i].UploadedFilePath;
                                            var index = path.indexOf("/");
                                            var displayFileName = path.substring(index + 1, path.length);
                                            var fileLink = '@Html.Raw(Html.ActionLink("displaytext", "DownloadFile", "Generic", new { Area = "", path = "filepath", downloadName = "downloadfilename" }, null))';
                                            fileLink = fileLink.replace("displaytext", displayFileName);
                                            fileLink = fileLink.replace("filepath", json[i].UploadedFilePath);
                                            fileLink = fileLink.replace("downloadfilename", displayFileName);
                                            tr.append("<td>" + fileLink + "</td>");
                                        }
                                        else
                                            tr.append("<td>-</td>");

                                        tr.append("<td><input type='button' value='Delete' onclick='DeleteQueryRaise(" + i + ");'/></td>");

                                        $('#tblQueryRaise').append(tr);
                }
            }
        }
        )
    .fail(function (jqxhr, status, error) {
        var err = status + ", " + error;
        console.log("Delete QueryRaise Request Failed: " + err);
    });
            }
        }
</script>
