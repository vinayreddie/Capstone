@using Medical.Models;

@{
    ViewBag.Title = "StatuswiseApplicationDetailsIndex";
    Layout = "~/Views/Shared/_AdminLTELayout.cshtml";
}
@{
    UserViewModel user = Session["User"] as UserViewModel;
}
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Status-wise Application Details | Index
    </h1>
</section>
<!-- Main content -->
<section class="content" id="formStatusWiseApplicationDetails">
    <div class="row">
        <div class="col-md-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Status-wise Application Details</h3>
                </div>
                <div class="row">
                    <div class="col-md-2 text-right">
                        <label>From Date</label>
                    </div>
                    <div class="col-md-2">
                        @*@Html.Editor("FromDate",
                        new
                        {
                        htmlAttributes =
                        new { Value = "", id = "FromDate", @class = "form-control has-feedback-left datemask bootstrap-date", placeholder = "yyyy-mm-dd" }
                        })
                        <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                        <span id="inputSuccess2Status2" class="sr-only">(success)</span>*@
                        @Html.Editor("FromDate", new { htmlAttributes = new { @class = "form-control datepicker", @Value = "" } })
                    </div>
                    <div class="col-md-1 text-right">
                        <label>To Date</label>
                    </div>
                    <div class="col-md-2">
                        @*@Html.Editor("ToDate",
                        new
                        {
                        htmlAttributes =
                        new { Value = "", id = "ToDate", @class = "form-control has-feedback-left datemask bootstrap-date", placeholder = "yyyy-mm-dd" }
                        })
                        <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                        <span id="inputSuccess2Status2" class="sr-only">(success)</span>*@
                        @Html.Editor("ToDate", new { htmlAttributes = new { @class = "form-control datepicker", @Value = "" } })
                    </div>
                    @if (user.RoleId != 4)
                    {
                    <div class="col-md-1  text-right">
                        @Html.Label("District", new { @class = "control-label" })
                    </div>
                    <div class="col-md-2">
                        @Html.DropDownList("DistrictID",
                         new SelectList(ViewBag.DistrictList, "Id", "Name"), "All",
                         new { @class = "form-control select2", @style = "width:100%;" })
                    </div>
                    }
                </div>
                <div class="row">
                    <div class="col-md-12 text-center">
                        <input type="button" class="btn btn-primary" value="Search" id="btnSearchData" />
                        &nbsp;&nbsp;<input type="button" class="btn btn-default" value="Clear" id="btnClearData" />
                    </div>
                    <br />
                </div>

                <!-- /.box-header -->
                @using (Html.BeginForm("ExportData", "DepartmentUser", FormMethod.Post))
                {
                    <div class="row">
                        <div class="col-md-12 text-right">
                            <input type="submit" name="btnExportLicensing" style="width: 140px;margin-left:930px;"
                                   value="Export" id="exportLicensing" class="form-control btn-success" />
                        </div>
                    </div>

                    <div class="box-body">
                        <table class="table table-bordered" id="tblStatuswiseApplicationDetailsList">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Application No.</th>
                                    <th>Date of Submission</th>
                                    <th>District</th>
                                    <th>Name of Firm</th>
                                    <th>Name of Person</th>
                                    <th>Mobile No.</th>
                                    <th>Email Id</th>
                                    <th>Current Status</th>
                                    <th>Current Designation</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <!-- /.box-body -->


                }
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
</section>

<script>
   var user;
    $(function () {
        user = @Html.Raw(Json.Encode(Session["User"] as UserModel));
    //$("#tblStatuswiseApplicationDetailsList").DataTable();
   // ApplyDatecssFromdate('FromDate', 'formStatusWiseApplicationDetails');
   // ApplyDatecssTodate('ToDate', 'formStatusWiseApplicationDetails');
            if(user.RoleId == 4)
            {
                BindStatuswiseApplicationDetailsIndex('0001-01-01','0001-01-01',user.DistrictId);
                $('#DistrictID').val(user.DistrictId).change();
                $("#DistrictID").prop("disabled", true);
            }
            else
                BindStatuswiseApplicationDetailsIndex('0001-01-01','0001-01-01',0);
    });
    function ApplyDatecssFromdate(date, form) {

        $('#' + date)
.datepicker({
    format: 'yyyy-mm-dd',
    weekStart: 1,
    clearBtn: true,
    forceParse: false,
    daysOfWeekHighlighted: [0],
    autoclose: true,
    todayHighlight: true,
    startDate: '+0d',
    onSelect: function (selected) {
            var dt = new Date(selected);
            dt.setDate(dt.getDate() + 1);
            $("#txtToInspectionDate").datepicker("option", "minDate", dt);
        }
})
.on('changeDate', function (e) {
    // Revalidate the date field
    try {
        var validator = $("#" + form).validate(); //.valid();
        validator.element("#" + date);
    }
    catch (exception) {
        console.log(exception);
    }
});
    };
     function ApplyDatecssTodate(date, form) {

        $('#' + date)
.datepicker({
    format: 'yyyy-mm-dd',
    weekStart: 1,
    clearBtn: true,
    forceParse: false,
    daysOfWeekHighlighted: [0],
    autoclose: true,
    todayHighlight: true,
    startDate: '+0d',
    onSelect: function (selected) {
            var dt = new Date(selected);
            dt.setDate(dt.getDate() + 1);
            $("#txtToInspectionDate").datepicker("option", "minDate", dt);
        }
})
.on('changeDate', function (e) {
    // Revalidate the date field
    try {
        var validator = $("#" + form).validate(); //.valid();
        validator.element("#" + date);
    }
    catch (exception) {
        console.log(exception);
    }
});
    };


      function BindStatuswiseApplicationDetailsIndex(fromDate,toDate,districtId) {
        var url = '@Url.Action("GetStatuswiseApplicationDetailsIndex", "DepartmentUser", new { Area = "Department" })';
        var data = {
                    FromDate : fromDate,
                    ToDate : toDate,
                    DistrictId : districtId
                };
        var jqxhr = $.post(url, data, function () { })
        .done(function (response) {
            var json;
            if (response instanceof Object)
                json = response;
            else
                json = $.parseJSON(response);

            var table = $('#tblStatuswiseApplicationDetailsList').DataTable();
            table.clear().draw();


            $("#tblStatuswiseApplicationDetailsList tbody").empty();
            var trans = json;
            var tr;
            for (var i = 0; i < json.length; i++) {

                table.row.add([
                    (i + 1),
                    json[i].ApplicationNumber,
                    json[i].SubmissionDate,
                    json[i].District,
                    json[i].NameofFirm,
                    json[i].PersonName,
                    json[i].MobileNo,
                    json[i].EmailId,
                    json[i].StatusName,
                    json[i].CurrentDesignation
                ]);
            }

            table.draw();

            // TODO : Bind data to table
        })
        .fail(function (jqxhr, textStatus, error) {
            var err = textStatus + ", " + error;
            console.log("BindStatuswiseApplicationDetailsIndex Request Failed: " + err);
        });
    }

</script>

<script>
    var gFromDate=null,gToDate=null;
     $('#btnSearchData').click(function(){
    gFromDate= $('#FromDate').val();
    gToDate= $('#ToDate').val();
    //console.log('from Date : '+ gFromDate + " and To Date :"+ gToDate);
    debugger;
    var strDate = null;var fdate = null;
    if($('#FromDate').val() != "")
    {
        strDate = $('#FromDate').val().split('-');
        fdate = new Date(parseInt(strDate[2]), parseInt(strDate[1])-1,parseInt(strDate[0]));
    }
    else
    {
        gFromDate='0001-01-01';
    }
    var endDate = null;var edate = null;
    if($('#ToDate').val() != "")
    {
        endDate =  $('#ToDate').val().split('-');
        edate = new Date(parseInt(endDate[2]), parseInt(endDate[1])-1,parseInt(endDate[0]));
    }
    else
    {
        gToDate='0001-01-01';
    }
    var distId=$('#DistrictID').val();

    console.log('from Date : '+ fdate + " and To Date :"+ edate);

    BindStatuswiseApplicationDetailsIndex(gFromDate,gToDate,distId);

    //if(gFromDate == null || gFromDate == "" || gToDate == null || gToDate == "")
   // {
     //   gFromDate = null;
	  //  gToDate = null
        //alert('Please Enter From/To date Fields!');
        //return;
    //}
    //else if (Date.parse(gFromDate) > Date.parse(gToDate)) {
    //    alert("Invalid Date Range!\nStart Date cannot be after End Date!")
     //   return false;
    //}
    //else if(Date.parse(fdate) > Date.parse(edate))
    //{
    //    alert("Invalid Date Range!\nStart Date cannot be after End Date!")
    //    return false;
    //}
    //else
    //{
       // BindStatuswiseApplicationDetailsIndex(gFromDate,gToDate,distId);
    //}
    });

    $('#btnClearData').click(function(){
        $('#FromDate').val('');
        $('#ToDate').val('');
    });

</script>


