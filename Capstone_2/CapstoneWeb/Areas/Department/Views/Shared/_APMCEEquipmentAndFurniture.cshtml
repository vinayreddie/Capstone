@model Capstone.Models.APMCEViewModel


<div id="divInfraStructure">
    <form id="formInfraStructure">
        @*<div class="row">
            <div class="col-md-1">
                @Html.LabelFor(model => model.InfraStructure.Name, new { @class = "control-label" })
            </div>
            <div class="col-md-3">
                @Html.HiddenFor(model => model.InfraStructure.Id)
                @Html.DisplayFor(model => model.InfraStructure.Name, new { htmlAttributes = new { @class = "form-control" } })

            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.InfraStructure.Quantity, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(model => model.InfraStructure.Quantity, new { htmlAttributes = new { @class = "form-control" } })

            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.InfraStructure.ItemModel, new { @class = "control-label" })
            </div>
            <div class="col-md-2">
                @Html.DisplayFor(model => model.InfraStructure.ItemModel, new { htmlAttributes = new { @class = "form-control" } })

            </div>
        </div>
        <div class="row">
            <div class="col-md-1">
                @Html.LabelFor(model => model.InfraStructure.Remarks, new { @class = "control-label" })
            </div>
            <div class="col-md-3">
                @Html.DisplayFor(model => model.InfraStructure.Remarks, new { htmlAttributes = new { @class = "form-control" } })

            </div>
            <div class="col-md-1">
                @Html.LabelFor(model => model.InfraStructure.UploadedFilePath, new { @class = "control-label" })
            </div>
            <div class="col-md-3">
                @Html.DisplayFor(model => model.InfraStructure.UploadedFilePath, new { @type = "file" })

            </div>


        </div>*@

    </form>
    <fieldset class="scheduler-border">
        <legend class="scheduler-border">Equipment And Furniture</legend>
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-body table-responsive no-padding">
                        <table id="tblInfraStructure" class="table table-hover">
                            <tr>
                                <th>S.No.</th>
                                <th>Name</th>
                                <th>Quantity</th>
                                <th>Model</th>
                                <th>Remarks</th>
                                <th>Uploaded File</th>
                                <th></th>
                            </tr>
                            @if (Model.InfraStructureListLog != null)
                            {
                                for (int i = 0; i < Model.InfraStructureListLog.Count; i++)
                                {
                                    <tr>
                                        <td> @Convert.ToInt32(@i + 1)</td>
                                        <td>@Model.InfraStructureListLog[i].Name</td>
                                        <td>@Model.InfraStructureListLog[i].Quantity</td>
                                        <td>@Model.InfraStructureListLog[i].ItemModel</td>
                                        <td>@Model.InfraStructureListLog[i].Remarks</td>
                                        <td>
                                            @if (Model.InfraStructureListLog[i].UploadedFilePath != null)
                                            {
                                                var addressindex = Model.InfraStructureListLog[i].UploadedFilePath.LastIndexOf("/");
                                                var addressfileName = Model.InfraStructureListLog[i].UploadedFilePath.Substring(addressindex + 1);
                                                @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.InfraStructureListLog[i].UploadedFilePath, downloadName = addressfileName }, null);
                                            }
                                        </td>
                                        @*<td><input type='button' value='Delete' onclick='DeleteInfraStructure(@i);' /></td>*@
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
        </div>
    </fieldset>
    @*<div class="row">
        <div class="col-md-12 text-right">
            <input type="button" value="Clear" id="btnInfraStructureClear" class="btn btn-default" />
            <input type="button" value="Save" id="btnInfraStructureSave" class="btn btn-primary" />
        </div>
    </div>*@
</div>

