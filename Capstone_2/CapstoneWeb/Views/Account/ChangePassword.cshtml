@using Capstone.Models
@model LoginModel
@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_AdminLTELayout.cshtml";
}

<section class="content-header">
    <h1>
        Change Password Details
    </h1>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <form id="formChangePassword">
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Change Password Details</legend>
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.Username, new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-6">
                            <input type="text" id="txtUsername" class="form-control" value="@Model.Username" disabled />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.HiddenFor(model => model.Id)
                            @Html.LabelFor(model => model.Password, new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-4">
                            <input type="password" id="txtPassword" class="form-control" value="" autocomplete="off" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-2  text-right">
                            @Html.LabelFor(model => model.Password, "Confirm Password", new { @class = "control-label" })
                            <span style="color:red">*</span>
                        </div>
                        <div class="col-md-4">
                            <input type="password" id="txtConfirmPassword" class="form-control" value="" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 text-center">
                            <input type="button" id="btnChangepasswordClear" value="Clear" class="btn btn-default" /> &nbsp;&nbsp;&nbsp;
                            <input type="button" id="btnUpdatePassword" value="Change Password" class="btn btn-primary" />
                        </div>
                    </div>
                </fieldset>
            </form>
        </div>
        <!-- /.col -->

    </div>
    <div>
        <h4>NOTE: <span style="color:red">*</span> fields are mandatory.</h4>
    </div>
    @*<div class="row text-right">
            <input type="button" id="btnPreview" value="Preview & Submit" class="btn btn-success" />
        </div>*@
</section>

<script>
    $(function () {
        if (@Model.Id > 0) {
            $('#hfId').val(@Model.Id);
        }
    });
</script>
@*Update*@
<script>
    var userModel = @Html.Raw(Json.Encode(Model));
    var UserId=userModel.Id;

    $('#btnUpdatePassword').click(function (e) {
             
      
        var strval = $('#txtPassword').val();

        var passwordStrengthReg = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@@#$!%&**?])[A-Za-z\d@@#$!%^&*?]{8,30}$/);
        if($('#txtPassword').val() =="" ||  $('#txtConfirmPassword').val() == "")
        {
            alert('Please Enter Password (or) Confirm Password!');
            return;
        }
        else if (!passwordStrengthReg.test(strval)) {
            alert('Password should have\nminimum 8 characters\nat least 1 lowercase\nat least 1 uppercase\nat least 1 special character\nat least 1 numeric');
            return;
        }
        else if($('#txtPassword').val() != $('#txtConfirmPassword').val())
        {
            alert('Confirm Password must be Same as Password!'); //Passwords do not match.
            return;
        }
        else {          
                $('#btnUpdatePassword').attr('disabled', true);  
                var url = '@Url.Action("ChangeUserPassword", "Account", new { Area = "" })';
                var model = {
                    Id: UserId, // $('#hfId').val()
                    Password: $('#txtPassword').val(),
                    userName: $('#txtUsername').val()
                }
                var jqxhr = $.post(url, model, function () { })
           .done(function (data) {

                ShowModal(data);
              // ShowMessage(data);
                $('#btnUpdatePassword').removeAttr('disabled');
               
           })
       .fail(function (jqxhr, status, error) {
           var err = status + ", " + error;
           console.log("Change password Request Failed: " + err);
       });

            }
        });

    function ClearPasswordDetails()
    {
        $('#txtUsername').val('');
        $('#txtPassword').val('');
        $('#txtConfirmPassword').val('');
    }
</script>



