@model  Capstone.Models.PCPNDTViewModel

<div class="row">
    <div class="col-md-12">
        <!-- Custom Tabs -->
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tabApplicant" data-toggle="tab">Applicant</a></li>
                @*<li><a href="#tabEstablishment" data-toggle="tab">Establishment</a></li>*@
                <li><a href="#tabFacility" data-toggle="tab">Facility for Registration</a></li>
                <li><a href="#tabTests" data-toggle="tab">Tests</a></li>
                <li><a href="#tabEquipment" data-toggle="tab">Equipment</a></li>
                <li><a href="#tabFacilities" data-toggle="tab">Facilities for Test</a></li>
                <li><a href="#tabEmployee" data-toggle="tab">Employees</a></li>
                <li><a href="#tabOwnership" data-toggle="tab">Ownership & Institution</a></li>
                <li><a href="#tabDeclaration" data-toggle="tab">Declaration</a></li>
                <li><a href="#tabEnclosures" data-toggle="tab">Enclosures</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tabApplicant">
                    <form id="formApplicant">
                        <div class="row">
                            <div class="col-md-8"></div>
                            <div class="col-md-4">
                                <div>
                                    @if (!string.IsNullOrEmpty(Model.ApplicantModel.ApplicantPhoto))
                                    {
                                        //var Image =Url.Content( "~/Uploads/" + Model.ApplicantModel.ApplicantPhoto);
                                        <img id="targetImg" src='@Url.Content( "~/Uploads/" + Model.ApplicantModel.ApplicantPhoto)' style="height:100px;width:100px;margin-left:12px" />
                                    }

                                </div>
                            </div>


                        </div>
                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.ApplicantModel.Name, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.Name)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.ApplicantModel.ApplicantRole, new { @class = "control-label" })
                            </div>
                            @if(Model.ApplicantModel.ApplicantRole != "Others")
                            {
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.ApplicantRole)
                            </div>
                            }
                            else
                            {
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.ApplicantRoleOther)
                            </div>
                            }
                            @*<div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.ApplicantRole)
                            </div>
                            
                                <div class="col-md-1" >
                                    @Html.LabelFor(model => model.ApplicantModel.ApplicantRoleOther, new { @class = "control-label" })
                                </div>*@
                               
                            
                            
                        </div>
                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.ApplicantModel.DistrictId, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.DistrictName)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.ApplicantModel.MandalId, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.MandalName)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.ApplicantModel.VillageId, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.VillageName)
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.ApplicantModel.Aadhar, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.Aadhar)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.ApplicantModel.PAN, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.PAN)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.ApplicantModel.HouseNumber, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.HouseNumber)
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.ApplicantModel.StreetName, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.StreetName)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.ApplicantModel.PINCode, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.ApplicantModel.PINCode)
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.ApplicantModel.AadharCardPath, new { @class = "control-label" })
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-2">                                
                                @if (!string.IsNullOrEmpty(Model.ApplicantModel.AadharCardPath))
                                {
                                    var addressindex = Model.ApplicantModel.AadharCardPath.LastIndexOf("/");
                                    var addressfileName = Model.ApplicantModel.AadharCardPath.Substring(addressindex + 1);
                                    @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.ApplicantModel.AadharCardPath, downloadName = addressfileName },
                            null
                            );
                                }                               
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.ApplicantModel.PANCardPath, new { @class = "control-label" })
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-2">
                                @if (!string.IsNullOrEmpty(Model.ApplicantModel.PANCardPath))
                                {
                                    var layoutindex = Model.ApplicantModel.PANCardPath.LastIndexOf("/");
                                    var layoutfileName = Model.ApplicantModel.PANCardPath.Substring(layoutindex + 1);
                                    @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                        new { Area = "", path = Model.ApplicantModel.PANCardPath, downloadName = layoutfileName }, null);
                                }
                            </div>
                        </div>
                        @*<div class="row">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.ApplicantModel.ApplicantPhoto, new { @class = "control-label" })
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-2">
@if (!string.IsNullOrEmpty(Model.ApplicantModel.ApplicantPhoto))
{ var Image = "/Uploads/" + Model.ApplicantModel.ApplicantPhoto;
                                <img id="targetImg" src=@Image style="height:100px;width:100px;margin-left:12px" />
}

                            </div>

                           

                        </div>*@

                    </form>
                </div>

                
                <div class="tab-pane" id="tabFacility">
                    <form id="formFacility">
                        <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Facilities</legend>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-3">
                                    @Html.CheckBox("facilitytype", new { @value = "1" }) Generic Counselling Center
                                </div>
                                <div class="col-md-3">
                                    @Html.CheckBox("facilitytype", new { @value = "2" }) Ultra Sound Clinic
                                </div>
                                <div class="col-md-4">
                                    @Html.CheckBox("facilitytype", new { @value = "3" }) Imaging Center
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-offset-1 col-md-3">
                                    @Html.CheckBox("facilitytype", new { @value = "4" }) Genetic Clinic
                                </div>
                                <div class="col-md-3">
                                    @Html.CheckBox("facilitytype", new { @value = "5" }) Generic Laboratory
                                </div>
                                <div class="col-md-4">
                                    @Html.CheckBox("facilitytype", new { @value = "6" }) Assisted Reproductive Technology (ART)
                                </div>
                            </div>
                        </fieldset>
                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.Name, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.Name)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.DistrictId, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.DistrictName)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.MandalId, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.MandalName)
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.VillageId, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.VillageName)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.HouseNumber, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.HouseNumber)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.StreetName, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.StreetName)
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.Phone, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.Phone)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.Email, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.Email)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.Fax, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.Fax)
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.Telegraph, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.Telegraph)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.Telex, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.Telex)
                            </div>
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.PINCode, new { @class = "control-label" })
                            </div>
                            <div class="col-md-3">
                                @Html.DisplayFor(model => model.FacilityModel.PINCode)
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.FacilityModel.AddressProofPath, new { @class = "control-label" })
                            </div>
                            <div class="col-md-1">
                                @Html.DisplayFor(model => model.FacilityModel.AddressProofType, new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">
                                @if (!string.IsNullOrEmpty(Model.FacilityModel.AddressProofPath))
                                {
                                    var addressindex = Model.FacilityModel.AddressProofPath.LastIndexOf("/");
                                    var addressfileName = Model.FacilityModel.AddressProofPath.Substring(addressindex + 1);
                                    @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.FacilityModel.AddressProofPath, downloadName = addressfileName },
                            null
                            );
                                }
                            </div>
                            <div class="col-md-1"></div>
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.FacilityModel.BuildingLayoutPath, new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">
                                @if (!string.IsNullOrEmpty(Model.FacilityModel.BuildingLayoutPath))
                                {
                                    var layoutindex = Model.FacilityModel.BuildingLayoutPath.LastIndexOf("/");
                                    var layoutfileName = Model.FacilityModel.BuildingLayoutPath.Substring(layoutindex + 1);
                                    @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
 new { Area = "", path = Model.FacilityModel.BuildingLayoutPath, downloadName = layoutfileName }, null);
                                }
                                @Html.ValidationMessageFor(model => model.FacilityModel.BuildingLayoutPath, "", new { @class = "text-danger" })
                            </div></div>
                            <div class="row">
                                <div class="col-md-1">
                                    @Html.LabelFor(model => model.FacilityModel.OwnerShipPath, new { @class = "control-label" })
                                </div>
                                <div class="col-md-1">
                                    @Html.DisplayFor(model => model.FacilityModel.OwnershipType, new { @class = "control-label" })
                                </div>
                                <div class="col-md-2">
                                    @if (!string.IsNullOrEmpty(Model.FacilityModel.OwnerShipPath))
                                    {
                                        var addressindex = Model.FacilityModel.OwnerShipPath.LastIndexOf("/");
                                        var addressfileName = Model.FacilityModel.OwnerShipPath.Substring(addressindex + 1);
                                        @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.FacilityModel.OwnerShipPath, downloadName = addressfileName },
                            null
                            );
                                    }
                                </div>
                            </div>
                           
                    </form>
                </div>
                <!-- /.tab-pane -->
                <div id="tabTests" class="tab-pane">
                    <form id="formTests">
                        @{
                            if (Model.FacilityModel.Faclities != null)
                            {
                                if (Model.FacilityModel.Faclities.Contains("4") || Model.FacilityModel.Faclities.Contains("5"))
                                {
                                <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">Invasive</legend>
                                    <div class="row">
                                        <div class="col-md-offset-1 col-md-3">
                                            @Html.HiddenFor(model => model.TestsModel.Id)
                                            @Html.CheckBox("testinvasive", new { @value = "1" }) Amniocentesis
                                        </div>
                                        <div class="col-md-3">
                                            @Html.CheckBox("testinvasive", new { @value = "2" }) Biochemical
                                        </div>
                                        <div class="col-md-4">
                                            @Html.CheckBox("testinvasive", new { @value = "3" }) Chorionic Villi Aspiration
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-offset-1 col-md-3">
                                            @Html.CheckBox("testinvasive", new { @value = "4" }) Molecular Studies
                                        </div>
                                        <div class="col-md-3">
                                            @Html.CheckBox("testinvasive", new { @value = "5" }) Chromosomal
                                        </div>
                                    </div>
                                </fieldset>
                                }
                                if (Model.FacilityModel.Faclities.Contains("2") || Model.FacilityModel.Faclities.Contains("3")
                                    || Model.FacilityModel.Faclities.Contains("4") || Model.FacilityModel.Faclities.Contains("5"))
                                {
                                <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">Non-Invasive</legend>
                                    <div class="row">
                                        <div class="col-md-offset-1 col-md-3">
                                            @Html.CheckBox("testnoninvasive", new { @value = "6" }) Ultra Sonography
                                        </div>
                                    </div>
                                </fieldset>
                                }
                                if (Model.FacilityModel.Faclities.Contains("1") || Model.FacilityModel.Faclities.Contains("6"))
                                {
                                <fieldset class="scheduler-border" id="fsTestsRemarks">
                                    <legend class="scheduler-border">Remarks</legend>
                                    <div class="row">
                                        <div class="col-md-offset-1 col-md-1">
                                            @Html.LabelFor(model => model.TestsModel.Remarks, new { @class = "control-label" })
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DisplayFor(model => model.TestsModel.Remarks)
                                        </div>
                                    </div>
                                </fieldset>
                                }
                            }
                        }
                    </form>
                </div>
                <!-- /.tab-pane -->
                <div class="tab-pane" id="tabEquipment">
                    <fieldset class="scheduler-border">
                        <legend class="scheduler-border">Equipment List</legend>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="box">
                                    <div class="box-body table-responsive no-padding">
                                        <table id="tblEquiments" class="table table-hover">
                                            <tr>
                                                <th>S.No.</th>
                                                <th>Name</th>
                                                <th>Serial No.</th>
                                                <th>Model</th>
                                                <th>Make</th>
                                                <th>Type</th>
                                                @*<th>Uploaded File</th>*@
                                                <th>Invoice</th>
                                                <th>NOC</th>
                                                <th>Transfer</th>
                                                <th>Installation</th>
                                                <th>Image</th>
                                            </tr>
                                            @if (Model.EquipmentList != null)
                                            {
                                                for (int i = 0; i < Model.EquipmentList.Count; i++)
                                                {
                                                    <tr>
                                                        <td>@Convert.ToInt32(i + 1)</td>
                                                        <td>@Model.EquipmentList[i].Name</td>
                                                        <td>@Model.EquipmentList[i].SerialNumber</td>
                                                        <td>@Model.EquipmentList[i].MachineModel</td>
                                                        <td>@Model.EquipmentList[i].Make</td>
                                                        <td>@Model.EquipmentList[i].Type</td>
                                                        @*<td>
                                                            @if (!string.IsNullOrEmpty(Model.EquipmentList[i].UploadedFilePath))
                                                            {
                                                                var layoutindex = Model.EquipmentList[i].UploadedFilePath.LastIndexOf("/");
                                                                var layoutfileName = Model.EquipmentList[i].UploadedFilePath.Substring(layoutindex + 1);
                                                            @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
new { Area = "", path = Model.EquipmentList[i].UploadedFilePath, downloadName = layoutfileName }, null);
                                                            }
                                                        </td>*@
                                                        <td>
                                                            @if (Model.EquipmentList[i].InvoicePath != null && Model.EquipmentList[i].InvoicePath != "")
                                                            {
                                                                var layoutindex = Model.EquipmentList[i].InvoicePath.LastIndexOf("/");
                                                                var layoutfileName = Model.EquipmentList[i].InvoicePath.Substring(layoutindex + 1);
                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
new { Area = "", path = Model.EquipmentList[i].InvoicePath, downloadName = layoutfileName }, null);
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (Model.EquipmentList[i].NocFilePath != null && Model.EquipmentList[i].NocFilePath != "")
                                                            {
                                                                var layoutindex = Model.EquipmentList[i].NocFilePath.LastIndexOf("/");
                                                                var layoutfileName = Model.EquipmentList[i].NocFilePath.Substring(layoutindex + 1);
                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
new { Area = "", path = Model.EquipmentList[i].NocFilePath, downloadName = layoutfileName }, null);
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (Model.EquipmentList[i].TransferCertificatePath != null && Model.EquipmentList[i].TransferCertificatePath != "")
                                                            {
                                                                var layoutindex = Model.EquipmentList[i].TransferCertificatePath.LastIndexOf("/");
                                                                var layoutfileName = Model.EquipmentList[i].TransferCertificatePath.Substring(layoutindex + 1);
                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
new { Area = "", path = Model.EquipmentList[i].TransferCertificatePath, downloadName = layoutfileName }, null);
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (Model.EquipmentList[i].InstallationCerticatePath != null && Model.EquipmentList[i].InstallationCerticatePath != "")
                                                            {
                                                                var layoutindex = Model.EquipmentList[i].InstallationCerticatePath.LastIndexOf("/");
                                                                var layoutfileName = Model.EquipmentList[i].InstallationCerticatePath.Substring(layoutindex + 1);
                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
new { Area = "", path = Model.EquipmentList[i].InstallationCerticatePath, downloadName = layoutfileName }, null);
                                                            }
                                                        </td>
                                                        <td>
                                                            @if (Model.EquipmentList[i].ImagePath != null && Model.EquipmentList[i].ImagePath != "")
                                                            {
                                                                var layoutindex = Model.EquipmentList[i].ImagePath.LastIndexOf("/");
                                                                var layoutfileName = Model.EquipmentList[i].ImagePath.Substring(layoutindex + 1);
                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
new { Area = "", path = Model.EquipmentList[i].ImagePath, downloadName = layoutfileName }, null);
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            }

                                        </table>
                                    </div>
                                    <!-- /.box-body -->
                                </div>
                                <!-- /.box -->
                            </div>
                        </div>
                    </fieldset>
                </div>

                <div id="tabFacilities" class="tab-pane">
                    <form id="formFacilities">
                        @{
                            if (Model.FacilityModel.Faclities != null)
                            {
if (Model.FacilityModel.Faclities.Contains("4") || Model.FacilityModel.Faclities.Contains("5"))
                            {
                                <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">Tests</legend>
                                    <div class="row">
                                        <div class="col-md-offset-1 col-md-3">
                                            @Html.CheckBox("facilitytest", new { @value = "1" }) Amniocentesis
                                        </div>
                                        <div class="col-md-3">
                                            @Html.CheckBox("facilitytest", new { @value = "2" }) Ultra Sound
                                        </div>
                                        <div class="col-md-4">
                                            @Html.CheckBox("facilitytest", new { @value = "3" }) Chorionic Villi Aspiration
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-offset-1 col-md-3">
                                            @Html.CheckBox("facilitytest", new { @value = "4" }) Foetal Biopsy
                                        </div>
                                        <div class="col-md-3">
                                            @Html.CheckBox("facilitytest", new { @value = "5" }) Foetoscopy
                                        </div>
                                        <div class="col-md-4">
                                            @Html.CheckBox("facilitytest", new { @value = "6" }) Cordocentesis
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">Studies</legend>
                                    <div class="row">
                                        <div class="col-md-offset-1 col-md-3">
                                            @Html.CheckBox("facilitystudies", new { @value = "7" }) Chromosomal Studies
                                        </div>
                                        <div class="col-md-3">
                                            @Html.CheckBox("facilitystudies", new { @value = "8" }) Biochemical Studies
                                        </div>
                                        <div class="col-md-4">
                                            @Html.CheckBox("facilitystudies", new { @value = "9" }) Molecular Studies
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-offset-1 col-md-3">
                                            @Html.CheckBox("facilitystudies", new { @value = "10" }) Premplantatioin Genetic Diagnosis
                                        </div>
                                    </div>
                                </fieldset>
                            }
                            if (Model.FacilityModel.Faclities.Contains("1") || Model.FacilityModel.Faclities.Contains("2")
                                || Model.FacilityModel.Faclities.Contains("3") || Model.FacilityModel.Faclities.Contains("6"))
                            {
                                <fieldset class="scheduler-border" id="fsFacilityRemarks">
                                    <legend class="scheduler-border">Remarks</legend>
                                    <div class="row">
                                        <div class="col-md-offset-1 col-md-1">
                                            @Html.LabelFor(model => model.FacilitiesModel.Remarks, new { @class = "control-label" })
                                        </div>
                                        <div class="col-md-6">
                                            @Html.DisplayFor(model => model.FacilitiesModel.Remarks)
                                        </div>
                                    </div>
                                </fieldset>
                                }
                            }
                        }
                    </form>
                </div>

                <div id="tabEmployee" class="tab-pane">
                    <fieldset class="scheduler-border">
                        <legend class="scheduler-border">Employee List</legend>
                        <div class="row">
                            <div class="col-xs-12">
                                <div class="box">
                                    <div class="box-body table-responsive no-padding">
                                        <table id="tblEmployees" class="table table-hover">
                                            <tr>
                                                <th>#</th>
                                                <th>Name</th>
                                                <th>Designation</th>
                                                <th>Experience</th>
                                                <th>Registration Number</th>
                                                <th></th>
                                                <th></th>
                                            </tr>
                                            @if (Model.EmployeeList != null)
                                            {
                                                for (int i = 0; i < Model.EmployeeList.Count; i++)
                                                {
                                                    <tr>
                                                        <td> @Convert.ToInt32(@i + 1)</td>
                                                        <td>
                                                            @{
                                                            var name = string.Empty;
                                                            if (Model.EmployeeList[i].SubDesignation != "None" )
                                                            {
                                                                name = Model.EmployeeList[i].Name + ". " + Model.EmployeeList[i].SubDesignation;
                                                            }
                                                            else
                                                            { name = Model.EmployeeList[i].Name; }
                                                        }@name
                                                    </td>

                                                        <td>@Model.EmployeeList[i].DesignationName</td>
                                                        @*<td>@Model.EmployeeList[i].Experience</td>*@
                                                        <td>@Model.EmployeeList[i].ExpYears Years, @Model.EmployeeList[i].ExpMonths Months, @Model.EmployeeList[i].ExpDays Days</td>
                                                        <td>@Model.EmployeeList[i].RegistrationNumber</td>
                                                        <td>
                                                            <input type='button' value='View Uploads' onclick='ViewEmployeeUploads(@i);' />
                                                            @*@if (Model.EmployeeList[i].UploadedFilePath != null)
                                                            {
                                                                var addressindex = Model.EmployeeList[i].UploadedFilePath.LastIndexOf("/");
                                                                var addressfileName = Model.EmployeeList[i].UploadedFilePath.Substring(addressindex + 1);
                                                                @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                         new { Area = "", path = Model.EmployeeList[i].UploadedFilePath, downloadName = addressfileName }, null);
                                                            }*@
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </table>
                                    </div>
                                    <!-- /.box-body -->
                                </div>
                                <!-- /.box -->
                            </div>
                        </div>
                    </fieldset>
                </div>

                <div id="tabOwnership" class="tab-pane">
                    <form id="formOwnership">
                        <div class="row">
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.InstitutionModel.OwnershipTypeId, new { @class = "control-label" })
                            </div>
                            @if (Model.InstitutionModel.OwnershipTypeId == 5)
                            {
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.InstitutionModel.OwnershipOthers)
                                </div>
                            }
                            else
                            {
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.InstitutionModel.OwnershipTypeName)
                                </div>
                            }
                            
                            <div class="col-md-1">
                                @Html.LabelFor(model => model.InstitutionModel.InstitutionTypeId, new { @class = "control-label" })
                            </div>
                            @if (Model.InstitutionModel.InstitutionTypeId == 5)
                            {
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.InstitutionModel.InstitutionOthers)
                                </div>
                            }
                            else
                            {
                                <div class="col-md-3">
                                    @Html.DisplayFor(model => model.InstitutionModel.InstitutionTypeName)
                                </div>
                            }
                           
                            <div class="col-md-2 text-right">
                                @Html.LabelFor(model => model.InstitutionModel.TotalWorkArea, new { @class = "control-label" })
                            </div>
                            <div class="col-md-2">
                                @Html.DisplayFor(model => model.InstitutionModel.TotalWorkArea)
                            </div>
                        </div>
                        <div class="row" id="divOwnershipUploads" hidden >
                            <div class="col-md-12">
                                <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">File Uploads</legend>
                                    <div class="row" id="divAffidavitFile">
                                        <div class="col-md-offset-1 col-md-3">
                                            Affidavit
                                        </div>
                                        <div class="col-md-4">
                                            @if (!string.IsNullOrEmpty(Model.InstitutionModel.AffidavitDocPath))
                                            {
                                                var index = Model.InstitutionModel.AffidavitDocPath.LastIndexOf("/");
                                                var fileName = Model.InstitutionModel.AffidavitDocPath.Substring(index + 1);
                                                @Html.ActionLink(fileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.InstitutionModel.AffidavitDocPath, downloadName = fileName },
                            null
                            );
                                            }
                                        </div>
                                    </div>
                                    <div class="row" id="divAssociationFile">
                                        <div class="col-md-offset-1 col-md-3">
                                            <span id="spanArticlesofAssociation">Articles of Association</span>
                                        </div>
                                        <div class="col-md-4">
                                            @if (!string.IsNullOrEmpty(Model.InstitutionModel.ArticleDocPath))
                                            {
                                                var index = Model.InstitutionModel.ArticleDocPath.LastIndexOf("/");
                                                var fileName = Model.InstitutionModel.ArticleDocPath.Substring(index + 1);
                                                @Html.ActionLink(fileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.InstitutionModel.ArticleDocPath, downloadName = fileName },
                            null
                            );
                                            }
                                        </div>
                                    </div>
                                    <div class="row" id="divStudyCertificateFiles">
                                        <div class="col-md-offset-1 col-md-3">
                                            Study Certificate
                                        </div>                                       
                                    </div>
                                    <div class="row" id="divStudyCertificatesList">
                                        <div class="col-md-offset-1 col-md-10">
                                            <table id="tblStudyCertificates" >
                                                <tr>
                                                    <th>S.No.</th>
                                                    <th>Document</th>
                                                    <th></th>
                                                </tr>
                                                @*<tbody></tbody>*@
                                                @if (Model.InstitutionModel.StudyCertificateDocPaths != null)
                                                {
                                                    for (int i = 0; i < Model.InstitutionModel.StudyCertificateDocPaths.Count; i++)
                                                    {
                                                        <tr>
                                                            <td>@Convert.ToInt32(i + 1)</td>
                                                            <td>
                                                                @if (Model.InstitutionModel.StudyCertificateDocPaths[i].DocumentPath != null)
                                                                {
                                                                    var layoutindex = Model.InstitutionModel.StudyCertificateDocPaths[i].DocumentPath.LastIndexOf("/");
                                                                    var layoutfileName = Model.InstitutionModel.StudyCertificateDocPaths[i].DocumentPath.Substring(layoutindex + 1);
                                                                   
                                                                    @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
new { Area = "", path = Model.InstitutionModel.StudyCertificateDocPaths[i].DocumentPath, downloadName = layoutfileName }, null);
                                                                    
                                                                }
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </table>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                    </form>
                </div>

                <div id="tabDeclaration" class="tab-pane">
                    <form id="formDeclaration">
                        <div class="row">
                            <div class="col-md-offset-1 col-md-10">
                                <p style="text-indent: 50px; text-align:justify;line-height: 30px;">
                                    I, Sh./Smt./Kum./Dr. <b>@Model.DeclarationModel.Name</b> Son/Daughter/Wife of
                                    <b>@Model.DeclarationModel.SonOf</b> aged <b>@Model.DeclarationModel.Age years</b>
                                    resident of <b>@Model.DeclarationModel.ResidentOf</b> working as (indicate designation)
                                    <b>@Model.DeclarationModel.Designation</b> in (indicate name of the organization to be registered)
                                    <b>@Model.DeclarationModel.Organization</b> hereby declare that I have read and understood the
                                    prenatal Diagnostic techniques (Regulation and Prevention of Miuse) Act, 1994 (57 of 1994) and
                                    Pre Natal Diagnostic Techniques (Regulation and Prevention of Miuse) Rules, 1996.
                                </p>
                                <p style="text-indent: 50px; text-align:justify;line-height: 30px;"> I also undertake to explain the said Act and Rules to all employees of the Genetic Counselling Center / Genetic
                                Laboratory / Generic Clinic / Ultrasound Clinic / Imaging Center in respect of which registration
                                is sought and to ensure that act and Rules are fully compiled with.
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-1">
                                Date
                            </div>
                            <div class="col-md-2">
                                <b>@Model.DeclarationModel.Date.ToString("dd-MM-yyyy")</b>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-1">
                                Place
                            </div>
                            <div class="col-md-2">
                                <b>@Model.DeclarationModel.Place</b>
                            </div>
                            
                                
                           
                            <div class="col-md-offset-5 col-md-4" style="text-align:center">
                                <div>
                                    <img id="imgSignature" src="@Url.Content("~/Uploads/"+ Model.DeclarationModel.SignatureDocPath)" style="height:50px;width:50px;margin-left:12px" />
                                </div>
                                   <b>@Model.DeclarationModel.Signature</b>
                                <br />
                                Name, Designation and Signature of the<br />
                                person who conduct the scanning
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12">
                                <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">Other Uploads</legend>
                                    <div class="box">
                                        <div class="box-body table-responsive no-padding">
                                            <table id="tblOtherUploadsPCPNDT" class="table table-hover">
                                                <tr>
                                                    <th>S.No.</th>
                                                    <th>Type</th>
                                                    <th>Uploaded File</th>
                                                    <th></th>
                                                </tr>
                                                @if (Model.DeclarationModel.OtherUploadsList != null)
                                                {
                                                    for (int i = 0; i < Model.DeclarationModel.OtherUploadsList.Count; i++)
                                                    {
                                                        <tr>
                                                            <td> @Convert.ToInt32(@i + 1)</td>
                                                            <td>@Model.DeclarationModel.OtherUploadsList[i].UploadType</td>
                                                            <td>
                                                                @if (Model.DeclarationModel.OtherUploadsList[i].DocumentPath != null)
                                                                {
                                                                    var addressindex = Model.DeclarationModel.OtherUploadsList[i].DocumentPath.LastIndexOf("/");
                                                                    var addressfileName = Model.DeclarationModel.OtherUploadsList[i].DocumentPath.Substring(addressindex + 1);
                                                                    @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.DeclarationModel.OtherUploadsList[i].DocumentPath, downloadName = addressfileName }, null);
                                                                }
                                                            </td>

                                                        </tr>
                                                    }
                                                }
                                            </table>
                                        </div>
                                        <!-- /.box-body -->
                                    </div>
                                    <!-- /.box -->
                                    </fieldset>
</div>
                        </div>

                    </form>
                </div>

                <div id="tabEnclosures" class="tab-pane">
                    <form id="formEnclosures">

                        @if (!string.IsNullOrEmpty(Model.ApplicantModel.ApplicantPhoto) || !string.IsNullOrEmpty(Model.ApplicantModel.AadharCardPath) || !string.IsNullOrEmpty(Model.ApplicantModel.PANCardPath))
                        {
                            <fieldset class="scheduler-border">
                                <legend class="scheduler-border">Applicant</legend>
                                <div class="row">
                                    <div class="col-md-8"></div>
                                    <div class="col-md-4">
                                        <div>
                                            @if (!string.IsNullOrEmpty(Model.ApplicantModel.ApplicantPhoto))
                                            {
                                               // var Image = Url.Content( "~/Uploads/" + Model.ApplicantModel.ApplicantPhoto);
                                                <img id="targetImg1"
                                                     src='@Url.Content("~/Uploads/" + Model.ApplicantModel.ApplicantPhoto)' style="height:100px;width:100px;margin-left:12px" />
                                            }

                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-3">
                                        @Html.LabelFor(model =>model.ApplicantModel.AadharCardPath, new { @class = "control-label" })
                                        <span style="color:red">*</span>
                                    </div>
                                    <div class="col-md-2">
                                        @if (!string.IsNullOrEmpty(Model.ApplicantModel.AadharCardPath))
                                        {
                                            var addressindex =Model.ApplicantModel.AadharCardPath.LastIndexOf("/");
                                            var addressfileName =Model.ApplicantModel.AadharCardPath.Substring(addressindex + 1);
                                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",new
                                            {
                                                Area = "",
                                                path = Model.ApplicantModel.AadharCardPath,downloadName = addressfileName
                                            },null);
                                        }
                                    </div>
                                    <div class="col-md-3">
                                        @Html.LabelFor(model =>model.ApplicantModel.PANCardPath, new { @class = "control-label" })
                                        <span style="color:red">*</span>
                                    </div>
                                    <div class="col-md-2">
                                        @if (!string.IsNullOrEmpty(Model.ApplicantModel.PANCardPath))
                                        {
                                            var layoutindex = Model.ApplicantModel.PANCardPath.LastIndexOf("/");
                                            var layoutfileName =Model.ApplicantModel.PANCardPath.Substring(layoutindex + 1);
                                            @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",new
                                            {
                                                Area = "",path = Model.ApplicantModel.PANCardPath,
                                                downloadName= layoutfileName }, null);
                                        }
                                    </div>
                                </div>

                            </fieldset>
                        }
                        @if (!string.IsNullOrEmpty(Model.FacilityModel.AddressProofPath) || !string.IsNullOrEmpty(Model.FacilityModel.BuildingLayoutPath))
                        {
                            <fieldset class="scheduler-border">
                                <legend class="scheduler-border">Facilities</legend>

                                <div class="row">
                                    <div class="col-md-2">
                                        @Html.LabelFor(model =>model.FacilityModel.AddressProofPath, new { @class = "control-label" })
                                    </div>
                                    @*<div class="col-md-1">
                                        @Html.DisplayFor(model => model.FacilityModel.AddressProofType, new { @class = "control-label" })
                                    </div>*@
                                    <div class="col-md-2">
                                        @if (!string.IsNullOrEmpty(Model.FacilityModel.AddressProofPath))
                                        {
                                            var addressindex =Model.FacilityModel.AddressProofPath.LastIndexOf("/");
                                            var addressfileName =Model.FacilityModel.AddressProofPath.Substring(addressindex + 1);
                                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                            new
                                            {
                                                Area = "",
                                                path = Model.FacilityModel.AddressProofPath,downloadName = addressfileName
                                            },null
                                            );
                                        }
                                        @Html.ValidationMessageFor(model =>model.FacilityModel.AddressProofPath, "", new { @class = "text-danger"})
                                    </div>
                                    <div class="col-md-2">
                                        @Html.LabelFor(model =>model.FacilityModel.BuildingLayoutPath, new { @class = "control-label"})
                                    </div>
                                    <div class="col-md-2">
                                        @if (!string.IsNullOrEmpty(Model.FacilityModel.BuildingLayoutPath))
                                        {
                                            var layoutindex = Model.FacilityModel.BuildingLayoutPath.LastIndexOf("/");
                                            var layoutfileName = Model.FacilityModel.BuildingLayoutPath.Substring(layoutindex + 1);
                                            @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                            new
                                            {
                                                Area = "", path = Model.FacilityModel.BuildingLayoutPath, downloadName = layoutfileName
                                            }, null);
                                        }
                                        @Html.ValidationMessageFor(model =>model.FacilityModel.BuildingLayoutPath, "", new {  @class = "text-danger" })
                                </div>
                            </div>

                                <div class="row">
                                    <div class="col-md-1">
                                        @Html.LabelFor(model => model.FacilityModel.OwnerShipPath, new { @class = "control-label" })
                                    </div>
                                    @*<div class="col-md-1">
                                        @Html.DisplayFor(model => model.FacilityModel.OwnershipType, new { @class = "control-label" })
                                    </div>*@
                                    <div class="col-md-2">
                                        @if (!string.IsNullOrEmpty(Model.FacilityModel.OwnerShipPath))
                                        {
                                            var addressindex = Model.FacilityModel.OwnerShipPath.LastIndexOf("/");
                                            var addressfileName = Model.FacilityModel.OwnerShipPath.Substring(addressindex + 1);
                                            @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.FacilityModel.OwnerShipPath, downloadName = addressfileName },
                            null
                            );
                                        }
                                    </div>
                                </div>

                            </fieldset>
                        }

                        @if(Model.EquipmentList != null)
                        {
                            <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Equipments</legend>
                            <div class="row">
                                <div class="col-xs-12">
                                    <div class="box">
                                        <div class="box-body table-responsive no-padding">
                                            <table id = "tblEquiments" class="table table-hover">
                                                <tr>
                                                    <th>S.No.</th>
                                                    <th>Name</th>
                                                    <th>Invoice</th>
                                                    <th>NOC</th>
                                                    <th>Transfer</th>
                                                    <th>Installation</th>
                                                    <th>Image</th>
                                                </tr>
                                                    @if (Model.EquipmentList != null)
                                                    {
                                                        for (int i = 0; i < Model.EquipmentList.Count; i++)
                                                        {
                                                      <tr>
                                                      @if ((Model.EquipmentList[i].InvoicePath != null && Model.EquipmentList[i].InvoicePath != "") || (Model.EquipmentList[i].NocFilePath != null && Model.EquipmentList[i].NocFilePath != "") || (Model.EquipmentList[i].TransferCertificatePath != null && Model.EquipmentList[i].TransferCertificatePath != "") || (Model.EquipmentList[i].InstallationCerticatePath != null && Model.EquipmentList[i].InstallationCerticatePath != "") || (Model.EquipmentList[i].ImagePath != null && Model.EquipmentList[i].ImagePath != ""))
                                                      {
                                                          <td> @Convert.ToInt32(i + 1) </td>
                                                          <td> @Model.EquipmentList[i].Name.ToUpper() </td>
                                                            <td>
                                                                @if (Model.EquipmentList[i].InvoicePath != null && Model.EquipmentList[i].InvoicePath != "")
                                                                {
                                                                    var layoutindex = Model.EquipmentList[i].InvoicePath.LastIndexOf("/");
                                                                    var layoutfileName = Model.EquipmentList[i].InvoicePath.Substring(layoutindex + 1);
                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                                                       new
                                                                                       {
                                                                                           Area = "",
                                                                                           path = Model.EquipmentList[i].InvoicePath,
                                                                                           downloadName = layoutfileName
                                                                                       }, null);
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (Model.EquipmentList[i].NocFilePath != null && Model.EquipmentList[i].NocFilePath != "")
                                                                {
                                                                    var layoutindex = Model.EquipmentList[i].NocFilePath.LastIndexOf("/");
                                                                    var layoutfileName = Model.EquipmentList[i].NocFilePath.Substring(layoutindex + 1);
                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                                                       new
                                                                                       {
                                                                                           Area = "",
                                                                                           path = Model.EquipmentList[i].NocFilePath,
                                                                                           downloadName = layoutfileName
                                                                                       }, null);
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (Model.EquipmentList[i].TransferCertificatePath != null && Model.EquipmentList[i].TransferCertificatePath != "")
                                                                {
                                                                    var layoutindex = Model.EquipmentList[i].TransferCertificatePath.LastIndexOf("/");
                                                                    var layoutfileName = Model.EquipmentList[i].TransferCertificatePath.Substring(layoutindex + 1);

                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                                                       new
                                                                                       {
                                                                                           Area = "",
                                                                                           path = Model.EquipmentList[i].TransferCertificatePath,
                                                                                           downloadName = layoutfileName
                                                                                       }, null);
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (Model.EquipmentList[i].InstallationCerticatePath != null && Model.EquipmentList[i].InstallationCerticatePath != "")
                                                                {
                                                                    var layoutindex = Model.EquipmentList[i].InstallationCerticatePath.LastIndexOf("/");
                                                                    var layoutfileName = Model.EquipmentList[i].InstallationCerticatePath.Substring(layoutindex + 1);
                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                                                       new
                                                                                       {
                                                                                           Area = "",
                                                                                           path = Model.EquipmentList[i].InstallationCerticatePath,
                                                                                           downloadName = layoutfileName
                                                                                       }, null);
                                                                }
                                                            </td>
                                                            <td>
                                                                @if (Model.EquipmentList[i].ImagePath != null && Model.EquipmentList[i].ImagePath != "")
                                                                {
                                                                    var layoutindex = Model.EquipmentList[i].ImagePath.LastIndexOf("/");
                                                                    var layoutfileName = Model.EquipmentList[i].ImagePath.Substring(layoutindex + 1);
                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                                                       new
                                                                                       {
                                                                                           Area = "",
                                                                                           path = Model.EquipmentList[i].ImagePath,
                                                                                           downloadName = layoutfileName
                                                                                       }, null);
                                                                }
                                                            </td>
                                                      }
                                                        </tr>
                                                        }
                                                    }

                                            </table>
                                        </div>
                                        <!-- /.box-body -->
                                    </div>
                                    <!-- /.box -->
                                </div>
                            </div>
                        </fieldset>
                        }

                        @if (Model.EmployeeList != null)
                        {                           
                            <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">Employee List</legend>
                                    <div class="row">
                                        <div class="col-xs-12">
                                            <div class="box">
                                                <div class="box-body table-responsive no-padding">
                                                    <table id = "tblEmployees1" class="table table-hover">
                                                        <tr>
                                                            <th>#</th>
                                                            <th>Name</th>
                                                            <th>Designation</th>
                                                            <th>Experience</th>
                                                            <th>Registration Number</th>
                                                            <th></th>
                                                        </tr>
                                                        @if (Model.EmployeeList != null)
                                                        {
                                                            for (int j = 0; j < Model.EmployeeList.Count; j++)
                                                            {
                                                                <tr>
                                                                    <td> @Convert.ToInt32(@j + 1) </td>
                                                                    <td>@{
                                                                        var name = string.Empty;
                                                                        if (Model.EmployeeList[j].SubDesignation != "None")
                                                                        {
                                                                            name = Model.EmployeeList[j].Name + ". " + Model.EmployeeList[j].SubDesignation;
                                                                        }
                                                                        else
                                                                        { name = Model.EmployeeList[j].Name; }
                                                                    }@name
                                                                    </td>
                                                                    <td> @Model.EmployeeList[j].DesignationName </td>
                                                                    <td>@Model.EmployeeList[j].ExpYears Years, @Model.EmployeeList[j].ExpMonths Months, @Model.EmployeeList[j].ExpDays Days</td>
                                                                    <td> @Model.EmployeeList[j].RegistrationNumber </td>
                                                                    <td><input type = 'button' value = 'View Uploads' onclick = 'ViewEmployeeUploads(@j); ' /></td >
                                                                 </tr>
                                                              }
                                                         }
                                                      </table>
                                                </div>
                                                <!-- /.box-body -->
                                            </div>
                                            <!-- /.box -->
                                        </div>
                                    </div>
                                </fieldset>                        
                        }                        

                        @if(!string.IsNullOrEmpty(Model.InstitutionModel.AffidavitDocPath) || !string.IsNullOrEmpty(Model.InstitutionModel.ArticleDocPath))
                        {
                            <fieldset class="scheduler-border">
                            <legend class="scheduler-border">Ownership& Institution</legend>
                            <div class="row" id="divAffidavitFile1">
                                <div class="col-md-offset-1 col-md-3">
                                    Affidavit
                                </div>
                                <div class="col-md-4">
                                    @if(!string.IsNullOrEmpty(Model.InstitutionModel.AffidavitDocPath))
                                    {
                                        var index =Model.InstitutionModel.AffidavitDocPath.LastIndexOf("/");
                                        var fileName =Model.InstitutionModel.AffidavitDocPath.Substring(index + 1);
                                        @Html.ActionLink(fileName,"DownloadFile", "Generic",
                                         new { Area = "", path =Model.InstitutionModel.AffidavitDocPath, downloadName = fileName },
                                         null
                                         );
                                    }
                                </div>
                            </div>
                            <div class="row" id="divAssociationFile1">
                                <div class="col-md-offset-1 col-md-3">
                                    <span id = "spanArticlesofAssociation1" > Articles of Association</span>
                                    </div>
                                <div class="col-md-4">
                                    @if(!string.IsNullOrEmpty(Model.InstitutionModel.ArticleDocPath))
                                    {
                                        var index =Model.InstitutionModel.ArticleDocPath.LastIndexOf("/");
                                        var fileName = Model.InstitutionModel.ArticleDocPath.Substring(index + 1);
                                        @Html.ActionLink(fileName,"DownloadFile", "Generic",
                                         new { Area = "", path =Model.InstitutionModel.ArticleDocPath, downloadName = fileName },
                                         null
                                         );
                                    }
                                </div>
                            </div>
                            <div class="row" id="divStudyCertificateFiles1">
                                <div class="col-md-offset-1 col-md-3">
                                    Study Certificate
                                </div>
                            </div>
                            <div class="row" id="divStudyCertificatesList1">
                                <div class="col-md-offset-1 col-md-10">
                                    <table id = "tblStudyCertificates1" >
                                        <tr>
                                            <th> S.No.</th>
                                            <th> Document </th>
                                        </tr>
                                            @*<tbody></tbody>*@
                                        @if(Model.InstitutionModel.StudyCertificateDocPaths != null)
                                        {
                                            for (int k = 0; k < Model.InstitutionModel.StudyCertificateDocPaths.Count; k++)
                                        {
                                        <tr>
                                            <td>@Convert.ToInt32(k + 1)</td>
                                            <td>
                                                @if (Model.InstitutionModel.StudyCertificateDocPaths[k].DocumentPath != null)
                                                {
                                                    var layoutindex = Model.InstitutionModel.StudyCertificateDocPaths[k].DocumentPath.LastIndexOf("/");
                                                    var layoutfileName = Model.InstitutionModel.StudyCertificateDocPaths[k].DocumentPath.Substring(layoutindex + 1);
                                                            @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                         new
                                                         {
                                                             Area = "",
                                                             path = Model.InstitutionModel.StudyCertificateDocPaths[k].DocumentPath,
                                                             downloadName = layoutfileName
                                                         }, null);
                                                }
                                            </td>
                                        </tr>
                                        }
                                        }
                                        </table>
                                    </div>
                                </div>

                            </fieldset>
                        }

                        
                           <fieldset class="scheduler-border">
                                    <legend class="scheduler-border">Declarations</legend>
                               <div class="row">
                                   <div class="pull-right col-md-3">
                                       <img id="imgSignature" src="@Url.Content("~/Uploads/"+ Model.DeclarationModel.SignatureDocPath)" style="height:50px;width:50px;margin-left:12px" />
                                   </div>
                               </div>
                               @if (Model.DeclarationModel.OtherUploadsList != null)
                               {
                                 <div class="box">
                                        <div class="box-body table-responsive no-padding">
                                            <table id="tblOtherUploadsPCPNDT1" class="table table-hover">
                                                <tr>
                                                    <th>S.No.</th>
                                                    <th>Type</th>
                                                    <th>Uploaded File</th>
                                                    <th></th>
                                                </tr>
                                                @if (Model.DeclarationModel.OtherUploadsList != null)
                                                {
                                                    for (int i = 0; i < Model.DeclarationModel.OtherUploadsList.Count; i++)
                                                    {
                                                        <tr>
                                                            <td> @Convert.ToInt32(@i + 1)</td>
                                                            <td>@Model.DeclarationModel.OtherUploadsList[i].UploadType</td>
                                                            <td>
                                                                @if (Model.DeclarationModel.OtherUploadsList[i].DocumentPath != null)
                                                                {
                                                                    var addressindex = Model.DeclarationModel.OtherUploadsList[i].DocumentPath.LastIndexOf("/");
                                                                    var addressfileName = Model.DeclarationModel.OtherUploadsList[i].DocumentPath.Substring(addressindex + 1);
                                                                    @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                            new { Area = "", path = Model.DeclarationModel.OtherUploadsList[i].DocumentPath, downloadName = addressfileName }, null);
                                                                }
                                                            </td>

                                                        </tr>
                                                    }
                                                }
                                            </table>
                                        </div>
                                        <!-- /.box-body -->
                                    </div> }
                                    <!-- /.box -->
                                </fieldset>                              
                       
                    </form>
                </div>

            </div>
            <!-- /.tab-content -->
        </div>
        <!-- nav-tabs-custom -->
    </div>
    <!-- /.col -->

</div>

<script>
    $(function () {
       
        //Following 3 methods are defined in ApplicationForm View
        BindFacility();
        BindTests();
        //BindTests1();
        BindFacilities();
        BindInstitutionData();
    });

    function BindFacility() {
        // Bind Facilities in Facility tab
        $.each($("input[name='facilitytype']"), function () {
            $(this).parent('[class*="icheckbox"]').iCheck('disable');
        });

        var facilities = '@Model.FacilityModel.Faclities';
        if (facilities.length > 0) {
            var arrFacilities = facilities.split(',');
            for (var i = 0; i < arrFacilities.length; i++) {
                $('input:checkbox[name="facilitytype"][value="' + arrFacilities[i] + '"]').iCheck('check');
            }
        }
    }


    function BindTests() {
      
        // Bind Invasive in Tests tab
        $.each($("input[name='testinvasive']"), function () {
            $(this).parent('[class*="icheckbox"]').iCheck('disable');
        });

        var invasives = '@Model.TestsModel.InvasiveTests';
        if (invasives.length > 0) {
            var arrInvasives = invasives.split(',');
            for (var i = 0; i < arrInvasives.length; i++) {
                $('input:checkbox[name="testinvasive"][value="' + arrInvasives[i] + '"]').iCheck('check');
            }
        }

        // Bind Non-Invasive in Tests tab
        $.each($("input[name='testnoninvasive']"), function () {
            $(this).parent('[class*="icheckbox"]').iCheck('disable');
        });

        var noninvasives = '@Model.TestsModel.NonInvasiveTests';
        console.log('Non Invasive');
        console.log(noninvasives);
        if (noninvasives.length > 0) {
            var arrNonInvasives = noninvasives.split(',');
            for (var i = 0; i < arrNonInvasives.length; i++) {
                $('input:checkbox[name="testnoninvasive"][value="' + arrNonInvasives[i] + '"]').iCheck('check');
            }
        }
    }

    function BindFacilities() {
        // Bind Tests in Facilities tab
        $.each($("input[name='facilitytest']"), function () {
            $(this).parent('[class*="icheckbox"]').iCheck('disable');
        });

        var tests = '@Model.FacilitiesModel.Tests';
        if (tests.length > 0) {
            var arrTests = tests.split(',');
            for (var i = 0; i < arrTests.length; i++) {
                $('input:checkbox[name="facilitytest"][value="' + arrTests[i] + '"]').iCheck('check');
            }
        }

        // Bind Studies in Facilities tab
        $.each($("input[name='facilitystudies']"), function () {
            $(this).parent('[class*="icheckbox"]').iCheck('disable');
        });

        var studies = '@Model.FacilitiesModel.Studies';
        if (studies.length > 0) {
            var arrStudies = studies.split(',');
            for (var i = 0; i < arrStudies.length; i++) {
                $('input:checkbox[name="facilitystudies"][value="' + arrStudies[i] + '"]').iCheck('check');
            }
        }
    }

    function BindInstitutionData(){
        debugger;
        var InstitutionModel = @Html.Raw(Json.Encode(Model.InstitutionModel));
        ShowHideOwnershipUploads(InstitutionModel.OwnershipTypeId);
        console.log(InstitutionModel);
        var documentJson = InstitutionModel.StudyCertificateDocPaths;


        if (documentJson != undefined) {
            $('#tblStudyCertificates').show();
            $('#tblStudyCertificates tr').not(function () { return !!$(this).has('th').length; }).remove();
            var tr;
            //Append each row to html table
            for (var i = 0; i < documentJson.length; i++) {

                tr = $('<tr/>');
                tr.append("<td>" + (i + 1) + "</td>");

                var path = documentJson[i].DocumentPath;
                var index = path.indexOf("/");
                var displayFileName = path.substring(index + 1, path.length);
                var fileLink = '@Html.Raw(Html.ActionLink("displaytext", "DownloadFile", "Generic", new { Area = "", path = "filepath", downloadName = "downloadfilename" }, null))';
                fileLink = fileLink.replace("displaytext", displayFileName);
                fileLink = fileLink.replace("filepath", path);
                fileLink = fileLink.replace("downloadfilename", displayFileName);
                tr.append("<td>" + fileLink + "</td>");
                //tr.append("<td><input type='button' value='Delete' onclick='DeleteStudyCertificate(" + documentJson[i].Id + ");'/></td>");

                $('#tblStudyCertificates').append(tr);
            }
            if(InstitutionModel.OwnershipTypeId > 0){
                $('#divOwnershipUploads').show();
                switch (InstitutionModel.OwnershipTypeId) {
                    case '1':
                    case 1 :
                        {
                            $('#divAffidavitFile').show();
                            $('#divStudyCertificateFiles').show();
                            $('#divAssociationFile').hide();
                            $('#divAffidavitFile1').show();
                            $('#divStudyCertificateFiles1').show();
                            $('#divAssociationFile1').hide();
                        }
                        break;
                    case '2':
                    case '3':
                    case '5':
                    case 2:
                    case 3:
                    case 5:{
                        $('#divAffidavitFile').show();
                        $('#divStudyCertificateFiles').show();
                        $('#divAssociationFile').show();
                        $('#spanArticlesofAssociation').text('Articles of Association');
                        $('#divAffidavitFile1').show();
                        $('#divStudyCertificateFiles1').show();
                        $('#divAssociationFile1').show();
                        $('#spanArticlesofAssociation1').text('Articles of Association');
                    }
                        break;
                    case '4':
                    case 4:{
                        $('#divAffidavitFile').show();
                        $('#divStudyCertificateFiles').show();
                        $('#divAssociationFile').show();
                        $('#spanArticlesofAssociation').text('Articles of Association/Memorandum of Association');
                        $('#divAffidavitFile1').show();
                        $('#divStudyCertificateFiles1').show();
                        $('#divAssociationFile1').show();
                        $('#spanArticlesofAssociation1').text('Articles of Association/Memorandum of Association');
                    }
                    default:

                }
            }
            else{
                $('#divOwnershipUploads').hide();
            }


            if(InstitutionModel.FormStatus != 0){
                $('#btnInstitutionSave').val('Update');
                $('#btnInstitutionSave').removeClass('btn-primary');
                $('#btnInstitutionSave').addClass('btn-success');
            }
        }
        else{
            $('#tblStudyCertificates').hide();
        }
    }

    function ViewEmployeeUploads(index){
        var url = '@Url.Action("GetEmployeeUploads", "License", new { Area = "User" })';
        var data = { index: index };
        var jqxhr = $.post(url, data, function () { })
.done(function (response) {
    var json;
    if (response instanceof Object)
        json = response;
    else
        json = $.parseJSON(response);

    ShowEmployeeUploads(json);
})
.fail(function (jqxhr, status, error) {
    var err = status + ", " + error;
    console.log("GetEmployeeUploads Request Failed: " + err);
});
    }

    function ShowHideOwnershipUploads(value){
        if(value != ''){
            debugger;
            $('#divOwnershipUploads').show();
            switch (value) {

                case '1':
                case 1:
                    {
                        $('#divAffidavitFile').show();
                        $('#divStudyCertificateFiles').show();
                        $('#divAssociationFile').hide();
                    }
                    break;
                case '2':
                case '3':
                case '5':
                case 2:
                case 3:
                case 5:{
                    $('#divAffidavitFile').show();
                    $('#divStudyCertificateFiles').show();
                    $('#divAssociationFile').show();
                    $('#spanArticlesofAssociation').text('Articles of Association');
                }
                    break;
                case '4':{
                    $('#divAffidavitFile').show();
                    $('#divStudyCertificateFiles').show();
                    $('#divAssociationFile').show();
                    $('#spanArticlesofAssociation').text('Articles of Association/Memorandum of Association');
                }
                default:

            }
        }
        else{
            $('#divOwnershipUploads').hide();
        }
    }

</script>