@model Capstone.Models.PCPNDTLicenseInfoModel
<style>
    .reportheadertext {
        text-align: center;
        font-size: larger;
    }

    .textunderline {
        text-decoration: underline;
    }

    .parabody {
        text-indent: 50px;
        text-align: justify;
    }

    p {
        text-align: justify;
    }

    .table-wrapper {
        background-image: url(../../Content/images/watermark.jpg);
        /* if the image repeats nicely, tile it, using background-repeat */
        background-repeat: repeat; /* repeat-x, repeat-y and no-repeat are options */
        /* alternatively, you could stretch it to fit the div, using background-size */
        background-size: 100% 100%;
    }
</style>
<div id="divPrint">
    <fieldset class="scheduler-border">
        <legend class="scheduler-border">PCPNDT License</legend>
        <div class="row">
            <b>  <span>ORIGINAL/Duplicate/Renewal</span></b>
            <div style="text-align:center">
                <img src="~/Content/images/logogovts.png" />
            </div>

            <div class="col-md-12" style="text-align:center;">
                <span style="font-size:x-large; color:red;">Government of Telangana</span>
                <br />
                <i>Capstone, Health and Family Welfare Department</i>
                <br />
                <i>The pre-conception and pre-natal diagnostic techniques</i>
                <br />
                <i>(prohibition of sex selection)act, 1994 & rules, 1996</i>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12" style="text-align:center;">
                <span style="font-size:x-large;">FORM B</span>
                <br />
                <i>[See rules 6(2), 6(5) and 8(2)]</i>
                <br />
                <span style="font-size:x-large; color:red;">CERTIFICATE OF REGISTRATION</span>
                <br />
                <i>(To be issued in duplicate)</i>
            </div>
        </div>
        <div class="row">
            <div class="col-md-offset-1 col-md-10">
                <ol>
                    <li>
                        <p>
                            In exercise of the powers conferred under Section 19(1) of the Pre-Natal Diagnostic Techniques
                            (Registration and Prevention of misuse) Act, 1994 (157 of 1994), the Appropriate Authority.
                            <b>@Model.IssuingAuthority</b> here by grants registration to the <b>@Model.Facilities</b> named below
                            for purposes of carrying out Genetic Counselling*/Pre-natal Diagnostic Procedures*/Pre-natal
                            Diagnostic Tests*/Ultrasonography under the aforesaid Act for a period of Five Years ending
                            <b>@Model.LicenseExpiryDate.ToString("dd-MM-yyyy")</b>.
                        </p>
                    </li>
                    <li>
                        <p>
                            This registration is granted subject to the aforesaid Act and Rules there under, and any
                            contravention thereof shall result in suspension or cancellation of this Certificate of
                            Registration before the expiry of the said period of five years apart from prosecution.
                        </p>
                        <ol type="A">
                            <li>
                                <p>
                                    Name and address of the <b>@Model.Facilities</b>, <b>@Model.ApplicantNameAddress</b>.
                                </p>
                            </li>
                            <li>
                                Pre-natal Diagnostic procedures approved
                                <br />
                                @if (Model.NonInvasiveTests != null)
                            {
                                    <b>Non-Invasive</b>
                                    <ol type="i">
                                        @for (int i = 0; i < Model.NonInvasiveTests.Count; i++)
                                            {
                                            <li>@Model.NonInvasiveTests[i]</li>
                                            }
                                    </ol>
                            }
                                @if (Model.InvasiveTests != null)
                            {
                                    <b>Invasive</b>
                                    <ol type="i">
                                        @for (int i = 0; i < Model.InvasiveTests.Count; i++)
                                            {
                                            <li>@Model.InvasiveTests[i]</li>
                                            }
                                    </ol>
                            }
                                @if (Model.TestRemarks != null)
                            {
                                    <b>Remarks</b><br />
                                    @Model.TestRemarks
                            }
                            </li>
                            <li>
                                Pre-natal Diagnostic Tests approved
                                <br />
                                @if (Model.Tests != null)
                            {
                                    <b>Tests</b>
                                    <ol type="i">
                                        @for (int i = 0; i < Model.Tests.Count; i++)
                                            {
                                            <li>@Model.Tests[i]</li>
                                            }
                                    </ol>
                            }
                                @if (Model.Studies != null)
                            {
                                    <b>Studies</b>
                                    <ol type="i">
                                        @for (int i = 0; i < Model.Studies.Count; i++)
                                            {
                                            <li>@Model.Studies[i]</li>
                                            }
                                    </ol>
                            }
                                @if (Model.FacilitiesRemarks != null)
                            {
                                    <b>Remarks</b><br />
                                    @Model.FacilitiesRemarks
                            }
                            </li>
                        </ol>
                    </li>
                    <li>
                        Model and Make of equipments being used<br />
                        (Any change is to be intimated to the Appropriate Authority under Rule 13)
                        <div class="box-body table-responsive no-padding">
                            <strong>Equipments</strong>
                            <table id="tblEquiments" class="table table-condensed">
                                <tr>
                                    <th>S.No.</th>
                                    <th>Name</th>
                                    <th>Serial No.</th>
                                    <th>Model</th>
                                    <th>Make</th>
                                    <th>Type</th>
                                    @*<th>Uploaded File</th>*@
                                </tr>
                                @if (Model.EquipmentList != null)
                            {
                                for (int i = 0; i < Model.EquipmentList.Count; i++)
                                {
                                        <tr>
                                            <td>@Convert.ToInt32(i + 1)</td>
                                            <td>@Model.EquipmentList[i].Name</td>
                                            <td>@Model.EquipmentList[i].SerialNumber</td>
                                            <td>@Model.EquipmentList[i].MachineModel</td>
                                            <td>@Model.EquipmentList[i].Make</td>
                                            <td>@Model.EquipmentList[i].Type</td>
                                            @*<td>
                                                                                            @if (Model.EquipmentList[i].UploadedFilePath != null)
                                                                                            {
                                                                                                var layoutindex = Model.EquipmentList[i].UploadedFilePath.LastIndexOf("/");
                                                                                                var layoutfileName = Model.EquipmentList[i].UploadedFilePath.Substring(layoutindex + 1);
                                                                                                @Html.ActionLink(layoutfileName, "DownloadFile", "Generic",
                                                new { Area = "", path = Model.EquipmentList[i].UploadedFilePath, downloadName = layoutfileName }, null);
                                                                                            }
                                                                                        </td>*@
                                        </tr>
                                }
                            }

                            </table>
                        </div>
                        <strong>Employees</strong>
                        <div class="box-body table-responsive no-padding">
                            <table id="tblEmployees" class="table table-condensed">
                                <tr>
                                    <th>S.No.</th>
                                    <th>Name</th>
                                    <th>Designation</th>
                                    <th>Experience</th>
                                    <th>Registration Number</th>
                                    @*<th>Uploaded File</th>*@
                                </tr>
                                @if (Model.EmployeeList != null)
                            {
                                for (int i = 0; i < Model.EmployeeList.Count; i++)
                                {
                                        <tr>
                                            <td> @Convert.ToInt32(@i + 1)</td>
                                            <td>
                                                @{
                                                    var name = string.Empty;
                                                    if (Model.EmployeeList[i].SubDesignation != "None")
                                                    {
                                                        name = Model.EmployeeList[i].SubDesignation + ". " + Model.EmployeeList[i].Name;
                                                    }
                                                    else
                                                    {
                                                        name = Model.EmployeeList[i].Name;
                                                    }
                                                }
                                                @name
                                            </td>
                                            <td>@Model.EmployeeList[i].DesignationName</td>
                                            <td>@Model.EmployeeList[i].ExpYears Years, @Model.EmployeeList[i].ExpMonths Months, @Model.EmployeeList[i].ExpDays Days</td>
                                            <td>@Model.EmployeeList[i].RegistrationNumber</td>
                                            @*<td>
                                                    @if (Model.EmployeeList[i].UploadedFilePath != null)
                                                    {
                                                        var addressindex = Model.EmployeeList[i].UploadedFilePath.LastIndexOf("/");
                                                        var addressfileName = Model.EmployeeList[i].UploadedFilePath.Substring(addressindex + 1);
                                                        @Html.ActionLink(addressfileName, "DownloadFile", "Generic",
                                                 new { Area = "", path = Model.EmployeeList[i].UploadedFilePath, downloadName = addressfileName }, null);
                                                    }
                                                </td>*@
                                        </tr>
                                }
                            }
                            </table>
                        </div>

                    </li>
                    <li>
                        Registration No. Allotted <b>@Model.LicenseNumber</b> dated <b>@Model.LicenseIssuedDate.ToString("dd-MM-yyyy")</b>
                    </li>
                    @if (Model.ServiceId== 25)
                    {
                        <li>
                            Application has been renewed for the period <b>@Model.LicenseIssuedDate.ToString("dd-MM-yyyy")</b> and <b>@Model.LicenseExpiryDate.ToString("dd-MM-yyyy")</b>
                        </li>
                    }
                   
                </ol>
            </div>
        </div>
        <div class="row">
            <div class="col-md-offset-3 col-md-12">
                <div style="text-align:center;">
                    @{
                    var x = Model.AppropriateAuthority.Split(';');
                    foreach (var item in x)
                    {
                            <div>
                                @item
                            </div>
                    }
                    }
                </div>
            </div>
        </div>

    </fieldset>
</div>

<div class="row">
    <div class="col-md-12" style="text-align:center;">
        <input type="button" id="btnClosePreview" value="Close" data-dismiss="modal" class="btn btn-default" />
        <input type="button" id="btnPrintLicense" value="Print" class="btn btn-primary" />
    </div>
</div>

<script>
    $('#btnPrintLicense').on('click', function (e) {
        debugger;
        printDiv();
    });

    function printDiv() {
        debugger;
        var divToPrint = document.getElementById('divPrint');

        var newWin = window.open('', 'Print-Window');

        newWin.document.open();

        newWin.document.write('<html><body onload="window.print()">' + divToPrint.innerHTML + '</body></html>');

        newWin.document.close();

        setTimeout(function () { newWin.close(); }, 10);

    }
</script>